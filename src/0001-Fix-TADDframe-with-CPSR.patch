From 470e434c53f5804b6f3efec70761e33d867fe7b8 Mon Sep 17 00:00:00 2001
From: Romy Tsoupidi <tsoupidi@kth.se>
Date: Mon, 7 Mar 2022 20:14:26 +0100
Subject: [PATCH 1/1] Fix TADDframe with CPSR.

---
 src/.gitignore                                     |  4 ++-
 src/unison/src/Unison/Target/Thumb.hs              | 10 +++++++
 src/unison/src/Unison/Target/Thumb/Common.hs       |  3 +-
 .../Unison/Target/Thumb/SpecsGen/AlignedPairs.hs   |  1 +
 .../Target/Thumb/SpecsGen/AllInstructions.hs       |  8 ++---
 .../Target/Thumb/SpecsGen/InstructionType.hs       | 14 ++++-----
 .../src/Unison/Target/Thumb/SpecsGen/Itinerary.hs  |  9 +++---
 .../Unison/Target/Thumb/SpecsGen/OperandInfo.hs    |  4 +++
 .../src/Unison/Target/Thumb/SpecsGen/Parent.hs     |  1 +
 .../src/Unison/Target/Thumb/SpecsGen/ReadOp.hs     |  1 +
 .../Unison/Target/Thumb/SpecsGen/ReadWriteInfo.hs  | 34 +++++++++++-----------
 .../Unison/Target/Thumb/SpecsGen/ShowInstance.hs   |  1 +
 .../src/Unison/Target/Thumb/SpecsGen/Size.hs       |  8 ++---
 .../Target/Thumb/SpecsGen/ThumbInstructionDecl.hs  |  1 +
 .../Target/Thumb/SpecsGen/input/arm-manual.yaml    | 14 +++++++++
 src/unison/src/Unison/Target/Thumb/Usages.hs       |  2 ++
 16 files changed, 77 insertions(+), 38 deletions(-)

diff --git a/src/.gitignore b/src/.gitignore
index f27034e..e558747 100644
--- a/src/.gitignore
+++ b/src/.gitignore
@@ -9,4 +9,6 @@ unison-specsgen/build
 *.hi
 *.o
 *.qmake.stash
-*~
\ No newline at end of file
+*~
+\#*\#
+.\#*
diff --git a/src/unison/src/Unison/Target/Thumb.hs b/src/unison/src/Unison/Target/Thumb.hs
index 3a2d3be..62143e7 100644
--- a/src/unison/src/Unison/Target/Thumb.hs
+++ b/src/unison/src/Unison/Target/Thumb.hs
@@ -455,6 +455,16 @@ promoteImplicitOperands
            msOperands = mos'}
 
 promoteImplicitOperands
+  mi @ MachineSingle {msOpcode   = MachineTargetOpc i,
+                      msOperands = mos}
+  | i `elem` [TADDframe] && writesSideEffect i CPSR =
+    let
+      fu   = length $ snd $ operandInfo i
+      mos' = insertAt (mkMachineReg CPSR) (fu - 1) mos
+    in mi {msOpcode = mkMachineTargetOpc (toExplicitCpsrDef i),
+           msOperands = mos'}
+
+promoteImplicitOperands
   mi @ MachineSingle {msOpcode = MachineTargetOpc i, msOperands = mos} =
     let fu   = length $ snd $ operandInfo i
         mos' = if writesSideEffect i CPSR
diff --git a/src/unison/src/Unison/Target/Thumb/Common.hs b/src/unison/src/Unison/Target/Thumb/Common.hs
index 4ae8135..177404c 100644
--- a/src/unison/src/Unison/Target/Thumb/Common.hs
+++ b/src/unison/src/Unison/Target/Thumb/Common.hs
@@ -50,7 +50,8 @@ cpsrMap =
    (T2ANDri, T2ANDri_cpsr),
    (T2TEQrr, T2TEQrr_cpsr),
    (FMSTAT, FMSTAT_cpsr),
-   (T2ADDri, T2ADDri_cpsr)]
+   (T2ADDri, T2ADDri_cpsr),
+   (TADDframe, TADDframe_cpsr)]
 
 defaultMIRPred = [mkMachineImm 14, mkMachineNullReg]
 
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/AlignedPairs.hs b/src/unison/src/Unison/Target/Thumb/SpecsGen/AlignedPairs.hs
index a0797b6..1823257 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/AlignedPairs.hs
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/AlignedPairs.hs
@@ -951,6 +951,7 @@ alignedPairs i ([_, _, _], [_])
 alignedPairs i ([_, _, _, _], [])
   | i `elem` [T2TBB_JT, T2TBH_JT] = []
 alignedPairs i ([_, _], [_, _]) | i `elem` [TADDframe] = []
+alignedPairs i ([_, _], [_, _]) | i `elem` [TADDframe_cpsr] = []
 alignedPairs i ([_, _, _, _], []) | i `elem` [BCCZi64] = []
 alignedPairs i ([_, _, _, _, _, _], []) | i `elem` [BCCi64] = []
 alignedPairs i ([_, _], []) | i `elem` [ITasm, T2IT] = []
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/AllInstructions.hs b/src/unison/src/Unison/Target/Thumb/SpecsGen/AllInstructions.hs
index 35c87d4..f5c7204 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/AllInstructions.hs
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/AllInstructions.hs
@@ -616,10 +616,10 @@ allInstructions
      T2LDMIA_RET_4_9, T2LDMIA_RET_4_10, T2LDMIA_RET_4_11, T2LSLricc,
      T2ADDricc, T2ANDricc, T2ORRricc, T2SUBricc, T2SUBrrcc, T2ADDrrcc,
      T2ADDrscc, Register_class_decl_dummy, TLDRspi_fi, TSTRspi_fi,
-     T2MOVi_source, T2MOVi_demat, T2MOVi_remat, T2MOVi16_source,
-     T2MOVi16_demat, T2MOVi16_remat, T2MOVi32imm_source,
-     T2MOVi32imm_demat, T2MOVi32imm_remat, TMOVi8s_source,
-     TMOVi8s_demat, TMOVi8s_remat, T2ADDri_fi_source_fi,
+     TADDframe_cpsr, T2MOVi_source, T2MOVi_demat, T2MOVi_remat,
+     T2MOVi16_source, T2MOVi16_demat, T2MOVi16_remat,
+     T2MOVi32imm_source, T2MOVi32imm_demat, T2MOVi32imm_remat,
+     TMOVi8s_source, TMOVi8s_demat, TMOVi8s_remat, T2ADDri_fi_source_fi,
      T2ADDri_fi_demat_fi, T2ADDri_fi_remat_fi, T2LDRi12_fi_source_fi,
      T2LDRi12_fi_demat_fi, T2LDRi12_fi_remat_fi, VLDRD_fi_source_fi,
      VLDRD_fi_demat_fi, VLDRD_fi_remat_fi, T2MVNi_source, T2MVNi_demat,
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/InstructionType.hs b/src/unison/src/Unison/Target/Thumb/SpecsGen/InstructionType.hs
index dd8b3f8..cbe2772 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/InstructionType.hs
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/InstructionType.hs
@@ -619,13 +619,13 @@ instructionType i
        T2UMULL, T2UQADD16, T2UQADD8, T2UQASX, T2UQSAX, T2UQSUB16,
        T2UQSUB8, T2USAD8, T2USADA8, T2USAT, T2USAT16, T2USAX, T2USUB16,
        T2USUB8, T2UXTAB, T2UXTAB16, T2UXTAH, T2UXTB, T2UXTB16, T2UXTH,
-       TADC, TADDframe, TADDhirr, TADDhirrs, TADDi3, TADDi3s, TADDi8,
-       TADDi8s, TADDrSP, TADDrSPi, TADDrr, TADDrrs, TADDspi,
-       TADDspi_pseudo, TADDspr, TADJCALLSTACKDOWN, TADJCALLSTACKUP, TADR,
-       TAND, TANDs, TASRri, TASRris, TASRrr, TASRrrs, TBIC, TBICs, TBKPT,
-       TCMNz, TCMPhir, TCMPhir_cpsr, TCMPi8, TCMPi8_cpsr, TCMPr,
-       TCMPr_cpsr, TCPS, TEOR, TEORs, TFP, THINT, THLT,
-       TInt_WIN_eh_sjlj_longjmp, TInt_eh_sjlj_longjmp,
+       TADC, TADDframe, TADDframe_cpsr, TADDhirr, TADDhirrs, TADDi3,
+       TADDi3s, TADDi8, TADDi8s, TADDrSP, TADDrSPi, TADDrr, TADDrrs,
+       TADDspi, TADDspi_pseudo, TADDspr, TADJCALLSTACKDOWN,
+       TADJCALLSTACKUP, TADR, TAND, TANDs, TASRri, TASRris, TASRrr,
+       TASRrrs, TBIC, TBICs, TBKPT, TCMNz, TCMPhir, TCMPhir_cpsr, TCMPi8,
+       TCMPi8_cpsr, TCMPr, TCMPr_cpsr, TCPS, TEOR, TEORs, TFP, THINT,
+       THLT, TInt_WIN_eh_sjlj_longjmp, TInt_eh_sjlj_longjmp,
        TInt_eh_sjlj_setjmp, TLDMIA, TLDMIA_UPD, TLDRBi, TLDRBr, TLDRBrz,
        TLDRHi, TLDRHr, TLDRHrz, TLDRLIT_ga_abs, TLDRLIT_ga_pcrel, TLDRSB,
        TLDRSBz, TLDRSH, TLDRSHz, TLDRi, TLDRpci, TLDRpci_pic, TLDRr,
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/Itinerary.hs b/src/unison/src/Unison/Target/Thumb/SpecsGen/Itinerary.hs
index c3cd6ec..f3f0299 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/Itinerary.hs
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/Itinerary.hs
@@ -1035,9 +1035,10 @@ itinerary i
        T2UHADD16, T2UHADD8, T2UHASX, T2UHSAX, T2UHSUB16, T2UHSUB8,
        T2UQADD16, T2UQADD8, T2UQASX, T2UQSAX, T2UQSUB16, T2UQSUB8,
        T2USAD8, T2USADA8, T2USAT, T2USAT16, T2USAX, T2USUB16, T2USUB8,
-       TADDframe, TADJCALLSTACKDOWN, TADJCALLSTACKUP, TBKPT, TCPS, THINT,
-       THLT, TInt_WIN_eh_sjlj_longjmp, TInt_eh_sjlj_longjmp,
-       TInt_eh_sjlj_setjmp, TLDRpci_pic, TMOVCCr_pseudo, TMOVi8s_demat,
-       TMOVi8s_source, TPOP_r8_11, TPUSH_r8_11, TSETEND]
+       TADDframe, TADDframe_cpsr, TADJCALLSTACKDOWN, TADJCALLSTACKUP,
+       TBKPT, TCPS, THINT, THLT, TInt_WIN_eh_sjlj_longjmp,
+       TInt_eh_sjlj_longjmp, TInt_eh_sjlj_setjmp, TLDRpci_pic,
+       TMOVCCr_pseudo, TMOVi8s_demat, TMOVi8s_source, TPOP_r8_11,
+       TPUSH_r8_11, TSETEND]
     = NoItinerary
 
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/OperandInfo.hs b/src/unison/src/Unison/Target/Thumb/SpecsGen/OperandInfo.hs
index 4b43ed9..c9bda00 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/OperandInfo.hs
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/OperandInfo.hs
@@ -2936,6 +2936,10 @@ operandInfo i
   | i `elem` [T2LDRpci_pic, T2MOVi16_ga_pcrel] =
     ([BoundInfo, BoundInfo],
      [TemporaryInfo (RegisterClass RGPR) 1 False])
+  | i `elem` [TADDframe_cpsr] =
+    ([BoundInfo, BoundInfo],
+     [TemporaryInfo (RegisterClass TGPR) 1 False,
+      TemporaryInfo (RegisterClass CCR) 1 False])
   | i `elem` [TADDframe] =
     ([BoundInfo, BoundInfo],
      [TemporaryInfo (RegisterClass TGPR) 1 False,
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/Parent.hs b/src/unison/src/Unison/Target/Thumb/SpecsGen/Parent.hs
index b507417..b3df657 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/Parent.hs
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/Parent.hs
@@ -680,6 +680,7 @@ parent i
   | i `elem` [T2TSTri_cpsr] = Just T2TSTri
   | i `elem` [T2TSTrr_cpsr] = Just T2TSTrr
   | i `elem` [T2TSTrs_cpsr] = Just T2TSTrs
+  | i `elem` [TADDframe_cpsr] = Just TADDframe
   | i `elem` [TFP] = Just TADDrSPi
   | i `elem` [TADDspi_pseudo] = Just TADDspi
   | i `elem` [TANDs] = Just TAND
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/ReadOp.hs b/src/unison/src/Unison/Target/Thumb/SpecsGen/ReadOp.hs
index 78d5c8e..d212002 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/ReadOp.hs
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/ReadOp.hs
@@ -3069,6 +3069,7 @@ readOp "t2ADDrscc" = T2ADDrscc
 readOp "register_class_decl_dummy" = Register_class_decl_dummy
 readOp "tLDRspi_fi" = TLDRspi_fi
 readOp "tSTRspi_fi" = TSTRspi_fi
+readOp "tADDframe_cpsr" = TADDframe_cpsr
 readOp "t2MOVi_source" = T2MOVi_source
 readOp "t2MOVi_demat" = T2MOVi_demat
 readOp "t2MOVi_remat" = T2MOVi_remat
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/ReadWriteInfo.hs b/src/unison/src/Unison/Target/Thumb/SpecsGen/ReadWriteInfo.hs
index 90f0ab8..86d22e0 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/ReadWriteInfo.hs
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/ReadWriteInfo.hs
@@ -422,23 +422,23 @@ readWriteInfo i
        T2UHSAX, T2UHSUB16, T2UHSUB8, T2UMAAL, T2UMLAL, T2UMULL, T2UQADD16,
        T2UQADD8, T2UQASX, T2UQSAX, T2UQSUB16, T2UQSUB8, T2USAD8, T2USADA8,
        T2USAT, T2USAT16, T2USAX, T2USUB16, T2USUB8, T2UXTAB, T2UXTAB16,
-       T2UXTAH, T2UXTB, T2UXTB16, T2UXTH, TADDhirr, TADDhirrs, TADDi3,
-       TADDi3s, TADDi8, TADDi8s, TADDrSP, TADDrSPi, TADDrr, TADDrrs,
-       TADDspi, TADDspi_pseudo, TADDspr, TADR, TAND, TANDs, TASRri,
-       TASRris, TASRrr, TASRrrs, TB, TBIC, TBICs, TBKPT, TBRIND, TBR_JTr,
-       TBX, TBX_RET, TBX_RET_vararg, TBcc, TCBNZ, TCBZ, TCMPhir_cpsr,
-       TCMPi8_cpsr, TCMPr_cpsr, TCPS, TEOR, TEORs, THINT, THLT, TLDRBi,
-       TLDRBr, TLDRBrz, TLDRHi, TLDRHr, TLDRHrz, TLDRLIT_ga_abs,
-       TLDRLIT_ga_pcrel, TLDRSB, TLDRSBz, TLDRSH, TLDRSHz, TLDRi, TLDRpci,
-       TLDRpci_pic, TLDRr, TLDRrz, TLDRspi, TLEApcrel, TLEApcrelJT,
-       TLSLri, TLSLris, TLSLrr, TLSLrrs, TLSRri, TLSRris, TLSRrr, TLSRrrs,
-       TMOVCCr_pseudo, TMOVi8, TMOVi8s, TMOVi8s_demat, TMOVi8s_remat,
-       TMOVi8s_source, TMOVr, TMUL, TMULz, TMVN, TMVNs, TORR, TORRs,
-       TPICADD, TREV, TREV16, TREVSH, TROR, TRORs, TRSB, TRSBs, TSETEND,
-       TSTRBi, TSTRBr, TSTRBrz, TSTRHi, TSTRHr, TSTRHrz, TSTRi, TSTRr,
-       TSTRrz, TSTRspi, TSUBi3, TSUBi3s, TSUBi8, TSUBi8s, TSUBrr, TSUBrrs,
-       TSUBspi, TSUBspi_pseudo, TSXTB, TSXTH, TSXTHz, TTRAP, TTST_cpsr,
-       TUDF, TUXTB, TUXTBz, TUXTH, TUXTHz]
+       T2UXTAH, T2UXTB, T2UXTB16, T2UXTH, TADDframe_cpsr, TADDhirr,
+       TADDhirrs, TADDi3, TADDi3s, TADDi8, TADDi8s, TADDrSP, TADDrSPi,
+       TADDrr, TADDrrs, TADDspi, TADDspi_pseudo, TADDspr, TADR, TAND,
+       TANDs, TASRri, TASRris, TASRrr, TASRrrs, TB, TBIC, TBICs, TBKPT,
+       TBRIND, TBR_JTr, TBX, TBX_RET, TBX_RET_vararg, TBcc, TCBNZ, TCBZ,
+       TCMPhir_cpsr, TCMPi8_cpsr, TCMPr_cpsr, TCPS, TEOR, TEORs, THINT,
+       THLT, TLDRBi, TLDRBr, TLDRBrz, TLDRHi, TLDRHr, TLDRHrz,
+       TLDRLIT_ga_abs, TLDRLIT_ga_pcrel, TLDRSB, TLDRSBz, TLDRSH, TLDRSHz,
+       TLDRi, TLDRpci, TLDRpci_pic, TLDRr, TLDRrz, TLDRspi, TLEApcrel,
+       TLEApcrelJT, TLSLri, TLSLris, TLSLrr, TLSLrrs, TLSRri, TLSRris,
+       TLSRrr, TLSRrrs, TMOVCCr_pseudo, TMOVi8, TMOVi8s, TMOVi8s_demat,
+       TMOVi8s_remat, TMOVi8s_source, TMOVr, TMUL, TMULz, TMVN, TMVNs,
+       TORR, TORRs, TPICADD, TREV, TREV16, TREVSH, TROR, TRORs, TRSB,
+       TRSBs, TSETEND, TSTRBi, TSTRBr, TSTRBrz, TSTRHi, TSTRHr, TSTRHrz,
+       TSTRi, TSTRr, TSTRrz, TSTRspi, TSUBi3, TSUBi3s, TSUBi8, TSUBi8s,
+       TSUBrr, TSUBrrs, TSUBspi, TSUBspi_pseudo, TSXTB, TSXTH, TSXTHz,
+       TTRAP, TTST_cpsr, TUDF, TUXTB, TUXTBz, TUXTH, TUXTHz]
     = ([], [])
   | i `elem`
       [STLEX, STLEXB, STLEXD, STLEXH, STMDA, STMDA_UPD, STMDB, STMDB_UPD,
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/ShowInstance.hs b/src/unison/src/Unison/Target/Thumb/SpecsGen/ShowInstance.hs
index 58bae6e..fd8d9e0 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/ShowInstance.hs
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/ShowInstance.hs
@@ -3071,6 +3071,7 @@ instance Show ThumbInstruction where
         show Register_class_decl_dummy = "register_class_decl_dummy"
         show TLDRspi_fi = "tLDRspi_fi"
         show TSTRspi_fi = "tSTRspi_fi"
+        show TADDframe_cpsr = "tADDframe_cpsr"
         show T2MOVi_source = "t2MOVi_source"
         show T2MOVi_demat = "t2MOVi_demat"
         show T2MOVi_remat = "t2MOVi_remat"
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/Size.hs b/src/unison/src/Unison/Target/Thumb/SpecsGen/Size.hs
index 24595dc..fe6e4b8 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/Size.hs
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/Size.hs
@@ -115,10 +115,10 @@ size i
        T2MOVi16_ga_pcrel, T2MOVi16_source, T2MOVi32imm, T2MOVi32imm_demat,
        T2MOVi32imm_remat, T2MOVi32imm_source, T2MOVi_demat, T2MOVi_source,
        T2MOVsi, T2MOVsr, T2MVNi_demat, T2MVNi_source, TADDframe,
-       TADJCALLSTACKDOWN, TADJCALLSTACKUP, TInt_WIN_eh_sjlj_longjmp,
-       TInt_eh_sjlj_longjmp, TInt_eh_sjlj_setjmp, TLDRLIT_ga_abs,
-       TLDRLIT_ga_pcrel, TLDRpci_pic, TMOVCCr_pseudo, TMOVi8s_demat,
-       TMOVi8s_source]
+       TADDframe_cpsr, TADJCALLSTACKDOWN, TADJCALLSTACKUP,
+       TInt_WIN_eh_sjlj_longjmp, TInt_eh_sjlj_longjmp,
+       TInt_eh_sjlj_setjmp, TLDRLIT_ga_abs, TLDRLIT_ga_pcrel, TLDRpci_pic,
+       TMOVCCr_pseudo, TMOVi8s_demat, TMOVi8s_source]
     = 0
   | i `elem`
       [LOAD_T, MOVE, STORE_T, T2IT, T2SETPAN, TADC, TADDhirr, TADDhirrs,
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/ThumbInstructionDecl.hs b/src/unison/src/Unison/Target/Thumb/SpecsGen/ThumbInstructionDecl.hs
index 21f6f34..0b63bc8 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/ThumbInstructionDecl.hs
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/ThumbInstructionDecl.hs
@@ -3070,6 +3070,7 @@ data ThumbInstruction = ABS
                       | Register_class_decl_dummy
                       | TLDRspi_fi
                       | TSTRspi_fi
+                      | TADDframe_cpsr
                       | T2MOVi_source
                       | T2MOVi_demat
                       | T2MOVi_remat
diff --git a/src/unison/src/Unison/Target/Thumb/SpecsGen/input/arm-manual.yaml b/src/unison/src/Unison/Target/Thumb/SpecsGen/input/arm-manual.yaml
index 98841b8..c4bdf98 100644
--- a/src/unison/src/Unison/Target/Thumb/SpecsGen/input/arm-manual.yaml
+++ b/src/unison/src/Unison/Target/Thumb/SpecsGen/input/arm-manual.yaml
@@ -1538,3 +1538,17 @@ instruction-set:
           affected-by:
            - SP:              register
           itinerary:          IIC_iStore_i
+
+
+        - id:                 tADDframe_cpsr
+          parent:             tADDframe
+          operands:
+           - dst:             [register, def, tGPR]
+           - base:            bound
+           - offset:          bound
+           - cpsr:            [register, def, CCR]
+          uses:               [base, offset]
+          defines:            [dst, cpsr]
+          affects:
+
+
diff --git a/src/unison/src/Unison/Target/Thumb/Usages.hs b/src/unison/src/Unison/Target/Thumb/Usages.hs
index c27bcb7..5eac8fa 100644
--- a/src/unison/src/Unison/Target/Thumb/Usages.hs
+++ b/src/unison/src/Unison/Target/Thumb/Usages.hs
@@ -71,6 +71,8 @@ size i
     i `elem` [T2MOVCCi32imm] = sum $ map size $ ccInstrs i
 size i
   | i `elem` [JUMPTABLE_INSTS, Load_merge] = 0
+size i
+  | i `elem` [TADDframe, TADDframe_cpsr] = 2 -- TODO(Romy): Check with Roberto
 size MEMCPY_4 = size T2LDMIA_4 + size T2STMIA_4
 size i
   | isSourceInstr i || isDematInstr i = 0
-- 
2.7.4

