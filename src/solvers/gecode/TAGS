
diversifier.mk,1768
DIVERSIFIERCOMMONDIR := $(DIVERSIFIERDIR)/commonDIVERSIFIERCOMMONDIR35,1762
DIVERSIFIERMODELSDIR := $(DIVERSIFIERDIR)/modelsDIVERSIFIERMODELSDIR36,1811
DIVERSIFIERBRANCHERSDIR := $(DIVERSIFIERDIR)/branchersDIVERSIFIERBRANCHERSDIR37,1860
DIVERSIFIERPROCEDURESDIR := $(DIVERSIFIERDIR)/proceduresDIVERSIFIERPROCEDURESDIR38,1915
DIVERSIFIERINSPECTORSDIR := $(DIVERSIFIERDIR)/inspectorsDIVERSIFIERINSPECTORSDIR39,1972
DIVERSIFIERMAIN = $(DIVERSIFIERDIR)/diversifierDIVERSIFIERMAIN41,2030
DIVERSIFIERCOMMON := definitions util jsonutilDIVERSIFIERCOMMON43,2079
DIVERSIFIERMODELS := parameters solver-parameters options model localmodel completemodel globalmodel	\DIVERSIFIERMODELS44,2126
DIVERSIFIERBRANCHERS := filters merit value printers pressureschedulingbrancher	\DIVERSIFIERBRANCHERS46,2292
DIVERSIFIERPROCEDURES := commonprocedures divprocedures localdivproceduresDIVERSIFIERPROCEDURES48,2390
DIVERSIFIERINSPECTORS := consoleinspector modelgraphicsview modelinspector dot	\DIVERSIFIERINSPECTORS49,2465
DIVERSIFIERCLASSES := $(addprefix $(DIVERSIFIERCOMMONDIR)/, $(DIVERSIFIERCOMMON)) $(addprefix	\DIVERSIFIERCLASSES57,2968
DIVERSIFIERCPPSRC := $(addsuffix .cpp, $(DIVERSIFIERMAIN) $(DIVERSIFIERCLASSES))DIVERSIFIERCPPSRC62,3319
DIVERSIFIERHPPSRC := $(addsuffix .hpp, $(DIVERSIFIERCLASSES))DIVERSIFIERHPPSRC63,3400
DIVERSIFIERSRC := $(DIVERSIFIERCPPSRC) $(DIVERSIFIERHPPSRC)DIVERSIFIERSRC65,3463
UNISON_DIVERSIFIER_CONFIG ?= graphicsUNISON_DIVERSIFIER_CONFIG67,3524
DIVERSIFIERPROJECT := $(DIVERSIFIERDIR)/diversifier.proDIVERSIFIERPROJECT69,3563
GENMAKEFILE = $(DIVERSIFIERDIR)/div-generated.mkGENMAKEFILE71,3620
OSX_DIVERSIFIERBIN = $(DIVERSIFIERDIR)/gecode-diversify.app/Contents/MacOS/gecode-diversifyOSX_DIVERSIFIERBIN73,3670

presolver.cpp,2882
string write_json_vector_int(string label, vector<int> v)write_json_vector_int66,2394
string produce_json(Parameters &input, int presolver_time)produce_json81,2635
#define ZEROBASED1 ZEROBASED1183,7592
#define ZEROBASED2 ZEROBASED2184,7613
#define MINUSONEBASED1 MINUSONEBASED1185,7634
class FDSet {FDSet187,7660
  FDSet() : vec({}) {}FDSet189,7682
  FDSet(vector<int> vec0) : vec(vec0) {sort(vec.begin(), vec.end());}FDSet190,7705
  FDSet(vector<int> vec0, int inc) : vec(vec0) {sort(vec.begin(), vec.end());FDSet191,7775
  FDSet(int a, int b) : vec({}) {for (int x=a; x<=b; x++) vec.push_back(x);}FDSet193,7961
  vector<int> vec;vec194,8038
  bool operator<(const FDSet& s) const {operator <195,8057
  bool operator==(const FDSet& s) const {operator ==198,8128
  bool operator!=(const FDSet& s) const {operator !=201,8201
ostream& operator<<(ostream& os, const FDSet& fd) {operator <<207,8338
class Quad {Quad234,8774
  Quad() : id(AND_EXPR), arg1(0), arg2(0), arg3(0), children({}) {}Quad236,8795
  UnisonConstraintExprId id;id237,8863
  int arg1, arg2, arg3;arg1238,8892
  int arg1, arg2, arg3;arg2238,8892
  int arg1, arg2, arg3;arg3238,8892
  vector<int> children;children239,8916
  bool operator<(const Quad & e) const {operator <240,8940
  bool operator==(const Quad& e) const {operator ==247,9211
  bool operator!=(const Quad& e) const {operator !=250,9369
void toFDSet(vector<vector<int>>& xs, vector<FDSet>& ys) {toFDSet255,9531
void toFDSetInc(vector<vector<int>>& xs, vector<FDSet>& ys) {toFDSetInc260,9649
int dznEncodeQuad(Quad& quad, map<Quad,int>& quadMap, vector<Quad>& quadList) {dznEncodeQuad265,9773
int dznEncodeFDSet(FDSet& set, map<FDSet,int>& setMap, vector<FDSet>& setList) {dznEncodeFDSet276,10026
Quad dznQuad(UnisonConstraintExpr& e, map<Quad,int>& quadMap, vector<Quad>& quadList) {dznQuad287,10271
int dznEncode(UnisonConstraintExpr& e, map<Quad,int>& quadMap, vector<Quad>& quadList) {dznEncode391,13049
string emit_dzn(const bool b, int opt) {emit_dzn396,13235
string emit_dzn(const int i, int opt) {emit_dzn403,13359
string emit_dzn(const FDSet fd, int opt) {emit_dzn410,13461
string emit_dzn(const vector<bool> xs, int opt) {emit_dzn417,13567
string emit_dzn(const vector<int> xs, int opt) {emit_dzn440,14016
string emit_dzn(const vector<FDSet> xs, int opt) {emit_dzn463,14442
string emit_dzn(const vector<vector<int>> xss, int opt) {emit_dzn486,14872
string emit_dzn(const vector<vector<FDSet>> xss, int opt) {emit_dzn510,15374
string emit_dzn_line(string e, const T o) {emit_dzn_line534,15903
string emit_dzn_line(string e, const T o, int opt) {emit_dzn_line539,16017
bool at_least_one_table(vector<vector<int>> tuples) {at_least_one_table544,16121
string produce_dzn(Parameters &input) {produce_dzn552,16320
int main(int argc, char* argv[]) {main988,34682

moc_modelgraphicsview.cpp,885
static const uint qt_meta_data_ModelGraphicsView[] = {qt_meta_data_ModelGraphicsView19,747
static const char qt_meta_stringdata_ModelGraphicsView[] = {qt_meta_stringdata_ModelGraphicsView35,1105
void ModelGraphicsView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)qt_static_metacall39,1196
const QMetaObjectExtraData ModelGraphicsView::staticMetaObjectExtraData = {staticMetaObjectExtraData47,1372
const QMetaObject ModelGraphicsView::staticMetaObject = {staticMetaObject51,1480
const QMetaObject &ModelGraphicsView::getStaticMetaObject() { return staticMetaObject; }getStaticMetaObject57,1715
const QMetaObject *ModelGraphicsView::metaObject() constmetaObject60,1835
void *ModelGraphicsView::qt_metacast(const char *_clname)qt_metacast65,1985
int ModelGraphicsView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)qt_metacall73,2262

inspectors/congruenceallocationinspector.cpp,216
GlobalCongruenceAllocationInspector::GlobalCongruenceAllocationInspector() :GlobalCongruenceAllocationInspector37,1793
void GlobalCongruenceAllocationInspector::print(const Model& s, ostream & pOs) {print40,1918

inspectors/assignmentinspector.cpp,337
std::string AssignmentInspector::name(void) { return "Temporary assignment"; }name37,1783
void AssignmentInspector::inspectb(const Model& m, block b, QPointF& topLeft) {inspectb39,1863
void GlobalAssignmentInspector::inspect(const Space& s) {inspect93,3746
void LocalAssignmentInspector::inspect(const Space& s) {inspect134,4550

inspectors/alignmentinspector.cpp,472
GlobalAlignmentInspector::name(void) {name38,1794
inspectb(const GlobalModel & m, const DotNode & n, disjointSet<operand> & cs) {inspectb44,1898
void GlobalAlignmentInspector::inspect(const Space& s) {inspect112,3949
QString GlobalAlignmentInspector::operandsLabel(vector<operand> ps) {operandsLabel225,7349
QString GlobalAlignmentInspector::operandLabel(operand p) {operandLabel231,7535
QString GlobalAlignmentInspector::portName(operand p) {portName236,7669

inspectors/alignmentpartitioninspector.hpp,192
#define __ALIGNMENTPARTITION_INSPECTOR____ALIGNMENTPARTITION_INSPECTOR__36,1788
class GlobalAlignmentPartitionInspector : public ConsoleInspector {GlobalAlignmentPartitionInspector45,1969

inspectors/dot.cpp,1289
EdgeId edgeId(const NodeId& source, const NodeId& target, int instance) {edgeId37,1767
EdgeId edgeId(int source, int target, int instance) {edgeId41,1891
const double Dot::DPI = 96.0;DPI47,2069
const double Dot::DOT2QT = DPI/72.0;DOT2QT48,2099
Dot::Dot() :Dot50,2137
Dot::~Dot() {~Dot66,2663
void Dot::setGlobalGraphAttribute(const QString &attr, const QString &val) {setGlobalGraphAttribute72,2762
void Dot::setGlobalNodeAttribute(const QString &attr, const QString &val) {setGlobalNodeAttribute76,2869
void Dot::setGlobalEdgeAttribute(const QString &attr, const QString &val) {setGlobalEdgeAttribute81,3057
void Dot::insert(const NodeId& name) {insert86,3245
void Dot::insert(const EdgeId& key) {insert90,3317
setEdgeAttribute(EdgeId key, const QString &attr, const QString &val) {setEdgeAttribute99,3633
void Dot::setNodeSize(const NodeId &name, double w, double h) {setNodeSize103,3740
void Dot::setNodeAttribute(const NodeId &name,setNodeAttribute108,3922
void Dot::draw() {draw113,4075
void Dot::dump(FILE * file) {dump118,4168
QRectF Dot::box() const {box122,4242
vector<DotNode> Dot::getNodes() const {getNodes127,4400
vector<DotEdge> Dot::getEdges() const {getEdges158,5673
QPainterPath Dot::drawArrow(QLineF line) const {drawArrow214,8025

inspectors/modelgraphicsview.hpp,346
#define __MODEL_GRAPHICS_VIEW____MODEL_GRAPHICS_VIEW__36,1779
class ModelGraphicsView : public QGraphicsViewModelGraphicsView41,1867
    Q_OBJECT;Q_OBJECT43,1916
    QPointF CurrentCenterPoint;CurrentCenterPoint49,2076
    QPoint LastPanPoint;LastPanPoint52,2137
    QPointF GetCenter() { return CurrentCenterPoint; }GetCenter56,2252

inspectors/resourceconsumptioninspector.hpp,501
#define __RESOURCE_CONSUMPTION_INSPECTOR____RESOURCE_CONSUMPTION_INSPECTOR__36,1790
class ResourceConsumptionInspector : public ModelInspector {ResourceConsumptionInspector46,1987
  static const resource r = 0; // TODO: let the user choose!r49,2057
class GlobalResourceConsumptionInspector : public ResourceConsumptionInspector {GlobalResourceConsumptionInspector55,2250
class LocalResourceConsumptionInspector : public ResourceConsumptionInspector {LocalResourceConsumptionInspector59,2367

inspectors/selectioninspector.hpp,330
#define __SELECTION_INSPECTOR____SELECTION_INSPECTOR__36,1779
class SelectionInspector : public ConsoleInspector {SelectionInspector45,1950
class GlobalSelectionInspector : public SelectionInspector {GlobalSelectionInspector53,2189
class LocalSelectionInspector : public SelectionInspector {LocalSelectionInspector58,2307

inspectors/allocationinspector.hpp,340
#define __ALLOCATION_INSPECTOR____ALLOCATION_INSPECTOR__36,1780
class AllocationInspector : public ConsoleInspector {AllocationInspector45,1952
class GlobalAllocationInspector : public AllocationInspector {GlobalAllocationInspector52,2150
class LocalAllocationInspector : public AllocationInspector {LocalAllocationInspector57,2270

inspectors/issuecycleinspector.hpp,340
#define __ISSUE_CYCLE_INSPECTOR____ISSUE_CYCLE_INSPECTOR__36,1781
class IssueCycleInspector : public ModelInspector {IssueCycleInspector46,1969
class GlobalIssueCycleInspector : public IssueCycleInspector {GlobalIssueCycleInspector52,2119
class LocalIssueCycleInspector : public IssueCycleInspector {LocalIssueCycleInspector56,2218

inspectors/registerarrayinspector.cpp,435
std::string RegisterArrayInspector::name(void) { return "Register array"; }name37,1786
register_atom RegisterArrayInspector::max_atom(const Model& m, block b) {max_atom39,1863
void RegisterArrayInspector::inspectb(const Model& m, block b, QPointF& topLeft) {inspectb55,2399
void GlobalRegisterArrayInspector::inspect(const Space& s) {inspect105,4006
void LocalRegisterArrayInspector::inspect(const Space& s) {inspect146,4833

inspectors/modelinspector.hpp,773
#define __MODEL_INSPECTOR____MODEL_INSPECTOR__36,1775
#define QLOCATION QLOCATION53,2095
class ModelInspector : public Gecode::Gist::Inspector {ModelInspector59,2312
  static const bool show_dead_temporaries = false;show_dead_temporaries61,2369
  static const bool show_inactive_operations = false;show_inactive_operations62,2420
  static const bool show_inactive_operands = false;show_inactive_operands63,2474
  QGraphicsScene* scene;scene67,2536
  ModelGraphicsView* view;view68,2561
  QMainWindow* mw;mw69,2588
  QColor gridcolor;gridcolor70,2607
  bool first;first71,2627
  double DPI;DPI72,2641
  int FONTSIZE;FONTSIZE73,2655
  vector<QColor> typeColor;typeColor74,2671
  vector<QColor> globalCongruenceColor;globalCongruenceColor75,2699

inspectors/dataflowinspector.cpp,401
std::string DataFlowInspector::name(void) { return "Data flow"; }name37,1781
DataFlowGraph DataFlowInspector::dataFlowGraph(const Model& m, block b) {dataFlowGraph39,1848
draw(const Model& m, DataFlowGraph& dfg, const QPointF& topLeft) {draw136,4631
void GlobalDataFlowInspector::inspect(const Space& s) {inspect214,6799
void LocalDataFlowInspector::inspect(const Space& s) {inspect281,8310

inspectors/issuecycleinspector.cpp,329
std::string IssueCycleInspector::name(void) { return "Issue cycles"; }name37,1783
void IssueCycleInspector::inspectb(const Model& m, block b, QPointF& topLeft) {inspectb39,1855
void GlobalIssueCycleInspector::inspect(const Space& s) {inspect93,3543
void LocalIssueCycleInspector::inspect(const Space& s) {inspect135,4411

inspectors/operandassignmentinspector.hpp,410
#define __OPERAND_ASSIGNMENT_INSPECTOR____OPERAND_ASSIGNMENT_INSPECTOR__36,1788
class OperandAssignmentInspector : public ModelInspector {OperandAssignmentInspector46,1983
class GlobalOperandAssignmentInspector : public OperandAssignmentInspector {GlobalOperandAssignmentInspector52,2140
class LocalOperandAssignmentInspector : public OperandAssignmentInspector {LocalOperandAssignmentInspector56,2253

inspectors/precedenceinspector.cpp,352
std::string PrecedenceInspector::name(void) { return "Precedence"; }name37,1783
PrecedenceGraph PrecedenceInspector::precedenceGraph(const LocalModel& m0, block b) {precedenceGraph39,1853
draw(const LocalModel& m, PrecedenceGraph& pg, const QPointF& topLeft) {draw95,3257
void LocalPrecedenceInspector::inspect(const Space& s) {inspect156,4751

inspectors/operandallocationinspector.hpp,296
#define __OPERAND_ALLOCATION_INSPECTOR____OPERAND_ALLOCATION_INSPECTOR__36,1788
class OperandAllocationInspector : public ConsoleInspector {OperandAllocationInspector45,1968
class GlobalOperandAllocationInspector : public OperandAllocationInspector {GlobalOperandAllocationInspector52,2180

inspectors/liverangeinspector.cpp,334
std::string LiveRangeInspector::name(void) { return "Temporary live ranges"; }name37,1782
void LiveRangeInspector::inspectb(const Model& m, block b, QPointF& topLeft) {inspectb39,1862
void GlobalLiveRangeInspector::inspect(const Space& s) {inspect98,3946
void LocalLiveRangeInspector::inspect(const Space& s) {inspect139,4783

inspectors/congruenceallocationinspector.hpp,200
#define __CONGRUENCEALLOCATION_INSPECTOR____CONGRUENCEALLOCATION_INSPECTOR__36,1790
class GlobalCongruenceAllocationInspector : public ConsoleInspector {GlobalCongruenceAllocationInspector45,1973

inspectors/operandlatencyinspector.cpp,395
OperandLatencyInspector::OperandLatencyInspector() : ConsoleInspector("Operand latency") {}OperandLatencyInspector37,1787
void OperandLatencyInspector::printb(const Model& m, ostream & pOs, block b) {printb39,1880
void GlobalOperandLatencyInspector::print(const Model& s, ostream & pOs) {print50,2245
void LocalOperandLatencyInspector::print(const Model& s, ostream & pOs) {print63,2503

inspectors/precedencematrixinspector.hpp,287
#define __PRECEDENCE_MATRIX_INSPECTOR____PRECEDENCE_MATRIX_INSPECTOR__36,1787
class PrecedenceMatrixInspector : public ConsoleInspector {PrecedenceMatrixInspector45,1966
class LocalPrecedenceMatrixInspector : public PrecedenceMatrixInspector {LocalPrecedenceMatrixInspector52,2184

inspectors/alignmentpartitioninspector.cpp,208
GlobalAlignmentPartitionInspector::GlobalAlignmentPartitionInspector() :GlobalAlignmentPartitionInspector37,1791
void GlobalAlignmentPartitionInspector::print(const Model& s, ostream & pOs) {print40,1918

inspectors/registerarrayinspector.hpp,370
#define __REGISTER_ARRAY_INSPECTOR____REGISTER_ARRAY_INSPECTOR__36,1784
class RegisterArrayInspector : public ModelInspector {RegisterArrayInspector46,1975
class LocalRegisterArrayInspector : public RegisterArrayInspector {LocalRegisterArrayInspector53,2179
class GlobalRegisterArrayInspector : public RegisterArrayInspector {GlobalRegisterArrayInspector57,2283

inspectors/livedurationinspector.hpp,360
#define __LIVE_DURATION_INSPECTOR____LIVE_DURATION_INSPECTOR__36,1783
class LiveDurationInspector : public ModelInspector {LiveDurationInspector46,1973
class GlobalLiveDurationInspector : public LiveDurationInspector {GlobalLiveDurationInspector53,2169
class LocalLiveDurationInspector : public LiveDurationInspector {LocalLiveDurationInspector57,2272

inspectors/operandlatencyinspector.hpp,382
#define __OPERAND_LATENCY_INSPECTOR____OPERAND_LATENCY_INSPECTOR__36,1785
class OperandLatencyInspector : public ConsoleInspector {OperandLatencyInspector45,1962
class GlobalOperandLatencyInspector : public OperandLatencyInspector {GlobalOperandLatencyInspector51,2116
class LocalOperandLatencyInspector : public OperandLatencyInspector {LocalOperandLatencyInspector56,2244

inspectors/consoleinspector.cpp,310
ConsoleInspector::ConsoleInspector(const string& name) :ConsoleInspector37,1780
void ConsoleInspector::inspect(const Space& s) {inspect40,1860
string ConsoleInspector::name(void) { return TextOutput::name(); }name55,2084
void ConsoleInspector::finalize(void) { TextOutput::finalize(); }finalize57,2152

inspectors/allocationinspector.cpp,425
AllocationInspector::AllocationInspector() :AllocationInspector37,1783
void AllocationInspector::printb(const Model& m, ostream & pOs, block b) {printb40,1875
void AllocationInspector::print_header(const Model& m, ostream & pOs) {print_header52,2181
void GlobalAllocationInspector::print(const Model& s, ostream & pOs) {print57,2340
void LocalAllocationInspector::print(const Model& s, ostream & pOs) {print70,2594

inspectors/modelinspector.cpp,1701
QString fill(QString s, int n, QChar c) {fill37,1778
ModelInspector::ModelInspector(void) :ModelInspector42,1894
void ModelInspector::initialize(void) {initialize110,3454
void ModelInspector::show_window(QRectF boundRect) {show_window135,4210
void ModelInspector::finalize(void) {finalize142,4395
QString ModelInspector::emit_temporary(temporary t) {emit_temporary147,4462
QColor ModelInspector::type_color(int type) {type_color153,4600
QColor ModelInspector::congruence_color(operand p) {congruence_color157,4675
void ModelInspector::setFontPointSize(QGraphicsTextItem * t, int pointSize) {setFontPointSize162,4815
void ModelInspector::draw_cfg_edges(Dot& cfg) {draw_cfg_edges169,4975
draw_grid(unsigned int w, unsigned int h, QPointF & topLeft,draw_grid186,5321
draw_rectangle(QPointF topLeft, QSize size, QColor color) {draw_rectangle212,6292
draw_vertical_double_arrow(QPointF top, QPointF bottom, QColor color) {draw_vertical_double_arrow227,6624
draw_horizontal_double_arrow(QPointF left, QPointF right, QColor color) {draw_horizontal_double_arrow250,7258
draw_horizontal_register_array_label(const Model & m, register_atom max,draw_horizontal_register_array_label275,7897
draw_atom_label(const Model & m, QPointF & topClp, register_atom a) {draw_atom_label289,8346
show_global_congruence(const Model & m, global_congruence g) {show_global_congruence305,8882
QString ModelInspector::sign(const BoolVar & v) {sign312,9133
ModelInspector::temporaries(const Model& m, block b) const {temporaries318,9281
ModelInspector::operations(const Model& m, block b) const {operations327,9531
ModelInspector::operands(const Model& m, block b) const {operands336,9785

inspectors/precedenceinspector.hpp,840
#define __PRECEDENCE_INSPECTOR____PRECEDENCE_INSPECTOR__36,1780
enum PrecedenceType {MAYPRECEDE, PRECEDE};PrecedenceType46,1967
enum PrecedenceType {MAYPRECEDE, PRECEDE};MAYPRECEDE46,1967
enum PrecedenceType {MAYPRECEDE, PRECEDE};PRECEDE46,1967
class PrecedenceGraph {PrecedenceGraph48,2011
  Dot * graph;graph50,2043
  map<EdgeId, PrecedenceType> edgeType;edgeType51,2058
  map<operation, QString> instruction;instruction52,2098
  PrecedenceGraph() {PrecedenceGraph53,2137
  ~PrecedenceGraph() {}~PrecedenceGraph56,2186
  QString nodeLabel(operation o) {nodeLabel57,2210
  QSize nodeLabelSize(operation o, double DPI) {nodeLabelSize61,2311
class PrecedenceInspector : public ModelInspector {PrecedenceInspector73,2676
class LocalPrecedenceInspector : public PrecedenceInspector {LocalPrecedenceInspector80,2910

inspectors/assignmentinspector.hpp,338
#define __ASSIGNMENT_INSPECTOR____ASSIGNMENT_INSPECTOR__36,1780
class AssignmentInspector : public ModelInspector {AssignmentInspector46,1967
class GlobalAssignmentInspector : public AssignmentInspector {GlobalAssignmentInspector52,2117
class LocalAssignmentInspector : public AssignmentInspector {LocalAssignmentInspector56,2216

inspectors/consoleinspector.hpp,110
#define __CONSOLE_INSPECTOR____CONSOLE_INSPECTOR__36,1777
class ConsoleInspector :ConsoleInspector46,1933

inspectors/dot.hpp,1362
#define __DOT____DOT__36,1763
typedef QString NodeId;NodeId47,1897
typedef tuple<NodeId, NodeId, int> EdgeId;EdgeId49,1922
#define POSITION(POSITION55,2102
#define BB(BB56,2131
#define NDNAME(NDNAME57,2156
#define NDCOORD(NDCOORD58,2188
#define NDHEIGHT(NDHEIGHT59,2221
#define NDWIDTH(NDWIDTH60,2256
#define EDLABEL(EDLABEL61,2289
#define EDTAILNAME(EDTAILNAME62,2322
#define EDHEADNAME(EDHEADNAME63,2364
#define EDSPLLIST(EDSPLLIST64,2406
class DotNode {DotNode66,2446
  NodeId name;name68,2470
  QPointF topLeftPos;topLeftPos69,2485
  double  width, height;width70,2507
  double  width, height;height70,2507
  QRectF rect;rect71,2532
  vector<QRectF> rects;rects72,2547
class DotEdge {DotEdge75,2575
  EdgeId key;key77,2599
  QPointF topLeftPos;topLeftPos78,2613
  double width, height;width79,2635
  double width, height;height79,2635
  QPainterPath path;path80,2659
  QPainterPath arrow;arrow81,2680
class Dot {Dot84,2706
  static const double DPI;DPI87,2727
  static const double DOT2QT;DOT2QT88,2754
  GVC_t * context;context110,3533
  Agraph_t *graph;graph111,3552
  map<NodeId, Agnode_t*> nodes;nodes112,3571
  map<EdgeId, Agedge_t*> edges;edges113,3603
  static void gvSet(void *object, QString attr, QString value) {gvSet115,3636
  Agnode_t * gvNode(NodeId node) {gvNode121,3873

inspectors/resourceconsumptioninspector.cpp,396
std::string ResourceConsumptionInspector::name(void) {name37,1792
inspectb(const Model& m, block b, QPointF& topLeft) {inspectb42,1919
int ResourceConsumptionInspector::capFactor(const Model& m, block b) {capFactor129,4699
void GlobalResourceConsumptionInspector::inspect(const Space& s) {inspect144,5129
void LocalResourceConsumptionInspector::inspect(const Space& s) {inspect186,6022

inspectors/usersinspector.hpp,290
#define __USERS_INSPECTOR____USERS_INSPECTOR__36,1775
class UsersInspector : public ConsoleInspector {UsersInspector45,1942
class GlobalUsersInspector : public UsersInspector {GlobalUsersInspector51,2078
class LocalUsersInspector : public UsersInspector {LocalUsersInspector56,2188

inspectors/liverangeinspector.hpp,330
#define __LIVE_RANGE_INSPECTOR____LIVE_RANGE_INSPECTOR__36,1780
class LiveRangeInspector : public ModelInspector {LiveRangeInspector46,1967
class GlobalLiveRangeInspector : public LiveRangeInspector {GlobalLiveRangeInspector52,2116
class LocalLiveRangeInspector : public LiveRangeInspector {LocalLiveRangeInspector56,2213

inspectors/dataflowinspector.hpp,2000
#define __DATAFLOW_INSPECTOR____DATAFLOW_INSPECTOR__36,1778
enum NodeType {INACTIVE, UNDECIDEDACTIVENESS, ACTIVE};NodeType46,1963
enum NodeType {INACTIVE, UNDECIDEDACTIVENESS, ACTIVE};INACTIVE46,1963
enum NodeType {INACTIVE, UNDECIDEDACTIVENESS, ACTIVE};UNDECIDEDACTIVENESS46,1963
enum NodeType {INACTIVE, UNDECIDEDACTIVENESS, ACTIVE};ACTIVE46,1963
enum EdgeType {FIXED, DISCARDED, POSSIBLE, ASSIGNED};EdgeType47,2018
enum EdgeType {FIXED, DISCARDED, POSSIBLE, ASSIGNED};FIXED47,2018
enum EdgeType {FIXED, DISCARDED, POSSIBLE, ASSIGNED};DISCARDED47,2018
enum EdgeType {FIXED, DISCARDED, POSSIBLE, ASSIGNED};POSSIBLE47,2018
enum EdgeType {FIXED, DISCARDED, POSSIBLE, ASSIGNED};ASSIGNED47,2018
enum EdgeLabelType {DEAD, UNDECIDEDLIVENESS, LIVE};EdgeLabelType48,2072
enum EdgeLabelType {DEAD, UNDECIDEDLIVENESS, LIVE};DEAD48,2072
enum EdgeLabelType {DEAD, UNDECIDEDLIVENESS, LIVE};UNDECIDEDLIVENESS48,2072
enum EdgeLabelType {DEAD, UNDECIDEDLIVENESS, LIVE};LIVE48,2072
class DataFlowGraph {DataFlowGraph50,2125
  Dot * graph;graph52,2155
  map<EdgeId, EdgeType > edgeType;edgeType53,2170
  map<EdgeId, EdgeLabelType > edgeLabelType;edgeLabelType54,2205
  map<EdgeId, QString > edgeLabel;edgeLabel55,2250
  map<operation, NodeType > nodeType;nodeType56,2285
  map<operation, vector<QString> > initialInstructions;initialInstructions57,2323
  map<operation, vector<QString> > instructions;instructions58,2379
  DataFlowGraph() {DataFlowGraph59,2428
  ~DataFlowGraph() {}~DataFlowGraph62,2475
  QString nodeLabel(operation o, bool ini = false) {nodeLabel63,2497
  QSize nodeLabelSize(operation o, double DPI) {nodeLabelSize67,2625
  vector<QString> ops(operation o, bool ini = false) {ops78,2993
class DataFlowInspector : public ModelInspector {DataFlowInspector84,3116
class GlobalDataFlowInspector : public DataFlowInspector {GlobalDataFlowInspector91,3333
class LocalDataFlowInspector : public DataFlowInspector {LocalDataFlowInspector95,3428

inspectors/alignmentinspector.hpp,154
#define __ALIGNMENT_INSPECTOR____ALIGNMENT_INSPECTOR__36,1779
class GlobalAlignmentInspector : public ModelInspector {GlobalAlignmentInspector46,1966

inspectors/selectioninspector.cpp,500
SelectionInspector::SelectionInspector() :SelectionInspector37,1782
void SelectionInspector::printb(const Model& m, ostream & pOs, block b) {printb40,1887
QString SelectionInspector::showOperand(const Model& m, operand p) {showOperand55,2406
QString SelectionInspector::showOperands(vector<QString> ops) {showOperands75,3043
void GlobalSelectionInspector::print(const Model& s, ostream & pOs) {print79,3158
void LocalSelectionInspector::print(const Model& s, ostream & pOs) {print92,3411

inspectors/usersinspector.cpp,341
UsersInspector::UsersInspector() : ConsoleInspector("Temporary users") {}UsersInspector37,1778
void UsersInspector::printb(const Model& m, ostream & pOs, block b) {printb39,1853
void GlobalUsersInspector::print(const Model& s, ostream & pOs) {print56,2353
void LocalUsersInspector::print(const Model& s, ostream & pOs) {print69,2602

inspectors/operandassignmentinspector.cpp,315
OperandAssignmentInspector::name(void) {name38,1802
OperandAssignmentInspector::inspectb(const Model& m, block b, QPointF& topLeft) {inspectb43,1882
void GlobalOperandAssignmentInspector::inspect(const Space& s) {inspect98,3746
void LocalOperandAssignmentInspector::inspect(const Space& s) {inspect139,4554

inspectors/livedurationinspector.cpp,435
std::string LiveDurationInspector::name(void) { return "Temporary live durations"; }name37,1785
int LiveDurationInspector::maxduration(const Model& m, block b) {maxduration39,1871
void LiveDurationInspector::inspectb(const Model& m, block b, QPointF& topLeft) {inspectb46,2065
void GlobalLiveDurationInspector::inspect(const Space& s) {inspect82,3248
void LocalLiveDurationInspector::inspect(const Space& s) {inspect122,4050

inspectors/precedencematrixinspector.cpp,385
PrecedenceMatrixInspector::PrecedenceMatrixInspector() :PrecedenceMatrixInspector37,1789
void PrecedenceMatrixInspector::printb(const LocalModel& m0, ostream & pOs) {printb40,1890
void PrecedenceMatrixInspector::print_header(const LocalModel& m, int w, ostream & pOs) {print_header64,2636
void LocalPrecedenceMatrixInspector::print(const Model& s, ostream & pOs) {print69,2842

inspectors/operandallocationinspector.cpp,383
OperandAllocationInspector::OperandAllocationInspector() :OperandAllocationInspector37,1790
void OperandAllocationInspector::printb(const Model& s, ostream & pOs, block b) {printb40,1894
void OperandAllocationInspector::print_header(const Model& m, ostream & pOs) {print_header53,2267
void GlobalOperandAllocationInspector::print(const Model& s, ostream & pOs) {print58,2433

inspectors/modelgraphicsview.cpp,585
ModelGraphicsView::ModelGraphicsView(QGraphicsScene * scene) :ModelGraphicsView45,1946
void ModelGraphicsView::SetCenter(const QPointF& centerPoint) {SetCenter56,2433
void ModelGraphicsView::mousePressEvent(QMouseEvent* event) {mousePressEvent106,4162
void ModelGraphicsView::mouseReleaseEvent(QMouseEvent*) {mouseReleaseEvent115,4379
void ModelGraphicsView::mouseMoveEvent(QMouseEvent* event) {mouseMoveEvent123,4541
void ModelGraphicsView::wheelEvent(QWheelEvent* event) {wheelEvent137,4914
void ModelGraphicsView::resizeEvent(QResizeEvent* event) {resizeEvent170,5943

third-party/jsoncpp/json_tool.h,870
#define LIB_JSONCPP_JSON_TOOL_H_INCLUDEDLIB_JSONCPP_JSON_TOOL_H_INCLUDED7,291
#define JSONCPP_NO_LOCALE_SUPPORTJSONCPP_NO_LOCALE_SUPPORT12,402
namespace Json {Json25,683
static char getDecimalPoint() {getDecimalPoint26,700
static inline JSONCPP_STRING codePointToUTF8(unsigned int cp) {codePointToUTF836,918
static inline bool isControlCharacter(char ch) { return ch > 0 && ch <= 0x1F; }isControlCharacter65,1938
  uintToStringBufferSize = 3 * sizeof(LargestUInt) + 1uintToStringBufferSize70,2120
typedef char UIntToStringBuffer[uintToStringBufferSize];UIntToStringBuffer74,2233
static inline void uintToString(LargestUInt value, char*& current) {uintToString81,2504
static inline void fixNumericLocale(char* begin, char* end) {fixNumericLocale94,2894
static inline void fixNumericLocaleInput(char* begin, char* end) {fixNumericLocaleInput103,3051

third-party/jsoncpp/json_value.cpp,12314
#define JSON_ASSERT_UNREACHABLE JSON_ASSERT_UNREACHABLE22,616
namespace Json {Json24,663
#define ALIGNAS(ALIGNAS30,908
Value const& Value::nullSingleton()nullSingleton40,1260
Value const& Value::null = Value::nullSingleton();null48,1486
Value const& Value::nullRef = Value::nullSingleton();nullRef49,1537
const Int Value::minInt = Int(~(UInt(-1) / 2));minInt51,1592
const Int Value::maxInt = Int(UInt(-1) / 2);maxInt52,1640
const UInt Value::maxUInt = UInt(-1);maxUInt53,1685
const Int64 Value::minInt64 = Int64(~(UInt64(-1) / 2));minInt6455,1751
const Int64 Value::maxInt64 = Int64(UInt64(-1) / 2);maxInt6456,1807
const UInt64 Value::maxUInt64 = UInt64(-1);maxUInt6457,1860
static const double maxUInt64AsDouble = 18446744073709551615.0;maxUInt64AsDouble61,2078
const LargestInt Value::minLargestInt = LargestInt(~(LargestUInt(-1) / 2));minLargestInt63,2176
const LargestInt Value::maxLargestInt = LargestInt(LargestUInt(-1) / 2);maxLargestInt64,2252
const LargestUInt Value::maxLargestUInt = LargestUInt(-1);maxLargestUInt65,2325
static inline bool InRange(double d, T min, U max) {InRange69,2466
static inline double integerToDouble(Json::UInt64 value) {integerToDouble76,2813
template <typename T> static inline double integerToDouble(T value) {integerToDouble80,2969
static inline bool InRange(double d, T min, U max) {InRange85,3113
static inline char* duplicateStringValue(const char* value,duplicateStringValue97,3632
static inline char* duplicateAndPrefixStringValue(duplicateAndPrefixStringValue118,4273
inline static void decodePrefixedString(decodePrefixedString139,5220
static inline void releasePrefixedStringValue(char* value) {releasePrefixedStringValue154,5692
static inline void releaseStringValue(char* value, unsigned length) {releaseStringValue162,5962
static inline void releasePrefixedStringValue(char* value) {releasePrefixedStringValue169,6217
static inline void releaseStringValue(char* value, unsigned) {releaseStringValue172,6295
namespace Json {Json191,6991
Exception::Exception(JSONCPP_STRING const& msg)Exception193,7009
RuntimeError::RuntimeError(JSONCPP_STRING const& msg)RuntimeError202,7198
LogicError::LogicError(JSONCPP_STRING const& msg)LogicError205,7274
JSONCPP_NORETURN void throwRuntimeError(JSONCPP_STRING const& msg)throwRuntimeError208,7346
JSONCPP_NORETURN void throwLogicError(JSONCPP_STRING const& msg)throwLogicError212,7444
Value::CommentInfo::CommentInfo() : comment_(0)CommentInfo225,7988
Value::CommentInfo::~CommentInfo() {~CommentInfo228,8040
void Value::CommentInfo::setComment(const char* text, size_t len) {setComment233,8134
Value::CZString::CZString(ArrayIndex aindex) : cstr_(0), index_(aindex) {}CZString257,9080
Value::CZString::CZString(char const* str, unsigned ulength, DuplicationPolicy allocate)CZString259,9156
Value::CZString::CZString(const CZString& other) {CZString266,9374
Value::CZString::CZString(CZString&& other)CZString278,9939
Value::CZString::~CZString() {~CZString284,10065
void Value::CZString::swap(CZString& other) {swap290,10311
Value::CZString& Value::CZString::operator=(const CZString& other) {operator =295,10428
Value::CZString& Value::CZString::operator=(CZString&& other) {operator =302,10595
bool Value::CZString::operator<(const CZString& other) const {operator <310,10758
bool Value::CZString::operator==(const CZString& other) const {operator ==324,11287
ArrayIndex Value::CZString::index() const { return index_; }index336,11729
const char* Value::CZString::data() const { return cstr_; }data339,11854
unsigned Value::CZString::length() const { return storage_.length_; }length340,11914
bool Value::CZString::isStaticString() const { return storage_.policy_ == noDuplication; }isStaticString341,11984
Value::Value(ValueType vtype) {Value355,12696
Value::Value(Int value) {Value384,13304
Value::Value(UInt value) {Value389,13379
Value::Value(Int64 value) {Value394,13484
Value::Value(UInt64 value) {Value398,13560
Value::Value(double value) {Value404,13674
Value::Value(const char* value) {Value409,13754
Value::Value(const char* beginValue, const char* endValue) {Value415,13998
Value::Value(const JSONCPP_STRING& value) {Value421,14208
Value::Value(const StaticString& value) {Value427,14396
Value::Value(const CppTL::ConstString& value) {Value433,14542
Value::Value(bool value) {Value439,14728
Value::Value(Value const& other)Value444,14809
Value::Value(Value&& other) {Value490,16081
Value::~Value() {~Value496,16160
Value& Value::operator=(Value other) {operator =521,16566
void Value::swapPayload(Value& other) {swapPayload526,16639
void Value::copyPayload(const Value& other) {copyPayload536,16881
void Value::swap(Value& other) {swap542,17011
void Value::copy(const Value& other) {copy549,17180
ValueType Value::type() const { return type_; }type556,17325
int Value::compare(const Value& other) const {compare558,17374
bool Value::operator<(const Value& other) const {operator <566,17507
bool Value::operator<=(const Value& other) const { return !(other < *this); }operator <=613,18948
bool Value::operator>=(const Value& other) const { return !(*this < other); }operator >=615,19027
bool Value::operator>(const Value& other) const { return other < *this; }operator >617,19106
bool Value::operator==(const Value& other) const {operator ==619,19181
bool Value::operator!=(const Value& other) const { return !(*this == other); }operator !=664,20615
const char* Value::asCString() const {asCString666,20695
unsigned Value::getCStringLength() const {getCStringLength677,21076
bool Value::getString(char const** str, char const** cend) const {getString688,21433
JSONCPP_STRING Value::asString() const {asString697,21723
CppTL::ConstString Value::asConstString() const {asConstString723,22405
Value::Int Value::asInt() const {asInt732,22609
Value::UInt Value::asUInt() const {asUInt754,23222
Value::Int64 Value::asInt64() const {asInt64778,23871
Value::UInt64 Value::asUInt64() const {asUInt64799,24441
LargestInt Value::asLargestInt() const {asLargestInt821,25050
LargestUInt Value::asLargestUInt() const {asLargestUInt829,25172
double Value::asDouble() const {asDouble837,25298
float Value::asFloat() const {asFloat859,25901
bool Value::asBool() const {asBool882,26613
bool Value::isConvertibleTo(ValueType other) const {isConvertibleTo901,27060
ArrayIndex Value::size() const {size935,28366
bool Value::empty() const {empty958,28906
bool Value::operator!() const { return isNull(); }operator !965,29030
void Value::clear() {clear967,29082
void Value::resize(ArrayIndex newSize) {resize983,29445
Value& Value::operator[](ArrayIndex index) {operator []1001,29956
Value& Value::operator[](int index) {operator []1017,30499
const Value& Value::operator[](ArrayIndex index) const {operator []1024,30692
const Value& Value::operator[](int index) const {operator []1037,31119
void Value::initBasic(ValueType vtype, bool allocated) {initBasic1044,31330
Value& Value::resolveReference(const char* key) {resolveReference1055,31633
Value& Value::resolveReference(char const* key, char const* cend)resolveReference1074,32341
Value Value::get(ArrayIndex index, const Value& defaultValue) const {get1093,33027
bool Value::isValidIndex(ArrayIndex index) const { return index < size(); }isValidIndex1098,33202
Value const* Value::find(char const* key, char const* cend) constfind1100,33279
const Value& Value::operator[](const char* key) constoperator []1111,33764
Value const& Value::operator[](JSONCPP_STRING const& key) constoperator []1117,33930
Value& Value::operator[](const char* key) {operator []1124,34122
Value& Value::operator[](const JSONCPP_STRING& key) {operator []1128,34220
Value& Value::operator[](const StaticString& key) {operator []1132,34343
Value& Value::operator[](const CppTL::ConstString& key) {operator []1137,34460
Value const& Value::operator[](CppTL::ConstString const& key) constoperator []1140,34577
Value& Value::append(const Value& value) { return (*this)[size()] = value; }append1148,34771
  Value& Value::append(Value&& value) { return (*this)[size()] = value; }append1151,34880
Value Value::get(char const* key, char const* cend, Value const& defaultValue) constget1154,34962
Value Value::get(char const* key, Value const& defaultValue) constget1159,35132
Value Value::get(JSONCPP_STRING const& key, Value const& defaultValue) constget1163,35255
bool Value::removeMember(const char* key, const char* cend, Value* removed)removeMember1169,35405
bool Value::removeMember(const char* key, Value* removed)removeMember1182,35798
bool Value::removeMember(JSONCPP_STRING const& key, Value* removed)removeMember1186,35916
Value Value::removeMember(const char* key)removeMember1190,36059
Value Value::removeMember(const JSONCPP_STRING& key)removeMember1201,36444
bool Value::removeIndex(ArrayIndex index, Value* removed) {removeIndex1206,36538
Value Value::get(const CppTL::ConstString& key,get1230,37227
bool Value::isMember(char const* key, char const* cend) constisMember1236,37395
bool Value::isMember(char const* key) constisMember1241,37525
bool Value::isMember(JSONCPP_STRING const& key) constisMember1245,37616
bool Value::isMember(const CppTL::ConstString& key) const {isMember1251,37755
Value::Members Value::getMemberNames() const {getMemberNames1256,37874
static bool IsIntegral(double d) {IsIntegral1298,39090
bool Value::isNull() const { return type_ == nullValue; }isNull1303,39193
bool Value::isBool() const { return type_ == booleanValue; }isBool1305,39252
bool Value::isInt() const {isInt1307,39314
bool Value::isUInt() const {isUInt1326,39717
bool Value::isInt64() const {isInt641349,40204
bool Value::isUInt64() const {isUInt641369,40795
bool Value::isIntegral() const {isIntegral1389,41359
bool Value::isDouble() const { return type_ == intValue || type_ == uintValue || type_ == realValue; }isDouble1409,42018
bool Value::isNumeric() const { return isDouble(); }isNumeric1411,42122
bool Value::isString() const { return type_ == stringValue; }isString1413,42176
bool Value::isArray() const { return type_ == arrayValue; }isArray1415,42239
bool Value::isObject() const { return type_ == objectValue; }isObject1417,42300
void Value::setComment(const char* comment, size_t len, CommentPlacement placement) {setComment1419,42363
void Value::setComment(const char* comment, CommentPlacement placement) {setComment1429,42703
void Value::setComment(const JSONCPP_STRING& comment, CommentPlacement placement) {setComment1433,42831
bool Value::hasComment(CommentPlacement placement) const {hasComment1437,42978
JSONCPP_STRING Value::getComment(CommentPlacement placement) const {getComment1441,43103
void Value::setOffsetStart(ptrdiff_t start) { start_ = start; }setOffsetStart1447,43259
void Value::setOffsetLimit(ptrdiff_t limit) { limit_ = limit; }setOffsetLimit1449,43324
ptrdiff_t Value::getOffsetStart() const { return start_; }getOffsetStart1451,43389
ptrdiff_t Value::getOffsetLimit() const { return limit_; }getOffsetLimit1453,43449
JSONCPP_STRING Value::toStyledString() const {toStyledString1455,43509
Value::const_iterator Value::begin() const {begin1465,43733
Value::const_iterator Value::end() const {end1478,43975
Value::iterator Value::begin() {begin1491,44213
Value::iterator Value::end() {end1504,44431
PathArgument::PathArgument() : key_(), index_(), kind_(kindNone) {}PathArgument1520,44738
PathArgument::PathArgument(ArrayIndex index)PathArgument1522,44807
PathArgument::PathArgument(const char* key)PathArgument1525,44902
PathArgument::PathArgument(const JSONCPP_STRING& key)PathArgument1528,44992
Path::Path(const JSONCPP_STRING& path,Path1534,45185
void Path::makePath(const JSONCPP_STRING& path, const InArgs& in) {makePath1550,45561
void Path::addPathInArg(const JSONCPP_STRING& /*path*/,addPathInArg1581,46630
void Path::invalidPath(const JSONCPP_STRING& /*path*/, int /*location*/) {invalidPath1594,47025
const Value& Path::resolve(const Value& root) const {resolve1598,47129
Value Path::resolve(const Value& root, const Value& defaultValue) const {resolve1624,48030
Value& Path::make(Value& root) const {make1643,48667

third-party/jsoncpp/json_writer.cpp,7694
#define isfinite isfinite21,633
#define isfinite isfinite25,751
#define isfinite isfinite30,843
#define isfinite(isfinite35,959
#define isfinite isfinite39,1088
#define isfinite isfinite45,1208
#define snprintf snprintf51,1370
#define snprintf snprintf53,1443
#define snprintf snprintf55,1480
#define snprintf snprintf58,1564
#define snprintf snprintf61,1669
#define isfinite isfinite67,1762
#define snprintf snprintf68,1787
namespace Json {Json76,1966
typedef std::unique_ptr<StreamWriter> StreamWriterPtr;StreamWriterPtr79,2059
static bool containsControlCharacter(const char* str) {containsControlCharacter84,2183
static bool containsControlCharacter0(const char* str, unsigned len) {containsControlCharacter092,2336
JSONCPP_STRING valueToString(LargestInt value) {valueToString102,2559
JSONCPP_STRING valueToString(LargestUInt value) {valueToString118,3015
JSONCPP_STRING valueToString(Int value) {valueToString128,3248
JSONCPP_STRING valueToString(UInt value) {valueToString132,3336
JSONCPP_STRING valueToString(double value, bool useSpecialFloats, unsigned int precision) {valueToString139,3478
JSONCPP_STRING valueToString(double value) { return valueToString(value, false, 17); }valueToString175,4783
JSONCPP_STRING valueToString(bool value) { return value ? "true" : "false"; }valueToString177,4871
JSONCPP_STRING valueToQuotedString(const char* value) {valueToQuotedString179,4950
static char const* strnpbrk(char const* s, char const* accept, size_t n) {strnpbrk242,6875
static JSONCPP_STRING valueToQuotedStringN(const char* value, unsigned length) {valueToQuotedStringN256,7207
Writer::~Writer() {}~Writer321,9221
FastWriter::FastWriter()FastWriter326,9334
void FastWriter::enableYAMLCompatibility() { yamlCompatiblityEnabled_ = true; }enableYAMLCompatibility330,9465
void FastWriter::dropNullPlaceholders() { dropNullPlaceholders_ = true; }dropNullPlaceholders332,9546
void FastWriter::omitEndingLineFeed() { omitEndingLineFeed_ = true; }omitEndingLineFeed334,9621
JSONCPP_STRING FastWriter::write(const Value& root) {write336,9692
void FastWriter::writeValue(const Value& value) {writeValue344,9861
StyledWriter::StyledWriter()StyledWriter401,11467
JSONCPP_STRING StyledWriter::write(const Value& root) {write404,11558
void StyledWriter::writeValue(const Value& value) {writeValue415,11826
void StyledWriter::writeArrayValue(const Value& value) {writeArrayValue474,13387
bool StyledWriter::isMultineArray(const Value& value) {isMultineArray517,14547
void StyledWriter::pushValue(const JSONCPP_STRING& value) {pushValue544,15518
void StyledWriter::writeIndent() {writeIndent551,15670
void StyledWriter::writeWithIndent(const JSONCPP_STRING& value) {writeWithIndent562,15952
void StyledWriter::indent() { indentString_ += JSONCPP_STRING(indentSize_, ' '); }indent567,16060
void StyledWriter::unindent() {unindent569,16144
void StyledWriter::writeCommentBeforeValue(const Value& root) {writeCommentBeforeValue574,16286
void StyledWriter::writeCommentAfterValueOnSameLine(const Value& root) {writeCommentAfterValueOnSameLine594,16831
bool StyledWriter::hasCommentForValue(const Value& value) {hasCommentForValue605,17156
StyledStreamWriter::StyledStreamWriter(JSONCPP_STRING indentation)StyledStreamWriter614,17456
void StyledStreamWriter::write(JSONCPP_OSTREAM& out, const Value& root) {write618,17619
void StyledStreamWriter::writeValue(const Value& value) {writeValue632,18012
void StyledStreamWriter::writeArrayValue(const Value& value) {writeArrayValue691,19581
bool StyledStreamWriter::isMultineArray(const Value& value) {isMultineArray736,20825
void StyledStreamWriter::pushValue(const JSONCPP_STRING& value) {pushValue763,21802
void StyledStreamWriter::writeIndent() {writeIndent770,21961
void StyledStreamWriter::writeWithIndent(const JSONCPP_STRING& value) {writeWithIndent778,22264
void StyledStreamWriter::indent() { indentString_ += indentation_; }indent784,22416
void StyledStreamWriter::unindent() {unindent786,22486
void StyledStreamWriter::writeCommentBeforeValue(const Value& root) {writeCommentBeforeValue791,22650
void StyledStreamWriter::writeCommentAfterValueOnSameLine(const Value& root) {writeCommentAfterValueOnSameLine809,23195
bool StyledStreamWriter::hasCommentForValue(const Value& value) {hasCommentForValue820,23523
struct CommentStyle {CommentStyle830,23833
  enum Enum {Enum832,23895
    None,  ///< Drop all comments.None833,23909
    Most,  ///< Recover odd behavior of previous versions (not implemented yet).Most834,23944
    All  ///< Keep all comments.All835,24025
struct BuiltStyledStreamWriter : public StreamWriterBuiltStyledStreamWriter839,24067
  int write(Value const& root, JSONCPP_OSTREAM* sout) JSONCPP_OVERRIDE;JSONCPP_OVERRIDE849,24410
  typedef std::vector<JSONCPP_STRING> ChildValues;ChildValues863,24941
  ChildValues childValues_;childValues_865,24993
  JSONCPP_STRING indentString_;indentString_866,25021
  unsigned int rightMargin_;rightMargin_867,25053
  JSONCPP_STRING indentation_;indentation_868,25082
  CommentStyle::Enum cs_;cs_869,25113
  JSONCPP_STRING colonSymbol_;colonSymbol_870,25139
  JSONCPP_STRING nullSymbol_;nullSymbol_871,25170
  JSONCPP_STRING endingLineFeedSymbol_;endingLineFeedSymbol_872,25200
  bool addChildValues_ : 1;addChildValues_873,25240
  bool indented_ : 1;indented_874,25268
  bool useSpecialFloats_ : 1;useSpecialFloats_875,25290
  unsigned int precision_;precision_876,25320
BuiltStyledStreamWriter::BuiltStyledStreamWriter(BuiltStyledStreamWriter878,25350
int BuiltStyledStreamWriter::write(Value const& root, JSONCPP_OSTREAM* sout)write898,25947
void BuiltStyledStreamWriter::writeValue(Value const& value) {writeValue913,26327
void BuiltStyledStreamWriter::writeArrayValue(Value const& value) {writeArrayValue972,27977
bool BuiltStyledStreamWriter::isMultineArray(Value const& value) {isMultineArray1019,29354
void BuiltStyledStreamWriter::pushValue(JSONCPP_STRING const& value) {pushValue1046,30336
void BuiltStyledStreamWriter::writeIndent() {writeIndent1053,30496
void BuiltStyledStreamWriter::writeWithIndent(JSONCPP_STRING const& value) {writeWithIndent1065,30878
void BuiltStyledStreamWriter::indent() { indentString_ += indentation_; }indent1071,31031
void BuiltStyledStreamWriter::unindent() {unindent1073,31106
void BuiltStyledStreamWriter::writeCommentBeforeValue(Value const& root) {writeCommentBeforeValue1078,31275
void BuiltStyledStreamWriter::writeCommentAfterValueOnSameLine(Value const& root) {writeCommentAfterValueOnSameLine1097,31862
bool BuiltStyledStreamWriter::hasCommentForValue(const Value& value) {hasCommentForValue1109,32216
StreamWriter::StreamWriter()StreamWriter1118,32461
StreamWriter::~StreamWriter()~StreamWriter1122,32512
StreamWriter::Factory::~Factory()~Factory1125,32546
StreamWriterBuilder::StreamWriterBuilder()StreamWriterBuilder1127,32583
StreamWriterBuilder::~StreamWriterBuilder()~StreamWriterBuilder1131,32657
StreamWriter* StreamWriterBuilder::newStreamWriter() constnewStreamWriter1133,32704
static void getValidWriterKeys(std::set<JSONCPP_STRING>* valid_keys)getValidWriterKeys1165,33769
bool StreamWriterBuilder::validate(Json::Value* invalid) constvalidate1175,34112
Value& StreamWriterBuilder::operator[](JSONCPP_STRING key)operator []1192,34664
void StreamWriterBuilder::setDefaults(Json::Value* settings)setDefaults1197,34762
JSONCPP_STRING writeString(StreamWriter::Factory const& builder, Value const& root) {writeString1209,35149
JSONCPP_OSTREAM& operator<<(JSONCPP_OSTREAM& sout, Value const& root) {operator <<1216,35378

third-party/jsoncpp/json_reader.cpp,10426
#define snprintf snprintf25,769
#define snprintf snprintf27,842
#define snprintf snprintf29,879
#define snprintf snprintf32,963
#define snprintf snprintf35,1068
#define sscanf sscanf40,1138
#define JSONCPP_DEPRECATED_STACK_LIMIT JSONCPP_DEPRECATED_STACK_LIMIT50,1471
static size_t const stackLimit_g = JSONCPP_DEPRECATED_STACK_LIMIT; // see readValue()stackLimit_g53,1523
namespace Json {Json55,1610
typedef std::unique_ptr<CharReader> CharReaderPtr;CharReaderPtr58,1703
Features::Features()Features66,1892
Features Features::all() { return Features(); }all70,2034
Features Features::strictMode() {strictMode72,2083
bool Reader::containsNewLine(Reader::Location begin, Reader::Location end) {containsNewLine84,2385
Reader::Reader()Reader94,2660
Reader::Reader(const Features& features)Reader99,2850
Reader::parse(const std::string& document, Value& root, bool collectComments) {parse105,3057
bool Reader::parse(std::istream& sin, Value& root, bool collectComments) {parse112,3334
bool Reader::parse(const char* beginDoc,parse125,3822
bool Reader::readValue() {readValue166,4907
void Reader::skipCommentTokens(Token& token) {skipCommentTokens247,7301
bool Reader::readToken(Token& token) {readToken257,7498
void Reader::skipSpaces() {skipSpaces328,8761
bool Reader::match(Location pattern, int patternLength) {match338,8946
bool Reader::readComment() {readComment349,9218
JSONCPP_STRING Reader::normalizeEOL(Reader::Location begin, Reader::Location end) {normalizeEOL372,9829
Reader::addComment(Location begin, Location end, CommentPlacement placement) {addComment392,10327
bool Reader::readCStyleComment() {readCStyleComment403,10675
bool Reader::readCppStyleComment() {readCppStyleComment412,10861
void Reader::readNumber() {readNumber428,11216
bool Reader::readString() {readString450,11854
bool Reader::readObject(Token& tokenStart) {readObject462,12053
bool Reader::readArray(Token& tokenStart) {readArray518,13980
bool Reader::decodeNumber(Token& token) {decodeNumber556,15017
bool Reader::decodeNumber(Token& token, Value& decoded) {decodeNumber566,15298
bool Reader::decodeDouble(Token& token) {decodeDouble608,16940
bool Reader::decodeDouble(Token& token, Value& decoded) {decodeDouble618,17221
bool Reader::decodeString(Token& token) {decodeString630,17588
bool Reader::decodeString(Token& token, JSONCPP_STRING& decoded) {decodeString641,17925
bool Reader::decodeUnicodeCodePoint(Token& token,decodeUnicodeCodePoint694,19246
bool Reader::decodeUnicodeEscapeSequence(Token& token,decodeUnicodeEscapeSequence723,20291
Reader::addError(const JSONCPP_STRING& message, Token& token, Location extra) {addError753,21205
bool Reader::recoverFromError(TokenType skipUntilToken) {recoverFromError762,21422
bool Reader::addErrorAndRecover(const JSONCPP_STRING& message,addErrorAndRecover775,21786
Value& Reader::currentValue() { return *(nodes_.top()); }currentValue782,22029
Reader::Char Reader::getNextChar() {getNextChar784,22088
void Reader::getLocationLineAndColumn(Location location,getLocationLineAndColumn790,22188
JSONCPP_STRING Reader::getLocationLineAndColumn(Location location) const {getLocationLineAndColumn813,22790
JSONCPP_STRING Reader::getFormatedErrorMessages() const {getFormatedErrorMessages822,23114
JSONCPP_STRING Reader::getFormattedErrorMessages() const {getFormattedErrorMessages826,23213
std::vector<Reader::StructuredError> Reader::getStructuredErrors() const {getStructuredErrors842,23763
bool Reader::pushError(const Value& value, const JSONCPP_STRING& message) {pushError857,24300
bool Reader::pushError(const Value& value, const JSONCPP_STRING& message, const Value& extra) {pushError874,24784
bool Reader::good() const {good892,25359
class OurFeatures {OurFeatures897,25442
  bool allowComments_;allowComments_900,25498
  bool strictRoot_;strictRoot_901,25521
  bool allowDroppedNullPlaceholders_;allowDroppedNullPlaceholders_902,25541
  bool allowNumericKeys_;allowNumericKeys_903,25579
  bool allowSingleQuotes_;allowSingleQuotes_904,25605
  bool failIfExtra_;failIfExtra_905,25632
  bool rejectDupKeys_;rejectDupKeys_906,25653
  bool allowSpecialFloats_;allowSpecialFloats_907,25676
  int stackLimit_;stackLimit_908,25704
OurFeatures OurFeatures::all() { return OurFeatures(); }all914,25830
class OurReader {OurReader920,26005
  typedef char Char;Char922,26031
  typedef const Char* Location;Location923,26052
  struct StructuredError {StructuredError924,26084
    ptrdiff_t offset_start;offset_start925,26111
    ptrdiff_t offset_limit;offset_limit926,26139
    JSONCPP_STRING message;message927,26167
  enum TokenType {TokenType945,26773
    tokenEndOfStream = 0,tokenEndOfStream946,26792
    tokenObjectBegin,tokenObjectBegin947,26818
    tokenObjectEnd,tokenObjectEnd948,26840
    tokenArrayBegin,tokenArrayBegin949,26860
    tokenArrayEnd,tokenArrayEnd950,26881
    tokenString,tokenString951,26900
    tokenNumber,tokenNumber952,26917
    tokenTrue,tokenTrue953,26934
    tokenFalse,tokenFalse954,26949
    tokenNull,tokenNull955,26965
    tokenNaN,tokenNaN956,26980
    tokenPosInf,tokenPosInf957,26994
    tokenNegInf,tokenNegInf958,27011
    tokenArraySeparator,tokenArraySeparator959,27028
    tokenMemberSeparator,tokenMemberSeparator960,27053
    tokenComment,tokenComment961,27079
    tokenErrortokenError962,27097
  class Token {Token965,27118
    TokenType type_;type_967,27144
    Location start_;start_968,27165
    Location end_;end_969,27186
  class ErrorInfo {ErrorInfo972,27211
    Token token_;token_974,27241
    JSONCPP_STRING message_;message_975,27259
    Location extra_;extra_976,27288
  typedef std::deque<ErrorInfo> Errors;Errors979,27315
  typedef std::stack<Value*> Nodes;Nodes1024,29136
  Nodes nodes_;nodes_1025,29172
  Errors errors_;errors_1026,29188
  JSONCPP_STRING document_;document_1027,29206
  Location begin_;begin_1028,29234
  Location end_;end_1029,29253
  Location current_;current_1030,29270
  Location lastValueEnd_;lastValueEnd_1031,29291
  Value* lastValue_;lastValue_1032,29317
  JSONCPP_STRING commentsBefore_;commentsBefore_1033,29338
  OurFeatures const features_;features_1035,29373
  bool collectComments_;collectComments_1036,29404
bool OurReader::containsNewLine(OurReader::Location begin, OurReader::Location end) {containsNewLine1041,29493
OurReader::OurReader(OurFeatures const& features)OurReader1048,29690
bool OurReader::parse(const char* beginDoc,parse1054,29907
bool OurReader::readValue() {readValue1101,31221
void OurReader::skipCommentTokens(Token& token) {skipCommentTokens1203,34197
bool OurReader::readToken(Token& token) {readToken1213,34397
void OurReader::skipSpaces() {skipSpaces1313,36333
bool OurReader::match(Location pattern, int patternLength) {match1323,36521
bool OurReader::readComment() {readComment1334,36796
JSONCPP_STRING OurReader::normalizeEOL(OurReader::Location begin, OurReader::Location end) {normalizeEOL1357,37410
OurReader::addComment(Location begin, Location end, CommentPlacement placement) {addComment1377,37920
bool OurReader::readCStyleComment() {readCStyleComment1388,38271
bool OurReader::readCppStyleComment() {readCppStyleComment1397,38460
bool OurReader::readNumber(bool checkInf) {readNumber1413,38818
bool OurReader::readString() {readString1439,39572
bool OurReader::readStringSingleQuote() {readStringSingleQuote1452,39772
bool OurReader::readObject(Token& tokenStart) {readObject1464,39984
bool OurReader::readArray(Token& tokenStart) {readArray1526,42183
bool OurReader::decodeNumber(Token& token) {decodeNumber1564,43223
bool OurReader::decodeNumber(Token& token, Value& decoded) {decodeNumber1574,43507
bool OurReader::decodeDouble(Token& token) {decodeDouble1614,45062
bool OurReader::decodeDouble(Token& token, Value& decoded) {decodeDouble1624,45346
bool OurReader::decodeString(Token& token) {decodeString1662,46572
bool OurReader::decodeString(Token& token, JSONCPP_STRING& decoded) {decodeString1673,46912
bool OurReader::decodeUnicodeCodePoint(Token& token,decodeUnicodeCodePoint1726,48236
bool OurReader::decodeUnicodeEscapeSequence(Token& token,decodeUnicodeEscapeSequence1755,49284
OurReader::addError(const JSONCPP_STRING& message, Token& token, Location extra) {addError1785,50201
bool OurReader::recoverFromError(TokenType skipUntilToken) {recoverFromError1794,50421
bool OurReader::addErrorAndRecover(const JSONCPP_STRING& message,addErrorAndRecover1807,50782
Value& OurReader::currentValue() { return *(nodes_.top()); }currentValue1814,51028
OurReader::Char OurReader::getNextChar() {getNextChar1816,51090
void OurReader::getLocationLineAndColumn(Location location,getLocationLineAndColumn1822,51196
JSONCPP_STRING OurReader::getLocationLineAndColumn(Location location) const {getLocationLineAndColumn1845,51801
JSONCPP_STRING OurReader::getFormattedErrorMessages() const {getFormattedErrorMessages1853,52076
std::vector<OurReader::StructuredError> OurReader::getStructuredErrors() const {getStructuredErrors1869,52629
bool OurReader::pushError(const Value& value, const JSONCPP_STRING& message) {pushError1884,53178
bool OurReader::pushError(const Value& value, const JSONCPP_STRING& message, const Value& extra) {pushError1901,53659
bool OurReader::good() const {good1919,54231
class OurCharReader : public CharReader {OurCharReader1924,54292
  bool const collectComments_;collectComments_1925,54334
  OurReader reader_;reader_1926,54365
  OurCharReader(OurCharReader1928,54394
CharReaderBuilder::CharReaderBuilder()CharReaderBuilder1945,54825
CharReaderBuilder::~CharReaderBuilder()~CharReaderBuilder1949,54895
CharReader* CharReaderBuilder::newCharReader() constnewCharReader1951,54938
static void getValidReaderKeys(std::set<JSONCPP_STRING>* valid_keys)getValidReaderKeys1966,55781
bool CharReaderBuilder::validate(Json::Value* invalid) constvalidate1980,56288
Value& CharReaderBuilder::operator[](JSONCPP_STRING key)operator []1997,56838
void CharReaderBuilder::strictMode(Json::Value* settings)strictMode2002,56934
void CharReaderBuilder::setDefaults(Json::Value* settings)setDefaults2017,57449
bool parseFromStream(parseFromStream2036,58051
JSONCPP_ISTREAM& operator>>(JSONCPP_ISTREAM& sin, Value& root) {operator >>2050,58496

third-party/jsoncpp/json/writer.h,547
#define JSON_WRITER_H_INCLUDEDJSON_WRITER_H_INCLUDED7,281
namespace Json {Json25,752
class JSON_API StreamWriter {StreamWriter42,1092
  JSONCPP_OSTREAM* sout_;  // not owned; will not deletesout_44,1133
  class JSON_API Factory {Factory58,1684
class JSON_API StreamWriterBuilder : public StreamWriter::Factory {StreamWriterBuilder89,2637
  Json::Value settings_;settings_114,3784
  ~StreamWriterBuilder() JSONCPP_OVERRIDE;JSONCPP_OVERRIDE117,3835
  StreamWriter* newStreamWriter() const JSONCPP_OVERRIDE;JSONCPP_OVERRIDE122,3966

third-party/jsoncpp/json/features.h,361
#define CPPTL_JSON_FEATURES_H_INCLUDEDCPPTL_JSON_FEATURES_H_INCLUDED7,289
namespace Json {Json15,454
class JSON_API Features {Features21,644
  bool allowComments_;allowComments_44,1355
  bool strictRoot_;strictRoot_48,1470
  bool allowDroppedNullPlaceholders_;allowDroppedNullPlaceholders_51,1566
  bool allowNumericKeys_;allowNumericKeys_54,1673

third-party/jsoncpp/json/reader.h,570
#define CPPTL_JSON_READER_H_INCLUDEDCPPTL_JSON_READER_H_INCLUDED7,287
namespace Json {Json28,820
class JSON_API CharReader {CharReader252,8484
  virtual ~CharReader() {}~CharReader254,8520
  class JSON_API Factory {Factory276,9422
    virtual ~Factory() {}~Factory278,9459
class JSON_API CharReaderBuilder : public CharReader::Factory {CharReaderBuilder298,9978
  Json::Value settings_;settings_338,11841
  ~CharReaderBuilder() JSONCPP_OVERRIDE;JSONCPP_OVERRIDE341,11890
  CharReader* newCharReader() const JSONCPP_OVERRIDE;JSONCPP_OVERRIDE343,11932

third-party/jsoncpp/json/allocator.h,973
#define CPPTL_JSON_ALLOCATOR_H_INCLUDEDCPPTL_JSON_ALLOCATOR_H_INCLUDED7,290
namespace Json {Json14,392
class SecureAllocator {SecureAllocator16,430
		pointer allocate(size_type n) {allocate30,803
		void deallocate(volatile pointer p, size_type n) {deallocate42,1212
		void construct(pointer p, Args&&... args) {construct52,1461
		size_type max_size() const {max_size57,1640
		pointer address( reference x ) const {address61,1710
		const_pointer address( const_reference x ) const {address65,1785
		void destroy(pointer p) {destroy72,1928
		SecureAllocator() {}SecureAllocator78,2032
		template<typename U> SecureAllocator(const SecureAllocator<U>&) {}SecureAllocator79,2055
		template<typename U> struct rebind { using other = SecureAllocator<U>; };rebind80,2124
bool operator==(const SecureAllocator<T>&, const SecureAllocator<U>&) {operator ==85,2238
bool operator!=(const SecureAllocator<T>&, const SecureAllocator<U>&) {operator !=90,2360

third-party/jsoncpp/json/assertions.h,327
#define CPPTL_JSON_ASSERTIONS_H_INCLUDEDCPPTL_JSON_ASSERTIONS_H_INCLUDED7,291
# define JSON_ASSERT(JSON_ASSERT23,743
# define JSON_FAIL_MESSAGE(JSON_FAIL_MESSAGE26,896
# define JSON_ASSERT(JSON_ASSERT35,1338
# define JSON_FAIL_MESSAGE(JSON_FAIL_MESSAGE39,1520
#define JSON_ASSERT_MESSAGE(JSON_ASSERT_MESSAGE49,1942

third-party/jsoncpp/json/json.h,56
#define JSON_JSON_H_INCLUDEDJSON_JSON_H_INCLUDED7,279

third-party/jsoncpp/json/autolink.h,225
#define JSON_AUTOLINK_H_INCLUDEDJSON_AUTOLINK_H_INCLUDED7,283
#define CPPTL_AUTOLINK_NAME CPPTL_AUTOLINK_NAME17,510
#undef CPPTL_AUTOLINK_DLLCPPTL_AUTOLINK_DLL18,545
#define CPPTL_AUTOLINK_DLLCPPTL_AUTOLINK_DLL20,587

third-party/jsoncpp/json/version.h,574
# define JSON_VERSION_H_INCLUDEDJSON_VERSION_H_INCLUDED4,139
# define JSONCPP_VERSION_STRING JSONCPP_VERSION_STRING6,173
# define JSONCPP_VERSION_MAJOR JSONCPP_VERSION_MAJOR7,213
# define JSONCPP_VERSION_MINOR JSONCPP_VERSION_MINOR8,246
# define JSONCPP_VERSION_PATCH JSONCPP_VERSION_PATCH9,279
# define JSONCPP_VERSION_QUALIFIERJSONCPP_VERSION_QUALIFIER10,312
# define JSONCPP_VERSION_HEXA JSONCPP_VERSION_HEXA11,347
#undef JSONCPP_USING_SECURE_MEMORYJSONCPP_USING_SECURE_MEMORY14,508
#define JSONCPP_USING_SECURE_MEMORY JSONCPP_USING_SECURE_MEMORY16,550

third-party/jsoncpp/json/config.h,2754
#define JSON_CONFIG_H_INCLUDEDJSON_CONFIG_H_INCLUDED7,281
#define JSON_USE_EXCEPTION JSON_USE_EXCEPTION25,925
#define JSON_USE_CPPTL JSON_USE_CPPTL36,1242
#define JSON_API JSON_API41,1303
#define JSON_API JSON_API44,1406
#define JSONCPP_DISABLE_DLL_INTERFACE_WARNINGJSONCPP_DISABLE_DLL_INTERFACE_WARNING45,1445
#define JSON_API JSON_API49,1592
#define JSONCPP_DISABLE_DLL_INTERFACE_WARNINGJSONCPP_DISABLE_DLL_INTERFACE_WARNING50,1631
#define JSON_APIJSON_API54,1761
#    define JSON_USE_INT64_DOUBLE_CONVERSION JSON_USE_INT64_DOUBLE_CONVERSION66,2142
#    define JSONCPP_DEPRECATED(JSONCPP_DEPRECATED76,2585
# define JSONCPP_OVERRIDE JSONCPP_OVERRIDE85,2938
# define JSONCPP_NOEXCEPT JSONCPP_NOEXCEPT86,2973
# define JSONCPP_OVERRIDE JSONCPP_OVERRIDE88,3070
# define JSONCPP_NOEXCEPT JSONCPP_NOEXCEPT89,3105
# define JSONCPP_OVERRIDE JSONCPP_OVERRIDE91,3183
# define JSONCPP_NOEXCEPT JSONCPP_NOEXCEPT92,3218
# define JSONCPP_OVERRIDEJSONCPP_OVERRIDE94,3259
# define JSONCPP_NOEXCEPT JSONCPP_NOEXCEPT95,3285
#define JSON_HAS_RVALUE_REFERENCES JSON_HAS_RVALUE_REFERENCES101,3421
#define JSON_HAS_RVALUE_REFERENCES JSON_HAS_RVALUE_REFERENCES106,3540
#define JSON_HAS_RVALUE_REFERENCES JSON_HAS_RVALUE_REFERENCES111,3748
#define JSON_HAS_RVALUE_REFERENCES JSON_HAS_RVALUE_REFERENCES119,3932
#    define JSONCPP_DEPRECATED(JSONCPP_DEPRECATED124,4051
#    define JSONCPP_DEPRECATED(JSONCPP_DEPRECATED128,4281
#    define JSONCPP_DEPRECATED(JSONCPP_DEPRECATED130,4425
#define JSONCPP_DEPRECATED(JSONCPP_DEPRECATED135,4590
#  define JSON_USE_INT64_DOUBLE_CONVERSION JSON_USE_INT64_DOUBLE_CONVERSION139,4687
namespace Json {Json152,4931
typedef int Int;Int153,4948
typedef unsigned int UInt;UInt154,4965
typedef int LargestInt;LargestInt156,5019
typedef unsigned int LargestUInt;LargestUInt157,5043
#undef JSON_HAS_INT64JSON_HAS_INT64158,5077
typedef __int64 Int64;Int64162,5272
typedef unsigned __int64 UInt64;UInt64163,5295
typedef int64_t Int64;Int64165,5408
typedef uint64_t UInt64;UInt64166,5431
typedef Int64 LargestInt;LargestInt168,5487
typedef UInt64 LargestUInt;LargestUInt169,5513
#define JSON_HAS_INT64JSON_HAS_INT64170,5541
#define JSONCPP_STRING JSONCPP_STRING173,5632
#define JSONCPP_OSTRINGSTREAM JSONCPP_OSTRINGSTREAM174,5740
#define JSONCPP_OSTREAM JSONCPP_OSTREAM175,5855
#define JSONCPP_ISTRINGSTREAM JSONCPP_ISTRINGSTREAM176,5934
#define JSONCPP_ISTREAM JSONCPP_ISTREAM177,6049
#define JSONCPP_STRING JSONCPP_STRING179,6098
#define JSONCPP_OSTRINGSTREAM JSONCPP_OSTRINGSTREAM180,6140
#define JSONCPP_OSTREAM JSONCPP_OSTREAM181,6189
#define JSONCPP_ISTRINGSTREAM JSONCPP_ISTRINGSTREAM182,6232
#define JSONCPP_ISTREAM JSONCPP_ISTREAM183,6281

third-party/jsoncpp/json/value.h,7127
#define CPPTL_JSON_H_INCLUDEDCPPTL_JSON_H_INCLUDED7,280
#    define JSONCPP_NORETURN JSONCPP_NORETURN30,842
#    define JSONCPP_NORETURN JSONCPP_NORETURN32,918
#    define JSONCPP_NORETURNJSONCPP_NORETURN34,986
namespace Json {Json49,1367
class JSON_API Exception : public std::exception {Exception55,1509
  ~Exception() JSONCPP_NOEXCEPT JSONCPP_OVERRIDE;JSONCPP_OVERRIDE58,1608
  char const* what() const JSONCPP_NOEXCEPT JSONCPP_OVERRIDE;JSONCPP_OVERRIDE59,1658
  JSONCPP_STRING msg_;msg_61,1731
class JSON_API RuntimeError : public Exception {RuntimeError70,1935
class JSON_API LogicError : public Exception {LogicError81,2225
enum ValueType {ValueType93,2557
  nullValue = 0, ///< 'null' valuenullValue94,2574
  intValue,      ///< signed integer valueintValue95,2609
  uintValue,     ///< unsigned integer valueuintValue96,2652
  realValue,     ///< double valuerealValue97,2697
  stringValue,   ///< UTF-8 string valuestringValue98,2732
  booleanValue,  ///< bool valuebooleanValue99,2773
  arrayValue,    ///< array value (ordered list)arrayValue100,2806
  objectValue    ///< object value (collection of name/value pairs).objectValue101,2855
enum CommentPlacement {CommentPlacement104,2928
  commentBefore = 0,      ///< a comment placed on the line before a valuecommentBefore105,2952
  commentAfterOnSameLine, ///< a comment just after a value on the same linecommentAfterOnSameLine106,3027
  commentAfter, ///< a comment on the line after a value (only make sense forcommentAfter107,3104
  numberOfCommentPlacementnumberOfCommentPlacement109,3200
class JSON_API StaticString {StaticString131,3823
  explicit StaticString(const char* czstring) : c_str_(czstring) {}StaticString133,3861
  operator const char*() const { return c_str_; }operator const char*135,3930
  const char* c_str() const { return c_str_; }c_str137,3981
  const char* c_str_;c_str_140,4038
class JSON_API Value {Value177,5444
  typedef std::vector<JSONCPP_STRING> Members;Members180,5509
  typedef ValueIterator iterator;iterator181,5556
  typedef ValueConstIterator const_iterator;const_iterator182,5590
  typedef Json::UInt UInt;UInt183,5635
  typedef Json::Int Int;Int184,5662
  typedef Json::UInt64 UInt64;UInt64186,5715
  typedef Json::Int64 Int64;Int64187,5746
  typedef Json::LargestInt LargestInt;LargestInt189,5809
  typedef Json::LargestUInt LargestUInt;LargestUInt190,5848
  typedef Json::ArrayIndex ArrayIndex;ArrayIndex191,5889
  static const Value& null;  ///< We regret this reference to a global instance; prefer the simpler Value().null193,5929
  static const Value& nullRef;  ///< just a kludge for binary-compatibility; same as nullnullRef194,6038
  static const LargestInt minLargestInt;minLargestInt198,6277
  static const LargestInt maxLargestInt;maxLargestInt200,6390
  static const LargestUInt maxLargestUInt;maxLargestUInt202,6505
  static const Int minInt;minInt205,6617
  static const Int maxInt;maxInt207,6712
  static const UInt maxUInt;maxUInt209,6809
  static const Int64 minInt64;minInt64213,6943
  static const Int64 maxInt64;maxInt64215,7050
  static const UInt64 maxUInt64;maxUInt64217,7159
  class CZString {CZString222,7279
    enum DuplicationPolicy {DuplicationPolicy224,7308
      noDuplication = 0,noDuplication225,7337
      duplicate,duplicate226,7362
      duplicateOnCopyduplicateOnCopy227,7379
    struct StringStorage {StringStorage253,8087
      unsigned policy_: 2;policy_254,8114
      unsigned length_: 30; // 1GB maxlength_255,8141
    char const* cstr_;  // actually, a prefixed string, unless policy is noDupcstr_258,8188
      ArrayIndex index_;index_260,8279
      StringStorage storage_;storage_261,8304
  typedef std::map<CZString, Value> ObjectValues;ObjectValues267,8387
  typedef CppTL::SmallMap<CZString, Value> ObjectValues;ObjectValues269,8443
  struct CommentInfo {CommentInfo604,20791
    char* comment_;comment_610,20906
  union ValueHolder {ValueHolder622,21128
    LargestInt int_;int_623,21150
    LargestUInt uint_;uint_624,21171
    double real_;real_625,21194
    bool bool_;bool_626,21212
    char* string_;  // actually ptr to unsigned, followed by str, unless !allocated_string_627,21228
    ObjectValues* map_;map_628,21313
  } value_;value_629,21337
  CommentInfo* comments_;comments_633,21541
  ptrdiff_t start_;start_637,21667
  ptrdiff_t limit_;limit_638,21687
class JSON_API PathArgument {PathArgument644,21810
  enum Kind {Kind654,22008
    kindNone = 0,kindNone655,22022
    kindIndex,kindIndex656,22040
    kindKeykindKey657,22055
  JSONCPP_STRING key_;key_659,22072
  ArrayIndex index_;index_660,22095
  Kind kind_;kind_661,22116
class JSON_API Path {Path675,22532
  typedef std::vector<const PathArgument*> InArgs;InArgs691,23098
  typedef std::vector<PathArgument> Args;Args692,23149
  Args args_;args_701,23503
class JSON_API ValueIteratorBase {ValueIteratorBase707,23571
  typedef std::bidirectional_iterator_tag iterator_category;iterator_category709,23614
  typedef unsigned int size_t;size_t710,23675
  typedef int difference_type;difference_type711,23706
  typedef ValueIteratorBase SelfType;SelfType712,23737
  bool operator==(const SelfType& other) const { return isEqual(other); }operator ==714,23776
  bool operator!=(const SelfType& other) const { return !isEqual(other); }operator !=716,23851
  difference_type operator-(const SelfType& other) const {operator -718,23927
  Value::ObjectValues::iterator current_;current_758,25172
  bool isNull_;isNull_760,25264
class JSON_API ValueConstIterator : public ValueIteratorBase {ValueConstIterator772,25546
  typedef const Value value_type;value_type776,25640
  typedef const Value& reference;reference779,25740
  typedef const Value* pointer;pointer780,25774
  typedef ValueConstIterator SelfType;SelfType781,25806
  SelfType operator++(int) {operator ++793,26125
  SelfType operator--(int) {operator --799,26215
  SelfType& operator--() {operator --805,26305
  SelfType& operator++() {operator ++810,26372
  reference operator*() const { return deref(); }operator *815,26439
  pointer operator->() const { return &deref(); }operator ->817,26490
class JSON_API ValueIterator : public ValueIteratorBase {ValueIterator822,26596
  typedef Value value_type;value_type826,26685
  typedef unsigned int size_t;size_t827,26713
  typedef int difference_type;difference_type828,26744
  typedef Value& reference;reference829,26775
  typedef Value* pointer;pointer830,26803
  typedef ValueIterator SelfType;SelfType831,26829
  SelfType operator++(int) {operator ++844,27178
  SelfType operator--(int) {operator --850,27268
  SelfType& operator--() {operator --856,27358
  SelfType& operator++() {operator ++861,27425
  reference operator*() const { return deref(); }operator *866,27492
  pointer operator->() const { return &deref(); }operator ->868,27543
namespace std {std874,27619
inline void swap(Json::Value& a, Json::Value& b) { a.swap(b); }swap877,27690

third-party/jsoncpp/json/forwards.h,144
#define JSON_FORWARDS_H_INCLUDEDJSON_FORWARDS_H_INCLUDED7,283
namespace Json {Json13,417
typedef unsigned int ArrayIndex;ArrayIndex26,555

branchers/merit.hpp,86
#define __BRANCHER_MERIT____BRANCHER_MERIT__36,1774
namespace Merit {Merit47,1970

branchers/solutionbrancher.cpp,1269
class SolutionBrancher : public Brancher {SolutionBrancher38,1316
  ViewArray<IntView> v;v41,1419
  int* sol;sol43,1475
  mutable int start;start45,1523
  static int invoked; // = 0;	// invoked46,1544
  class Description : public Choice {Description48,1595
    int pos;pos51,1667
    int sol;sol52,1680
    Description(const SolutionBrancher& b, unsigned int a, int p, int s)Description54,1694
    virtual size_t size(void) const {size57,1833
    virtual void archive(Archive& e) const {archive61,1956
  SolutionBrancher(Home home,SolutionBrancher70,2199
  static void post(Home home, ViewArray<IntView>& v, int sol[]) {post74,2356
  SolutionBrancher(Space& home, SolutionBrancher& b)SolutionBrancher79,2526
  virtual Actor* copy(Space& home) {copy87,2761
  virtual bool status(const Space&) const {status92,2920
  virtual const Choice* choice(Space&) {choice107,3221
  virtual const Choice* choice(const Space&, Archive& e) {choice117,3469
  virtual ExecStatus commit(Space& home,commit124,3736
  virtual void print(const Space&, const Choice& c, unsigned int a,print135,4112
int SolutionBrancher::invoked = 0;invoked147,4379
void solution_branch(Home home, const IntVarArgs& v, const IntArgs& sol) {solution_branch150,4452

branchers/boolsolutionbrancher.hpp,70
#define __BOOL_SOLUTION_BRANCHER____BOOL_SOLUTION_BRANCHER__33,1718

branchers/filters.hpp,58
#define __FILTERS_BRANCHER____FILTERS_BRANCHER__36,1776

branchers/filters.cpp,378
bool schedulable(const Space& s, IntVar, int oi) {schedulable37,1771
bool ready(const Space& s, IntVar c, int oi) {ready42,1925
bool assignable(const Space& s, IntVar, int ti) {assignable62,2675
bool allocatable(const Space& s, SetVar pals, global_congruence g) {allocatable68,2875
bool global_assignable(const Space& s, IntVar, temporary t) {global_assignable79,3254

branchers/merit.cpp,203
namespace Merit {Merit37,1769
  double cluster_energy(const Space& s, BoolVar, global_cluster gc) {cluster_energy39,1788
  double energy(const Space& s, SetVar, global_congruence g) {energy44,1959

branchers/value.cpp,376
int most_effective_connection_decision(most_effective_connection_decision37,1769
register_space most_effective(const Space& s, SetVar pals, global_congruence g) {most_effective71,3009
register_atom least_assigned(const Space& s, IntVar pr, global_congruence g) {least_assigned135,4791
int closest_to_zero(const Space&, IntVar x, unsigned int) {closest_to_zero172,5801

branchers/value.hpp,54
#define __BRANCHER_VALUE____BRANCHER_VALUE__36,1774

branchers/solutionbrancher.hpp,60
#define __SOLUTION_BRANCHER____SOLUTION_BRANCHER__33,1713

branchers/printers.cpp,2267
void print_cluster_connection_decision(const Space &s, const Brancher&,print_cluster_connection_decision37,1772
void print_cluster_disconnection_decision(const Space &s, const Brancher&,print_cluster_disconnection_decision47,2232
void print_allocation_decision(const Space &s, const Brancher&,print_allocation_decision57,2704
void print_activation_decision(const Space &s, const Brancher&,print_activation_decision76,3360
void print_hinted_avoidance_decision(const Space &s, const Brancher&,print_hinted_avoidance_decision86,3808
void print_hinted_assignment_decision(const Space &s, const Brancher&,print_hinted_assignment_decision102,4486
void print_alignment_decision(const Space &s, const Brancher&,print_alignment_decision114,5032
void print_slack_assignment_decision(const Space &s, const Brancher&,print_slack_assignment_decision124,5461
void print_assignment_decision(const Space &s, const Brancher&,print_assignment_decision140,6022
void print_inactive_decision(const Space &s, const Brancher&,print_inactive_decision159,6708
void print_active_decision(const Space &s, const Brancher& bh,print_active_decision169,7098
void print_global_inactive_decision(const Space &, const Brancher&,print_global_inactive_decision176,7388
void print_instruction_decision(const Space &s, const Brancher&,print_instruction_decision184,7712
void print_global_instruction_decision(const Space &s, const Brancher&,print_global_instruction_decision195,8179
void print_temporary_decision(const Space &s, const Brancher&,print_temporary_decision205,8636
void print_global_temporary_decision(const Space &s, const Brancher&,print_global_temporary_decision216,9083
void print_register_decision(const Space &s, const Brancher&,print_register_decision226,9505
void print_global_register_decision(const Space &s, const Brancher&,print_global_register_decision237,9969
void print_cycle_decision(const Space &s, const Brancher&,print_cycle_decision247,10413
void print_global_cycle_decision(const Space &, const Brancher&,print_global_cycle_decision258,10816
void print_cost_decision(const Space &s, const Brancher&,print_cost_decision267,11153
void print_global_cost_decision(const Space &, const Brancher&,print_global_cost_decision277,11512

branchers/boolsolutionbrancher.cpp,1308
class BoolSolutionBrancher : public Brancher {BoolSolutionBrancher38,1320
  ViewArray<BoolView> v;v41,1427
  int* sol;sol43,1484
  mutable int start;start45,1532
  class Description : public Choice {Description47,1570
    int pos;pos50,1642
    int sol;sol51,1655
    Description(const BoolSolutionBrancher& b, unsigned int a, int p, int s)Description53,1669
    virtual size_t size(void) const {size56,1812
    virtual void archive(Archive& e) const {archive60,1935
  static int invoked; // = 0;	// invoked68,2153
  BoolSolutionBrancher(Home home,BoolSolutionBrancher70,2212
  static void post(Home home, ViewArray<BoolView>& v, int sol[]) {post74,2374
  BoolSolutionBrancher(Space& home, BoolSolutionBrancher& b)BoolSolutionBrancher79,2549
  virtual Actor* copy(Space& home) {copy87,2792
  virtual bool status(const Space&) const {status92,2955
  virtual const Choice* choice(Space&) {choice107,3256
  virtual const Choice* choice(const Space&, Archive& e) {choice117,3504
  virtual ExecStatus commit(Space& home,commit124,3771
  virtual void print(const Space&, const Choice& c, unsigned int a,print135,4147
int BoolSolutionBrancher::invoked = 0;invoked147,4414
void solution_branch(Home home, const BoolVarArgs& v, const IntArgs& sol) {solution_branch151,4456

branchers/routingbrancher.cpp,1987
class RoutingBrancher : public Brancher {RoutingBrancher37,1779
  enum RoutingDecision { ACTIVENESS, INSTRUCTION, TEMPORARY };RoutingDecision39,1822
  enum RoutingDecision { ACTIVENESS, INSTRUCTION, TEMPORARY };ACTIVENESS39,1822
  enum RoutingDecision { ACTIVENESS, INSTRUCTION, TEMPORARY };INSTRUCTION39,1822
  enum RoutingDecision { ACTIVENESS, INSTRUCTION, TEMPORARY };TEMPORARY39,1822
  class ActivenessChoice : public SingleChoice<RoutingBrancher, unsigned int> {ActivenessChoice41,1886
    ActivenessChoice(const RoutingBrancher& b, unsigned int oi0)ActivenessChoice43,1976
  class InstructionChoice :InstructionChoice47,2079
    InstructionChoice(const RoutingBrancher& b, unsigned int oi0, int ii0)InstructionChoice50,2179
  class TemporaryChoice :TemporaryChoice54,2297
    TemporaryChoice(const RoutingBrancher& b, unsigned int pi0, int ti0)TemporaryChoice57,2395
  mutable int decision;decision63,2523
  mutable int oi;oi64,2547
  mutable int pi;pi65,2565
  ViewArray<Int::BoolView> a;a66,2583
  ViewArray<Int::IntView> i;i67,2613
  ViewArray<Int::IntView> t;t68,2642
  bool aggressive;aggressive69,2671
  const vector<operation> os;os70,2690
  const vector<operand> ps;ps71,2720
  RoutingBrancher(Home home, ViewArray<Int::BoolView>& a0,RoutingBrancher75,2758
  static void post(Home home, ViewArray<Int::BoolView>& a,post83,3136
  virtual size_t dispose(Space& home) {dispose90,3450
  RoutingBrancher(Space& home, RoutingBrancher& b)RoutingBrancher95,3557
  virtual Brancher* copy(Space& home) {copy104,3809
  virtual bool status(const Space&) const {status108,3906
  virtual Choice* choice(Space&) {choice132,4416
  virtual Choice* choice(const Space&, Archive& e) {choice147,4823
  virtual ExecStatus commit(Space& home,commit182,5546
  void print(const Space& home, const Gecode::Choice& ch,print215,7030
void branch_on_routing(Home home, const BoolVarArgs& a0, const IntVarArgs& i0,branch_on_routing248,8217

branchers/pressureschedulingbrancher.cpp,1546
class PressureSchedulingBrancher : public Brancher {PressureSchedulingBrancher37,1790
  enum SchedulingDecision { SCHEDULE, SPLIT };SchedulingDecision39,1844
  enum SchedulingDecision { SCHEDULE, SPLIT };SCHEDULE39,1844
  enum SchedulingDecision { SCHEDULE, SPLIT };SPLIT39,1844
  class SchedulingChoice :SchedulingChoice41,1892
    SchedulingChoice(const PressureSchedulingBrancher& b, operation o0, int n0)SchedulingChoice44,1999
  class SplitChoice :SplitChoice48,2120
    SplitChoice(const PressureSchedulingBrancher& b, operation o0, int n0)SplitChoice51,2222
  mutable operation so;so57,2350
  mutable int sn;sn58,2374
  mutable int decision;decision59,2392
  ViewArray<Int::IntView> c;c60,2416
  PressureSchedulingBrancher(Home home, ViewArray<Int::IntView>& c0)PressureSchedulingBrancher64,2455
  static void post(Home home, ViewArray<Int::IntView>& c) {post67,2586
  virtual size_t dispose(Space& home) {dispose71,2710
  PressureSchedulingBrancher(Space& home, PressureSchedulingBrancher& b)PressureSchedulingBrancher76,2817
  virtual Brancher* copy(Space& home) {copy82,2989
  virtual bool status(const Space& home) const {status86,3097
  virtual Choice* choice(Space& home) {choice93,3324
  virtual Choice* choice(const Space&, Archive& e) {choice163,5463
  virtual ExecStatus commit(Space& home,commit189,5901
  void print(const Space& home, const Gecode::Choice& ch,print214,6870
void branch_on_pressure_scheduling(Home home, const IntVarArgs& c0) {branch_on_pressure_scheduling243,7834

branchers/routingbrancher.hpp,58
#define __ROUTING_BRANCHER____ROUTING_BRANCHER__36,1776

branchers/printers.hpp,58
#define __PRINTER_BRANCHER____PRINTER_BRANCHER__36,1776

branchers/pressureschedulingbrancher.hpp,82
#define __PRESSURE_SCHEDULING_BRANCHER____PRESSURE_SCHEDULING_BRANCHER__36,1788

common/jsonutil.cpp,114
string to_json(vector<int> v) {to_json39,1794
vector<int> to_int_vector(IntVarArray va) {to_int_vector48,2003

common/util.cpp,3459
bool overlap(int x, int xw, int y, int yw) {overlap38,1810
vector<register_atom> extend(register_atom ra, int w) {extend42,1921
bool all_assigned(const IntVarArgs& x) {all_assigned48,2104
bool holds(const BoolVar x) {holds53,2233
string show(const int i) {show57,2300
string show(const double d) {show63,2376
string show(const string s) {show69,2455
string show(const Temporand t) {show73,2500
string show(const UnisonConstraintExpr e) {show79,2582
string show(const PresolverBefore b) {show83,2715
string show(const PresolverBeforeJSON b) {show87,2827
string show(const PresolverDominates d) {show91,2943
string show(const PresolverInstrCond ic) {show96,3085
string show(const PresolverValuePrecedeChain pvc) {show100,3204
string show(const PresolverInsnClass t) {show104,3325
string show(const PresolverInsn2Class2 t) {show108,3437
string show(const PresolverActiveTable t) {show113,3591
string show(const PresolverCopyTmpTable t) {show117,3703
string show(const PresolverAcrossJSON x) {show121,3828
string show(const PresolverAcrossTuple x) {show125,3947
string show(const PresolverAcrossItemJSON x) {show129,4064
string show(const PresolverWCET x) {show133,4173
string show(const PresolverSetAcross x) {show137,4283
string show(const PresolverPrecedence x) {show141,4404
string show(const PrecedenceEdge x) {show145,4531
string emit_json(const int i) {emit_json149,4642
string emit_json(const bool b) {emit_json155,4723
string emit_json(const double d) {emit_json161,4826
string emit_json(const string s) {emit_json168,4977
string emit_json(const PresolverActiveTable x) {emit_json174,5080
string emit_json(const PresolverCopyTmpTable x) {emit_json178,5207
string emit_json(const PresolverBeforeJSON x) {emit_json183,5360
string emit_json(const PresolverAcrossJSON x) {emit_json188,5504
string emit_json(const PresolverAcrossItemJSON x) {emit_json193,5651
string emit_json(const PresolverSetAcross x) {emit_json197,5775
string emit_json(const PresolverDominates x) {emit_json202,5924
string emit_json(const PresolverInstrCond x) {emit_json207,6091
string emit_json(const PresolverValuePrecedeChain pvc) {emit_json212,6234
string emit_json(const PresolverWCET wcet) {emit_json216,6370
string emit_json(const UnisonConstraintExpr e) {emit_json220,6512
string show_class(register_class rc, const Parameters * p) {show_class232,6830
string show_space(register_space rs, const Parameters * p) {show_space238,6976
string show_register(register_atom ra, int w, const Parameters * p) {show_register244,7122
string show_instruction(instruction i, operation o, const Parameters * p) {show_instruction255,7406
string showInstructions(operation o, const IntVar& i, const Parameters * p) {showInstructions271,7904
int gcd(int a, int b) {gcd278,8145
void copy_domain(Home h, IntVar s, IntVar d) {copy_domain288,8262
void copy_domain(Home h, BoolVar s, BoolVar d) {copy_domain294,8395
string init(string s) {init300,8532
bool in_block(PresolverActiveTable & ct, block b, const Parameters * input) {in_block304,8595
bool in_block(PresolverCopyTmpTable & ctt, block b, const Parameters * input) {in_block309,8760
bool in_block(PresolverBeforeJSON & bf, block b, const Parameters * input) {in_block315,8992
bool in_block(UnisonConstraintExpr & e, block b, const Parameters * input) {in_block321,9191
vector<int> var_vector(const IntVarArgs & v) {var_vector350,9926

common/jsonutil.hpp,44
#define __JSON_UTIL____JSON_UTIL__36,1769

common/definitions.hpp,13651
#define __SOLVER_DEFINITIONS____SOLVER_DEFINITIONS__44,2051
typedef int operation;operation51,2144
typedef int temporary;temporary52,2167
typedef int operand;operand53,2190
typedef int instruction;instruction54,2211
typedef int register_space;register_space55,2236
typedef int register_class;register_class56,2264
typedef int register_atom;register_atom57,2292
typedef int block;block58,2319
typedef int resource;resource59,2338
typedef int congruence;congruence60,2360
typedef int alignable;alignable61,2384
typedef int global_congruence;global_congruence62,2407
typedef int activation_class;activation_class63,2438
typedef int latency;latency64,2468
typedef int global_cluster;global_cluster65,2489
typedef int issue_cycle;issue_cycle66,2517
enum OperationTypeOperationType68,2543
  { LINEAR, BRANCH, CALL, TAILCALL, IN, OUT, KILL, DEFINE, COMBINE, LOW, HIGH,LINEAR69,2562
  { LINEAR, BRANCH, CALL, TAILCALL, IN, OUT, KILL, DEFINE, COMBINE, LOW, HIGH,BRANCH69,2562
  { LINEAR, BRANCH, CALL, TAILCALL, IN, OUT, KILL, DEFINE, COMBINE, LOW, HIGH,CALL69,2562
  { LINEAR, BRANCH, CALL, TAILCALL, IN, OUT, KILL, DEFINE, COMBINE, LOW, HIGH,TAILCALL69,2562
  { LINEAR, BRANCH, CALL, TAILCALL, IN, OUT, KILL, DEFINE, COMBINE, LOW, HIGH,IN69,2562
  { LINEAR, BRANCH, CALL, TAILCALL, IN, OUT, KILL, DEFINE, COMBINE, LOW, HIGH,OUT69,2562
  { LINEAR, BRANCH, CALL, TAILCALL, IN, OUT, KILL, DEFINE, COMBINE, LOW, HIGH,KILL69,2562
  { LINEAR, BRANCH, CALL, TAILCALL, IN, OUT, KILL, DEFINE, COMBINE, LOW, HIGH,DEFINE69,2562
  { LINEAR, BRANCH, CALL, TAILCALL, IN, OUT, KILL, DEFINE, COMBINE, LOW, HIGH,COMBINE69,2562
  { LINEAR, BRANCH, CALL, TAILCALL, IN, OUT, KILL, DEFINE, COMBINE, LOW, HIGH,LOW69,2562
  { LINEAR, BRANCH, CALL, TAILCALL, IN, OUT, KILL, DEFINE, COMBINE, LOW, HIGH,HIGH69,2562
    SPLIT2, SPLIT4, FUN, COPY };SPLIT270,2641
    SPLIT2, SPLIT4, FUN, COPY };SPLIT470,2641
    SPLIT2, SPLIT4, FUN, COPY };FUN70,2641
    SPLIT2, SPLIT4, FUN, COPY };COPY70,2641
const instruction NULL_INSTRUCTION = 0;NULL_INSTRUCTION72,2675
const temporary NULL_TEMPORARY = -1;NULL_TEMPORARY73,2715
const temporary NULL_REGISTER = -1;NULL_REGISTER74,2752
const operation NULL_OPERATION = -1;NULL_OPERATION75,2788
const operation NULL_ACTIVATION_CLASS = -1;NULL_ACTIVATION_CLASS76,2825
enum SchedulingStrategy { EARLIEST_INSTRUCTION, ISSUE_CYCLE_SIZE_MIN };SchedulingStrategy78,2870
enum SchedulingStrategy { EARLIEST_INSTRUCTION, ISSUE_CYCLE_SIZE_MIN };EARLIEST_INSTRUCTION78,2870
enum SchedulingStrategy { EARLIEST_INSTRUCTION, ISSUE_CYCLE_SIZE_MIN };ISSUE_CYCLE_SIZE_MIN78,2870
enum GoalType { STATIC_GOAL, DYNAMIC_GOAL };GoalType80,2943
enum GoalType { STATIC_GOAL, DYNAMIC_GOAL };STATIC_GOAL80,2943
enum GoalType { STATIC_GOAL, DYNAMIC_GOAL };DYNAMIC_GOAL80,2943
const resource ISSUE_CYCLES = -1;ISSUE_CYCLES82,2989
const char AGGRESSIVE_SEARCH = 'a';AGGRESSIVE_SEARCH85,3055
const char TRIVIAL_SEARCH = 't';TRIVIAL_SEARCH86,3091
const char MINIMUM_COST_SEARCH = 'm';MINIMUM_COST_SEARCH87,3124
const char FAIL_FIRST_SEARCH = 'f';FAIL_FIRST_SEARCH88,3162
const char CONSERVATIVE_SEARCH = 'c';CONSERVATIVE_SEARCH89,3198
enum UnisonConstraintExprIdUnisonConstraintExprId93,3285
  { OR_EXPR,OR_EXPR94,3313
    AND_EXPR,AND_EXPR95,3326
    XOR_EXPR,XOR_EXPR96,3340
    IMPLIES_EXPR,IMPLIES_EXPR97,3354
    NOT_EXPR,NOT_EXPR98,3372
    ACTIVE_EXPR,		// ex-PRESOLVER_ACTIVENESSACTIVE_EXPR99,3386
    CONNECTS_EXPR,		// ex-PRESOLVER_OPERAND_TEMPORARYCONNECTS_EXPR100,3431
    IMPLEMENTS_EXPR,		// ex-PRESOLVER_OPERATIONIMPLEMENTS_EXPR101,3485
    DISTANCE_EXPR,DISTANCE_EXPR102,3533
    SHARE_EXPR,			// ex-PRESOLVER_EQUAL_TEMPORARIESSHARE_EXPR103,3552
    OPERAND_OVERLAP_EXPR,	// ex-PRESOLVER_OVERLAPPING_OPERANDSOPERAND_OVERLAP_EXPR104,3604
    TEMPORARY_OVERLAP_EXPR,	// ex-PRESOLVER_OVERLAPPING_TEMPORARIESTEMPORARY_OVERLAP_EXPR105,3667
    CALLER_SAVED_EXPR,		// ex-PRESOLVER_CALLER_SAVED_TEMPORARYCALLER_SAVED_EXPR106,3735
    ALLOCATED_EXPR,		// ex-PRESOLVER_OPERAND_CLASSALLOCATED_EXPR107,3798
    ALIGNED_EXPRALIGNED_EXPR108,3849
typedef enum divdistancedivdistance112,3900
  { DIST_HAMMING,              // Hamming distance of cyclesDIST_HAMMING113,3925
    DIST_HAMMING_DIFF,         // Hamming distance of all pairwise differencesDIST_HAMMING_DIFF114,3986
    DIST_HAMMING_DIFF_BR,      // Hamming distance of difference from nearby branches.DIST_HAMMING_DIFF_BR115,4065
    DIST_HAMMING_BR,           // Hamming distance of only branchesDIST_HAMMING_BR116,4152
    DIST_LEVENSHTEIN,          // Levenshtein for 1-1 cycle/operation and operation/cycleDIST_LEVENSHTEIN117,4220
    DIST_LEVENSHTEIN_SET,      // Levenshtein considering sets for multi issueDIST_LEVENSHTEIN_SET118,4310
    DIST_REGHAMMING,           // Hamming of register arrayDIST_REGHAMMING119,4389
    DIST_HAMMING_REG_GADGET,   // Hamming of either cycles or registers for each "gadget"DIST_HAMMING_REG_GADGET120,4449
    DIST_REG_GADGET,           // Hamming of registers for each "gadget"DIST_REG_GADGET121,4539
    DIST_CYC_GADGET,           // DiffHamming of cycles for each "gadget"DIST_CYC_GADGET122,4612
    DIST_DIFF_BR,              // Like DIST_HAMMING_DIFF_BR but calculates the actual distanceDIST_DIFF_BR123,4686
    DIST_HAMMING_BR_REG        // Like HAMMING_BR but add also registerDIST_HAMMING_BR_REG124,4781
  } DivDistance;DivDistance125,4853
typedef enum divmethoddivmethod128,4897
   DIV_DECOMPOSITION_LNS,DIV_DECOMPOSITION_LNS130,4924
   DIV_MONOLITHIC_LNS,DIV_MONOLITHIC_LNS131,4950
   DIV_MONOLITHIC_DFS,DIV_MONOLITHIC_DFS132,4973
   DIV_MAX_DIVDIV_MAX_DIV133,4996
  } DivMethod;DivMethod134,5011
typedef enum brtypebrtype138,5080
    BR_RND,BR_RND140,5104
    BR_ORIGINAL,BR_ORIGINAL141,5116
    BR_ORIGINAL_COSTLAST,BR_ORIGINAL_COSTLAST142,5133
    BR_RND_COSTLAST,BR_RND_COSTLAST143,5159
  } BrType;BrType144,5180
class UnisonConstraintExpr {UnisonConstraintExpr146,5193
 UnisonConstraintExpr() : id(AND_EXPR), data({}), children({}) {}UnisonConstraintExpr149,5268
 UnisonConstraintExpr(UnisonConstraintExprId id0, vector<int> data0,UnisonConstraintExpr150,5334
  UnisonConstraintExprId id;id153,5515
  vector<int> data;data154,5544
  vector<UnisonConstraintExpr> children;children155,5564
  bool operator<(const UnisonConstraintExpr & e) const {operator <156,5605
  bool operator==(const UnisonConstraintExpr& e) const {operator ==161,5792
  bool operator!=(const UnisonConstraintExpr& e) const {operator !=164,5926
typedef tuple<operand, vector<register_atom> > AvoidHint;AvoidHint169,6064
typedef vector<UnisonConstraintExpr> presolver_conj;presolver_conj171,6123
typedef vector<presolver_conj> presolver_disj;presolver_disj173,6177
class PresolverActiveTable {PresolverActiveTable175,6225
  vector<operation> os;os177,6262
  vector<vector<int> > tuples;tuples178,6286
  bool operator<(const PresolverActiveTable &t) const {operator <179,6317
  bool operator==(const PresolverActiveTable& t) const {operator ==183,6450
class PresolverCopyTmpTable {PresolverCopyTmpTable188,6564
  vector<operation> os;os190,6602
  vector<operand> ps;ps191,6626
  vector<vector<int> > tuples;tuples192,6648
  bool operator==(const PresolverCopyTmpTable& t) const {operator ==193,6679
class PresolverBeforeJSON {PresolverBeforeJSON198,6810
  operand p, q;p200,6846
  operand p, q;q200,6846
  UnisonConstraintExpr e;e201,6862
  PresolverBeforeJSON() : p(-1), q(-1), e() {}PresolverBeforeJSON202,6888
  PresolverBeforeJSON(operation p, operation q, UnisonConstraintExpr e):PresolverBeforeJSON203,6935
  bool operator<(const PresolverBeforeJSON &b) const {operator <205,7032
  bool operator==(const PresolverBeforeJSON& b) const {operator ==210,7189
class PresolverAcrossItemJSON {PresolverAcrossItemJSON215,7304
  temporary t;t217,7344
  UnisonConstraintExpr e;e218,7359
  PresolverAcrossItemJSON() : t(-1), e() {}PresolverAcrossItemJSON219,7385
  PresolverAcrossItemJSON(temporary t, UnisonConstraintExpr e):PresolverAcrossItemJSON220,7429
  bool operator<(const PresolverAcrossItemJSON& that) const {operator <222,7511
  bool operator==(const PresolverAcrossItemJSON& that) const {operator ==226,7640
class PresolverAcrossItem {PresolverAcrossItem231,7754
  temporary t;t233,7790
  presolver_disj d;d234,7805
  bool operator<(const PresolverAcrossItem& that) const {operator <235,7825
  bool operator==(const PresolverAcrossItem& that) const {operator ==239,7950
class PresolverAcross {PresolverAcross244,8060
  operation o;o246,8092
  vector<register_atom> ras;ras247,8107
  vector<PresolverAcrossItem> as;as248,8136
  bool operator<(const PresolverAcross &that) const {operator <249,8170
  bool operator==(const PresolverAcross& that) const {operator ==254,8341
class PresolverAcrossJSON {PresolverAcrossJSON259,8470
  operation o;o261,8506
  vector<register_atom> ras;ras262,8521
  vector<PresolverAcrossItemJSON> as;as263,8550
  bool operator<(const PresolverAcrossJSON &that) const {operator <264,8588
  bool operator==(const PresolverAcrossJSON& that) const {operator ==269,8763
class PresolverSetAcross {PresolverSetAcross274,8896
  operation o;o276,8931
  vector<register_atom> ras;ras277,8946
  vector<vector<temporary> > tsets;tsets278,8975
  bool operator==(const PresolverSetAcross& that) const {operator ==279,9011
class PresolverDominates {PresolverDominates284,9149
  operation o1, o2;o1286,9184
  operation o1, o2;o2286,9184
  vector<instruction> ins;ins287,9204
  vector<temporary> temps;temps288,9231
  bool operator<(const PresolverDominates &d) const {operator <289,9258
  bool operator==(const PresolverDominates& that) const {operator ==295,9477
class PresolverInstrCond {PresolverInstrCond300,9636
  operation o;o302,9671
  instruction i;i303,9686
  operand q;q304,9703
  bool operator==(const PresolverInstrCond& that) const {operator ==305,9716
class PresolverValuePrecedeChain {PresolverValuePrecedeChain310,9842
  vector<temporary> ts;ts312,9885
  vector<vector<register_atom>> rss;rss313,9909
  bool operator==(const PresolverValuePrecedeChain& that) const {operator ==314,9946
class PresolverInsnClass {PresolverInsnClass319,10069
  instruction insn;insn321,10104
  vector<register_class> rclass;rclass322,10124
  bool operator<(const PresolverInsnClass& that) const {operator <323,10157
  bool operator==(const PresolverInsnClass& that) const {operator ==327,10308
class PresolverInsn2Class2 {PresolverInsn2Class2332,10433
  instruction insn1;insn1334,10470
  instruction insn2;insn2335,10491
  vector<register_class> class1;class1336,10512
  vector<register_class> class2;class2337,10545
  bool operator<(const PresolverInsn2Class2& that) const {operator <338,10578
  bool operator==(const PresolverInsn2Class2& that) const {operator ==344,10861
class PrecedenceEdge {PrecedenceEdge349,11042
  operation i, j;i351,11073
  operation i, j;j351,11073
  latency n;n352,11091
  bool operator<(const PrecedenceEdge& p) const {operator <353,11104
  bool operator==(const PrecedenceEdge& p) const {operator ==358,11254
class PresolverPrecedence {PresolverPrecedence363,11358
  operation i, j;i365,11394
  operation i, j;j365,11394
  int n;n366,11412
  presolver_disj d;d367,11421
  PresolverPrecedence() : i(-1), j(-1), n(-1), d() { }PresolverPrecedence369,11459
  PresolverPrecedence(operation i, operation j, latency n, presolver_disj d):PresolverPrecedence370,11514
  bool operator<(const PresolverPrecedence & p) const {operator <373,11640
  bool operator==(const PresolverPrecedence & p) const {operator ==379,11834
class PresolverBefore {PresolverBefore384,11956
  operand p, q;p386,11988
  operand p, q;q386,11988
  presolver_disj d;d387,12004
  bool operator<(const PresolverBefore &b) const {operator <388,12024
  bool operator==(const PresolverBefore& b) const {operator ==393,12177
class PresolverAcrossTuple {PresolverAcrossTuple398,12288
  operation o;o400,12325
  temporary t;t401,12340
  presolver_disj d;d402,12355
class PresolverWCET {PresolverWCET406,12380
  operation o;o408,12410
  instruction i;i409,12425
  latency d;d410,12442
  PresolverWCET():PresolverWCET412,12473
  PresolverWCET(operation o, instruction i, latency d):PresolverWCET414,12520
typedef pair<operation, unsigned int> InstructionAssignment;InstructionAssignment419,12606
#define JSONVALUE JSONVALUE422,12684
#define GIST_OPTIONS GIST_OPTIONS423,12715
#define JSONVALUE JSONVALUE425,12756
#define GIST_OPTIONS GIST_OPTIONS426,12786
class GistOptionsStub {};GistOptionsStub429,12831
enum RegisterAtomClassRegisterAtomClass431,12858
  {RA_CALLEE_SAVED, RA_CALLER_SAVED, RA_RESERVED};RA_CALLEE_SAVED432,12881
  {RA_CALLEE_SAVED, RA_CALLER_SAVED, RA_RESERVED};RA_CALLER_SAVED432,12881
  {RA_CALLEE_SAVED, RA_CALLER_SAVED, RA_RESERVED};RA_RESERVED432,12881
enum TemporandTypeTemporandType434,12933
  {TEMPORAND_OPERAND, TEMPORAND_TEMPORARY, TEMPORAND_REGISTER, TEMPORAND_NONE};TEMPORAND_OPERAND435,12952
  {TEMPORAND_OPERAND, TEMPORAND_TEMPORARY, TEMPORAND_REGISTER, TEMPORAND_NONE};TEMPORAND_TEMPORARY435,12952
  {TEMPORAND_OPERAND, TEMPORAND_TEMPORARY, TEMPORAND_REGISTER, TEMPORAND_NONE};TEMPORAND_REGISTER435,12952
  {TEMPORAND_OPERAND, TEMPORAND_TEMPORARY, TEMPORAND_REGISTER, TEMPORAND_NONE};TEMPORAND_NONE435,12952
class Temporand {Temporand437,13033
  int _id;_id439,13060
  TemporandType _type;_type440,13071

common/definitions.cpp,969
Temporand::Temporand() {}Temporand40,1846
Temporand::Temporand(int id, TemporandType t) : _id(id), _type(t) {}Temporand41,1872
Temporand::Temporand(const Temporand& t) : _id(t.id()), _type(t.type()) {}Temporand42,1941
bool Temporand::operator==(const Temporand& t) const {operator ==44,2017
bool Temporand::operator!=(const Temporand& t) const {operator !=48,2126
bool Temporand::operator<(const Temporand& t) const {operator <52,2208
std::ostream& operator<<(std::ostream& os, const Temporand& t){operator <<59,2415
int Temporand::id() const {id73,2743
TemporandType Temporand::type() const {type77,2788
bool Temporand::is_operand() const {is_operand81,2847
bool Temporand::is_temporary() const {is_temporary85,2927
bool Temporand::is_register() const {is_register89,3011
Temporand Temporand::p(int id) {p94,3119
Temporand Temporand::t(int id) {t99,3224
Temporand Temporand::r(int id){r104,3331
Temporand Temporand::n(int id){n109,3436

common/util.hpp,3000
#define __SOLVER_UTIL____SOLVER_UTIL__37,1813
class UsageTask {UsageTask62,2246
  IntVar c;c64,2272
  IntVar dur;dur65,2284
  IntVar e;e66,2298
  int con;con67,2310
  BoolVar o;o68,2321
CopyAttributes;CopyAttributes73,2401
vector<T> concat(vector<T> v1, vector<T> v2) {concat76,2436
unsigned int find_index(const vector<T> & v, T e) {find_index85,2653
bool contains(const C& c, T e) {contains92,2865
bool subseteq(const C1& s1, const C2& s2) {subseteq97,2988
set<T> to_set(const vector<T> & v) {to_set105,3203
vector<T> to_vector(const set<T> & s) {to_vector110,3298
T max_of(const vector<T> & v) {max_of115,3399
T max_of(vector<vector<vector<T> > > & v3) {max_of120,3495
T maybe_max_of(T e, const vector<T> & v) {maybe_max_of129,3706
T min_of(vector<T> & v) {min_of134,3806
T min_of(vector<vector<vector<T> > > & v3) {min_of139,3896
T maybe_min_of(T e, const vector<T> & v) {maybe_min_of148,4107
T sum_of(const vector<T> & v) {sum_of153,4207
T from_singleton(vector<T> & v) {from_singleton158,4309
void init_vector(vector<T> & v, unsigned int size, T e) {init_vector164,4412
RangeListIter extend(Gecode::Region & r, T & rs, int w) {extend170,4559
unsigned int range_size(const T & r) {range_size178,4816
string show_range(const T & r) {show_range184,4921
string show(const C& container, string l = ",", string pre = "",show233,5900
string show(const pair<C1,C2>& container, string limits = "(,)") {show248,6331
string emit_json(const C& container) {emit_json285,7235
string emit_json_line(string e, const T o) {emit_json_line301,7582
string emit_json_line_last(string e, const T o) {emit_json_line_last306,7700
bool disjoint_sets(const C& s1, const C& s2) {disjoint_sets311,7825
class SingleChoice : public Choice {SingleChoice320,8108
  I first;first324,8155
  SingleChoice(const B& b, I first0) : Choice(b, 2), first(first0) {}SingleChoice326,8167
  virtual size_t size(void) const { return sizeof(*this); }size328,8238
  virtual void archive(Archive& e) const {archive330,8299
class DoubleChoice : public Choice {DoubleChoice338,8428
  I first;first342,8475
  J second;second343,8486
  DoubleChoice(const B& b, I first0, J second0)DoubleChoice345,8499
  virtual size_t size(void) const { return sizeof(*this); }size348,8602
  virtual void archive(Archive& e) const {archive350,8663
unsigned int index_of(C list, T element) {index_of381,9376
S sepBy(vector<S> s, S sep) {sepBy387,9538
S showDomain(vector<S> s) {showDomain400,9745
class disjointSet {disjointSet406,9874
  map<T, T> rep;rep407,9894
  void insert(T e, T r) { rep[e] = r; }insert409,9919
  T find(T e) { return rep[e]; }find410,9959
  void merge(T e1, T e2) {merge411,9992
  int count(T e) { return rep.count(e); };count416,10188
  typename::map<T, T>::iterator begin() { return rep.begin(); }begin417,10231
  typename::map<T, T>::iterator end() { return rep.end(); }end418,10295
  set<set<T> > classes() {classes419,10355

solver.mk,1470
SOLVERCOMMONDIR := $(SOLVERDIR)/commonSOLVERCOMMONDIR34,1713
SOLVERMODELSDIR := $(SOLVERDIR)/modelsSOLVERMODELSDIR35,1752
SOLVERBRANCHERSDIR := $(SOLVERDIR)/branchersSOLVERBRANCHERSDIR36,1791
SOLVERPROCEDURESDIR := $(SOLVERDIR)/proceduresSOLVERPROCEDURESDIR37,1836
SOLVERINSPECTORSDIR := $(SOLVERDIR)/inspectorsSOLVERINSPECTORSDIR38,1883
SOLVERMAIN = $(SOLVERDIR)/solverSOLVERMAIN40,1931
SOLVERCOMMON := definitions util jsonutilSOLVERCOMMON42,1965
SOLVERMODELS := parameters options model localmodel completemodel globalmodel	\SOLVERMODELS43,2007
SOLVERBRANCHERS := filters merit value printers pressureschedulingbrancher	\SOLVERBRANCHERS45,2112
SOLVERPROCEDURES := commonprocedures globalprocedures localproceduresSOLVERPROCEDURES47,2205
SOLVERINSPECTORS := consoleinspector modelgraphicsview modelinspector dot	\SOLVERINSPECTORS48,2275
SOLVERCLASSES := $(addprefix $(SOLVERCOMMONDIR)/, $(SOLVERCOMMON)) $(addprefix	\SOLVERCLASSES56,2773
SOLVERCPPSRC := $(addsuffix .cpp, $(SOLVERMAIN) $(SOLVERCLASSES))SOLVERCPPSRC61,3069
SOLVERHPPSRC := $(addsuffix .hpp, $(SOLVERCLASSES))SOLVERHPPSRC62,3135
SOLVERSRC := $(SOLVERCPPSRC) $(SOLVERHPPSRC)SOLVERSRC64,3188
UNISON_SOLVER_CONFIG ?= graphicsUNISON_SOLVER_CONFIG66,3234
SOLVERPROJECT := $(SOLVERDIR)/solver.proSOLVERPROJECT68,3268
GENMAKEFILE = $(SOLVERDIR)/generated.mkGENMAKEFILE70,3310
OSX_SOLVERBIN = $(SOLVERDIR)/gecode-solver.app/Contents/MacOS/gecode-solverOSX_SOLVERBIN72,3351

solver.cpp,2348
class LocalJob : public Support::Job<Solution<LocalModel> > {LocalJob95,3464
  Solution<LocalModel> ls;ls98,3611
  GIST_OPTIONS * lo;lo100,3674
  int iteration;iteration102,3718
  vector<vector<LocalModel *> > * local_solutions;local_solutions104,3778
  LocalJob(Solution<LocalModel> ls0, GIST_OPTIONS * lo0, int iteration0,LocalJob106,3837
  virtual Solution<LocalModel> run(int) {run110,4059
class LocalJobs {LocalJobs140,5215
  Solution<GlobalModel> gs;gs143,5309
  GIST_OPTIONS * lo;lo145,5373
  int iteration;iteration147,5417
  vector<vector<LocalModel *> > * local_solutions;local_solutions149,5477
  vector<block> blocks;blocks151,5570
  unsigned int k;k153,5619
  LocalJobs(Solution<GlobalModel> gs0, GIST_OPTIONS * lo0, int iteration0,LocalJobs155,5645
  bool operator ()(void) const {operator ()160,5928
  LocalJob * job(void) {job163,5995
class ResultData {ResultData173,6330
  GlobalModel * solution;solution177,6359
  bool proven;proven178,6385
  long long int fail;fail179,6400
  long long int it_fail;it_fail180,6422
  long long int node;node181,6447
  long long int it_node;it_node182,6469
  int presolver_time;presolver_time183,6494
  int presolving_time;presolving_time184,6516
  int solving_time;solving_time185,6539
  int it_solving_time;it_solving_time186,6559
  ResultData(GlobalModel * solution, bool proven, long long int it_fail,ResultData188,6583
class GlobalData {GlobalData204,7113
  int global_n_int_vars;global_n_int_vars208,7142
  int global_n_bool_vars;global_n_bool_vars209,7167
  int global_n_set_vars;global_n_set_vars210,7193
  GlobalData(int global_n_int_vars0,GlobalData212,7219
string produce_json(const ResultData& rd,produce_json221,7471
void emit_local(LocalModel * local, unsigned long int iteration, string prefix) {emit_local270,9135
string unsat_report(const GlobalModel * base) {unsat_report284,9555
string cost_status_report(GlobalModel * base, const GlobalModel * sol) {cost_status_report291,9761
void emit_output_exit(GlobalModel * base, const vector<ResultData> & results,emit_output_exit328,10913
void timeout_exit(GlobalModel * base, const vector<ResultData> & results,timeout_exit386,12534
bool has_solution(vector<ResultData> & results) {has_solution393,12824
int main(int argc, char* argv[]) {main402,12979

models/localmodel.hpp,298
#define __LOCAL_MODEL____LOCAL_MODEL__36,1771
class LocalModel : public Model {LocalModel52,2100
  IntVarArray v_f;v_f59,2182
  BoolVarArray v_p;v_p62,2257
  block b;b67,2346
  IntVar f(block, unsigned int n) const { return v_f[n]; };f87,2675
  IntAction c_activity;c_activity93,2785

models/solver-parameters.hpp,837
#define __SOLVER_RESULT_PARAMETERS____SOLVER_RESULT_PARAMETERS__36,1756
class SolverParameters {SolverParameters55,2082
  vector<int> registers;registers60,2141
  vector<int> instructions;instructions62,2167
  vector<int> cycles;cycles64,2196
  vector<int> temporaries;temporaries66,2219
  string solver;solver68,2247
  bool has_solution;has_solution70,2265
  bool proven;proven72,2287
  vector<int> cost;cost74,2303
  int presolver_time;presolver_time76,2324
  int solver_time;solver_time78,2347
  SolverParameters() {};SolverParameters84,2416
  T get_scalar(JSONVALUE root) {get_scalar94,2698
  vector<T> get_vector(JSONVALUE root) {get_vector101,2805
  void get_element(QScriptValue root, vector<T> & vi) {get_element110,2948
  void get_element(Json::Value root, vector<T> & vi) {get_element126,3271

models/localdivmodel.cpp,1135
LocalDivModel::LocalDivModel(Parameters * p_input, ModelOptions * p_options,LocalDivModel56,2351
LocalDivModel::LocalDivModel(LocalDivModel& cg) :LocalDivModel76,2977
void LocalDivModel::set_solver(JSONVALUE root) {set_solver87,3179
LocalDivModel* LocalDivModel::copy(void) {copy91,3270
void LocalDivModel::constrain_total_cost(int cost) {constrain_total_cost95,3351
void LocalDivModel::post_diversification_constraints(void) {post_diversification_constraints102,3542
void LocalDivModel::post_diversification_diffs(void) {post_diversification_diffs110,3732
void LocalDivModel::post_diversification_hamming(void) {post_diversification_hamming124,4169
bool LocalDivModel::is_real_type(int o) {is_real_type135,4481
bool LocalDivModel::is_branch_type(int o) {is_branch_type143,4674
void LocalDivModel::constrain(const Space & _b) {constrain150,4796
bool LocalDivModel::master(const MetaInfo& mi) {master189,5773
bool LocalDivModel::slave(const MetaInfo& mi) {slave207,6279
void LocalDivModel::next(const LocalDivModel& l) {next231,6958
void LocalDivModel::post_div_branchers(void) {post_div_branchers277,8091

models/parameters.hpp,10827
#define __SOLVER_PARAMETERS____SOLVER_PARAMETERS__40,1893
class Parameters {Parameters69,2486
  vector<block> B;B76,2559
  vector<operation> O;O79,2602
  vector<operand> P;P82,2647
  vector<temporary> T;T85,2693
  vector<block> oblock;oblock88,2746
  vector<vector<operand> > operands;operands91,2803
  vector<vector<temporary> > temps;temps94,2896
  vector<bool> use;use97,2968
  vector<vector<operand> > adjacent;adjacent100,3012
  vector<vector<int> > preassign;preassign103,3098
  vector<int> width;width106,3192
  vector<int> freq;freq109,3271
  vector<int> minlive;minlive112,3343
  vector<vector<vector<int> > > dep;dep115,3395
  vector<vector<int> > prescheduled;prescheduled118,3484
  vector<instruction> I;I123,3574
  vector<instruction> R;R126,3632
  vector<vector<vector<int> > > dist;dist129,3735
  vector<vector<vector<register_class> > > rclass;rclass133,3877
  vector<vector<register_atom> > atoms;atoms136,3963
  vector<vector<instruction> > instructions;instructions139,4056
  vector<vector<vector<int> > > lat;lat143,4190
  vector<vector<vector<bool> > > bypass;bypass147,4326
  vector<int> cap;cap150,4409
  vector<vector<int> > con;con153,4493
  vector<vector<int> > dur;dur156,4592
  vector<vector<int> > off;off159,4689
  vector<vector<int> > aligned;aligned162,4746
  vector<int> adist;adist165,4833
  vector<vector<operand> > packed;packed168,4881
  vector<vector<operand> > exrelated;exrelated171,4953
  vector<vector<vector<register_atom> > > table;table174,5056
  vector<vector<instruction> > activators;activators177,5153
  vector<UnisonConstraintExpr> E;E180,5238
  vector<bool> optimize_dynamic;optimize_dynamic185,5378
  vector<resource> optimize_resource;optimize_resource188,5485
  vector<int> maxf;maxf191,5562
  double freq_scale;freq_scale194,5611
  vector<vector<temporary> > tmp;tmp199,5713
  vector<operand> definer;definer202,5801
  vector<operation> oper;oper205,5871
  vector<vector<operand> > congr;congr208,5929
  vector<vector<operation> > ops;ops211,5994
  vector<register_space> RS;RS214,6057
  vector<int> maxc;maxc217,6126
  vector<int> type;type220,6175
  vector<vector<operand> > copyrel;copyrel223,6230
  vector<vector<operation> > interchangeable;interchangeable226,6303
  vector<vector<block> > cfg;cfg228,6400
  vector<vector<operand> > clusters;clusters231,6502
  vector<register_space> space;space234,6583
  vector<vector<register_atom> > range;range237,6655
  vector<register_space> home;home240,6737
  vector<bool> infinite;infinite243,6814
  vector<bool> bounded;bounded246,6884
  vector<string> insname;insname249,6939
  vector<string> atomname;atomname252,6989
  vector<string> classname;classname255,7050
  vector<string> spacename;spacename258,7112
  vector<register_atom> callersaved;callersaved261,7174
  vector<register_atom> calleesaved;calleesaved264,7245
  vector<int> optional_min;optional_min269,7374
  vector<PresolverActiveTable> active_tables;active_tables272,7450
  vector<PresolverCopyTmpTable> tmp_tables;tmp_tables275,7568
  vector<UnisonConstraintExpr> nogoods;nogoods278,7633
  vector<UnisonConstraintExpr> nogoods2;nogoods2281,7699
  vector<UnisonConstraintExpr> precedences;precedences284,7774
  vector<UnisonConstraintExpr> precedences2;precedences2287,7857
  vector<PresolverBeforeJSON> before;before290,7951
  vector<PresolverBeforeJSON> before2;before2293,8043
  vector<PresolverAcrossJSON> across;across296,8122
  vector<PresolverSetAcross> set_across;set_across299,8203
  vector<vector<vector<int> > > domops;domops302,8296
  vector<operand> last_use;last_use305,8368
  vector<vector<int> > infassign;infassign308,8461
  vector<vector<operand> > domuses;domuses311,8523
  vector<vector<operation> > precs;precs314,8584
  vector<vector<int> > assignhints;assignhints317,8659
  vector<PresolverDominates> dominates;dominates320,8718
  vector<vector<operand> > difftemps;difftemps323,8781
  vector<vector<operand> > diffregs;diffregs326,8841
  vector<vector<operation> > calleesaved_spill;calleesaved_spill329,8914
  vector<vector<operand> > strictly_congr;strictly_congr332,9008
  vector<PresolverValuePrecedeChain> value_precede_chains;value_precede_chains335,9089
  vector<vector<operand> > quasi_adjacent;quasi_adjacent338,9183
  vector<vector<vector<int> > > long_latency_index;long_latency_index341,9331
  vector<vector<operand> > long_latency_def_use;long_latency_def_use344,9425
  vector<vector<resource> > subsumed_resources;subsumed_resources347,9504
  vector<vector<register_atom> > temp_domain;temp_domain350,9597
  vector<PresolverWCET> wcet;wcet353,9699
  vector<register_class> RC;RC369,9994
  vector<vector<operand> > ope;ope372,10052
  vector<congruence> C;C375,10102
  vector<register_atom> RA;RA378,10147
  vector<operation> in;in381,10208
  vector<operation> out;out384,10266
  vector<block> pb;pb387,10323
  vector<block> tb;tb390,10377
  vector<vector<vector<operand> > > bcongr;bcongr393,10429
  vector<operand> representative;representative396,10521
  vector<congruence> operand_congruence;operand_congruence399,10602
  map<operand, unsigned int> fu;fu402,10694
  unsigned int nu;nu405,10780
  vector<unsigned int> bfu;bfu408,10864
  vector<unsigned int> bnu;bnu411,10959
  vector<map<temporary, unsigned int> > temporary_index;temporary_index414,11055
  map<operand, unsigned int> operand_index;operand_index417,11157
  vector<vector<vector<int> > > baligned;baligned420,11244
  vector<vector<int> > badist;badist423,11355
  vector<vector<vector<operand> > > bpacked;bpacked426,11427
  vector<operand> copyreltop;copyreltop429,11532
  vector<operation> def_opr;def_opr432,11606
  vector<vector<operation> > copies;copies435,11662
  vector<vector<operation> > mandatory;mandatory438,11740
  vector<int> accman;accman441,11831
  vector<int> mandatory_index;mandatory_index444,11910
  vector<alignable> A;A447,11966
  vector<pair<operand, operand> > pairs;pairs450,12019
  vector<bool> delimiter;delimiter453,12104
  vector<global_congruence> G;G456,12155
  vector<congruence> regular;regular459,12251
  map<congruence, global_congruence> global;global462,12346
  map<operand, temporary> single_temp;single_temp465,12461
  vector<vector<operand> > users;users468,12545
  vector<vector<operation> > use_copies;use_copies471,12641
  vector<vector<operation> > def_copies;def_copies474,12747
  vector<set<register_space> > candidate_spaces;candidate_spaces477,12848
  vector<vector<operation> > fixed_predecessors;fixed_predecessors480,12940
  vector<vector<pair<operand, operand> > > redefined;redefined483,13037
  vector<vector<operand> > groupcopyrel;groupcopyrel486,13141
  vector<bool> preassigned;preassigned489,13235
  vector<int> operand_width;operand_width492,13291
  vector<set<register_atom> > destroyed;destroyed495,13365
  vector<AvoidHint> avoidhints;avoidhints498,13444
  vector<operation> callee_saved_stores;callee_saved_stores501,13516
  vector<operation> callee_saved_loads;callee_saved_loads504,13596
  vector<activation_class> AC;AC507,13661
  vector<set<instruction> > activation_class_instructions;activation_class_instructions510,13734
  vector<set<operation> > activation_class_operations;activation_class_operations513,13835
  vector<operation> activation_class_representative;activation_class_representative516,13946
  infinite_atom_range;infinite_atom_range520,14134
  set<operand> congruent;congruent523,14202
  map<operand, vector<operand> > succ;succ526,14268
  vector<vector<vector<operation> > > binterchangeable;binterchangeable529,14358
  vector<int> min_active_lat;min_active_lat532,14479
  vector<global_cluster> GC;GC535,14531
  vector<set<global_cluster> > implied_clusters;implied_clusters538,14633
  map<operand, set<operation> > remat;remat541,14748
  vector<vector<temporary> > real_temps;real_temps544,14848
  vector<set<operand> > related_operands;related_operands547,14926
  vector<operation> first_copy;first_copy550,15032
  int min_lat;min_lat553,15094
  int max_lat;max_lat556,15139
  vector<IntSet> atom_set;atom_set559,15192
  vector<bool> global_operand;global_operand562,15256
  map<operand, int> global_index;global_index565,15322
  vector<int> first_global_index;first_global_index568,15408
  vector<int> n_global;n_global571,15488
  vector<bool> global_optional;global_optional574,15573
  map<operand, int> global_optional_index;global_optional_index577,15649
  vector<int> first_global_optional_index;first_global_optional_index580,15753
  vector<int> n_global_optionals;n_global_optionals583,15851
  vector<temporary> ultimate_source;ultimate_source586,15925
  vector<int> p_preassign;p_preassign591,16035
  vector<int> t_preassign;t_preassign594,16105
  vector<enum RegisterAtomClass> ra_class;ra_class597,16210
  vector<vector<PresolverActiveTable>> bactive_tables;bactive_tables600,16312
  vector<PresolverActiveTable> gactive_tables;gactive_tables603,16430
  vector<vector<PresolverCopyTmpTable>> btmp_tables;btmp_tables606,16560
  vector<UnisonConstraintExpr> gnogoods;gnogoods609,16649
  vector<vector<UnisonConstraintExpr> > bnogoods;bnogoods612,16722
  vector<vector<UnisonConstraintExpr> > bnogoods2;bnogoods2615,16809
  vector<vector<PresolverBeforeJSON>> bbefore;bbefore618,16920
  vector<vector<PresolverBeforeJSON>> bbefore2;bbefore2621,17032
  vector<vector<PresolverAcrossJSON> > bacross;bacross624,17131
  vector<vector<PresolverSetAcross> > bset_across;bset_across627,17233
  vector<vector<UnisonConstraintExpr>> bprecedences;bprecedences630,17329
  vector<vector<UnisonConstraintExpr>> bprecedences2;bprecedences2633,17432
  vector<vector<vector<vector<int> > > > bdomops;bdomops636,17549
  vector<vector<vector<operand> > > bdomuses;bdomuses639,17638
  vector<vector<vector<operation> > > bprecs;bprecs642,17709
  vector<vector<PresolverDominates>> bdominates;bdominates645,17789
  vector<vector<vector<operand> > > bdifftemps;bdifftemps648,17872
  vector<vector<vector<operand> > > bdiffregs;bdiffregs651,17953
  vector<vector<PresolverWCET> > bwcet;bwcet654,18062
  unsigned int N;N657,18129
  Parameters() {};Parameters661,18160
  T get_scalar(JSONVALUE root) {get_scalar682,19181
  vector<T> get_vector(JSONVALUE root) {get_vector689,19288
  vector<vector<T> > get_2d_vector(JSONVALUE root) {get_2d_vector696,19414
  vector<vector<vector<T> > > get_3d_vector(JSONVALUE root) {get_3d_vector701,19533
  void get_element(QScriptValue root, vector<T> & vi) {get_element709,19688
  void get_element(Json::Value root, vector<T> & vi) {get_element725,20011

models/divmodel.hpp,1316
#define __DIV_MODEL____DIV_MODEL__36,1741
  uint start;start49,2037
  uint end;end50,2051
} gadget_t;gadget_t51,2063
class DivModel : public GlobalModel {DivModel55,2098
  IntVarArray v_diff;v_diff60,2162
  IntVarArray v_hamm;v_hamm63,2226
  IntVarArray v_reghamm;v_reghamm66,2297
  IntVarArray v_gadget;v_gadget69,2364
  IntVarArray v_gc;v_gc72,2414
  SetVarArray v_oc;v_oc75,2454
  IntVar dist;dist78,2489
  double div_p;div_p84,2591
  Rnd div_r;div_r86,2637
  int mindist;mindist89,2681
  SolverParameters *solver;solver91,2697
  vector<operation> branch_operations;branch_operations94,2727
  vector<operation> real_operations;real_operations95,2766
  vector<gadget_t> gadgets;gadgets97,2804
  vector<int> gadgets_operations;gadgets_operations98,2832
  void set_random(Rnd r) {div_r = r;};set_random101,2902
  void set_relax(double p) {div_p = p;};set_relax103,2942
  IntVar diff(operation o) const {return v_diff[o]; }diff107,3009
  IntVar hamm(operation o) const {return v_hamm[o]; }hamm109,3064
  IntVar reghamm(operand p) const {return v_reghamm[p]; }reghamm111,3121
  IntVar gadget(operation o) const {return v_gadget[o]; }gadget113,3180
  IntVar gc(operation o) const {return v_gc[o]; }gc115,3239
  SetVar oc(int c) const {return v_oc[c]; }oc118,3323

models/maxdivmodel.hpp,240
#define __MAX_DIV_MODEL____MAX_DIV_MODEL__36,1745
class MaxDivModel : public DivModel {MaxDivModel45,1868
  IntVar maxdist; //  = IntVar(*this, 1, 10000);maxdist51,1931
  vector<MaxDivModel *> input_solutions;input_solutions56,2035

models/relaxedmodel.cpp,1745
vector<temporary> & RelaxedModel::T() const { return input->T; }T41,2036
vector<operation> & RelaxedModel::O() const { return input->O; }O43,2102
vector<operand> & RelaxedModel::P() const { return input->P; }P45,2168
BoolVar RelaxedModel::x(operand p) const {x47,2232
BoolVar RelaxedModel::u(operand p, temporary t) const {u55,2407
IntVar RelaxedModel::lat(operand p, temporary t) const {lat61,2574
BoolVar RelaxedModel::p(operation, operation) {p67,2744
IntVar RelaxedModel::s(operand) const {s71,2811
BoolVar RelaxedModel::relaxed_adhoc_constraint_var(UnisonConstraintExpr & e) {relaxed_adhoc_constraint_var78,3043
RelaxedModel::RelaxedModel(Parameters * p_input, ModelOptions * p_options,RelaxedModel137,4677
RelaxedModel::RelaxedModel(RelaxedModel& cg) :RelaxedModel161,5589
RelaxedModel* RelaxedModel::copy(void) {copy164,5651
void RelaxedModel::post_relaxed_decision_variable_domain_definitions(void) {post_relaxed_decision_variable_domain_definitions168,5729
void RelaxedModel::post_relaxed_secondary_variable_definitions(void) {post_relaxed_secondary_variable_definitions175,5919
void RelaxedModel::post_core_constraints(void) {post_core_constraints185,6255
void RelaxedModel::post_instruction_constraints(void) {post_instruction_constraints238,8313
void RelaxedModel::post_relaxed_nogood_constraints(void) {post_relaxed_nogood_constraints249,8737
void RelaxedModel::post_active_operation_branching(vector<operation> O) {post_active_operation_branching257,9085
void RelaxedModel::post_operand_temporary_branching(vector<operand> P) {post_operand_temporary_branching264,9276
void RelaxedModel::post_instruction_operation_branching(vector<operation> O) {post_instruction_operation_branching271,9463

models/globalmodel.hpp,727
#define __GLOBAL_MODEL____GLOBAL_MODEL__36,1772
class GlobalModel : public CompleteModel {GlobalModel48,1981
  BoolVarArray v_pal;v_pal55,2119
  SetVarArray v_pals;v_pals58,2221
  BoolVarArray v_oa;v_oa61,2305
  SetVarArray v_ali;v_ali64,2390
  double af;af69,2484
  bool cf;cf72,2551
  void set_aggressiveness(double a1) {af = a1;};set_aggressiveness74,2563
  void set_connect_first(bool cf1) {cf = cf1;};set_connect_first76,2613
  BoolVar pal(operand p, register_space rs) const {pal80,2687
  SetVar pals(global_congruence g) const { return v_pals[g]; }pals84,2794
  BoolVar oa(alignable a) const { return v_oa[a]; }oa86,2858
  SetVar ali(global_congruence g) const { return v_ali[g]; }ali88,2911

models/simplemodel.hpp,113
#define __SIMPLE_MODEL____SIMPLE_MODEL__36,1772
class SimpleModel : public CompleteModel {SimpleModel43,1874

models/decompdivmodel.cpp,757
DecompDivModel::DecompDivModel(Parameters * p_input, ModelOptions * p_options,DecompDivModel38,1751
DecompDivModel::DecompDivModel(DecompDivModel& cg) :DecompDivModel56,2234
DecompDivModel* DecompDivModel::copy(void) {copy65,2426
void DecompDivModel::post_div_decomp_branchers() {post_div_decomp_branchers107,3598
void DecompDivModel::constrain(const Space & _b) {constrain205,5974
void DecompDivModel::apply_div_solution(DivModel * d) {apply_div_solution267,7469
void DecompDivModel::post_constrain(DecompDivModel* _b) {post_constrain311,8487
bool DecompDivModel::master(const MetaInfo& mi) {master355,9627
bool DecompDivModel::slave(const MetaInfo& mi) {slave371,10119
void DecompDivModel::next(const DecompDivModel& l) {next391,10674

models/parameters.cpp,3238
Parameters::Parameters(JSONVALUE root) :Parameters41,1890
void Parameters::compute_derived() {compute_derived151,8057
string Parameters::emit_json() {emit_json919,28819
Parameters Parameters::make_local(block b) {make_local953,30063
QScriptValue Parameters::getRoot(QScriptValue root, string p) {getRoot1072,32649
void Parameters::get_element(QScriptValue root, bool & b) {get_element1076,32751
void Parameters::get_element(QScriptValue root, int & i) {get_element1081,32866
void Parameters::get_element(QScriptValue root, double & d) {get_element1086,32977
void Parameters::get_element(QScriptValue root, string & s) {get_element1091,33092
void Parameters::get_element(QScriptValue root, UnisonConstraintExpr & e) {get_element1096,33221
void Parameters::get_element(QScriptValue root, PresolverActiveTable & at) {get_element1167,34845
void Parameters::get_element(QScriptValue root, PresolverCopyTmpTable & ctt) {get_element1176,35100
void Parameters::get_element(QScriptValue root, PresolverBeforeJSON & b) {get_element1187,35414
void Parameters::get_element(QScriptValue root, PresolverAcrossItemJSON & ai) {get_element1198,35689
void Parameters::get_element(QScriptValue root, PresolverAcrossJSON & a) {get_element1207,35926
void Parameters::get_element(QScriptValue root, PresolverSetAcross & sa) {get_element1218,36246
void Parameters::get_element(QScriptValue root, PresolverDominates & d) {get_element1229,36561
void Parameters::get_element(QScriptValue root, PresolverInstrCond & d) {get_element1242,36912
void Parameters::get_element(QScriptValue root, PresolverWCET & x) {get_element1253,37184
void Parameters::get_element(QScriptValue root, PresolverValuePrecedeChain & d) {get_element1264,37451
Json::Value Parameters::getRoot(Json::Value root, string p) {getRoot1275,37729
void Parameters::get_element(Json::Value root, bool & b) {get_element1279,37824
void Parameters::get_element(Json::Value root, int & i) {get_element1284,37932
void Parameters::get_element(Json::Value root, double & d) {get_element1289,38037
void Parameters::get_element(Json::Value root, string & s) {get_element1294,38151
void Parameters::get_element(Json::Value root, UnisonConstraintExpr & e) {get_element1299,38265
void Parameters::get_element(Json::Value root, PresolverActiveTable & at) {get_element1368,39763
void Parameters::get_element(Json::Value root, PresolverCopyTmpTable & ctt) {get_element1376,39992
void Parameters::get_element(Json::Value root, PresolverBeforeJSON & b) {get_element1386,40268
void Parameters::get_element(Json::Value root, PresolverAcrossItemJSON & ai) {get_element1396,40505
void Parameters::get_element(Json::Value root, PresolverAcrossJSON & a) {get_element1404,40716
void Parameters::get_element(Json::Value root, PresolverSetAcross & sa) {get_element1414,40998
void Parameters::get_element(Json::Value root, PresolverDominates & d) {get_element1424,41275
void Parameters::get_element(Json::Value root, PresolverInstrCond & d) {get_element1436,41576
void Parameters::get_element(Json::Value root, PresolverWCET & x) {get_element1446,41810
void Parameters::get_element(Json::Value root, PresolverValuePrecedeChain & d) {get_element1456,42039

models/decompdivmodel.hpp,122
#define __DECOMP_DIV_MODEL____DECOMP_DIV_MODEL__36,1748
class DecompDivModel : public DivModel {DecompDivModel46,1963

models/model.hpp,2818
#define __BASE_MODEL____BASE_MODEL__40,1886
class Model : public IntLexMinimizeSpace {Model66,2384
  Parameters * input;input70,2437
  ModelOptions * options;options71,2459
  IntPropLevel ipl;ipl72,2485
  int n_int_vars;n_int_vars74,2506
  int n_bool_vars;n_bool_vars75,2524
  int n_set_vars;n_set_vars76,2543
  IntVarArray v_r;v_r81,2640
  IntVarArray v_i;v_i84,2711
  IntVarArray v_c;v_c87,2808
  IntVarArray v_y;v_y90,2880
  BoolVarArray v_x;v_x95,2968
  IntVarArray v_ry;v_ry98,3041
  BoolVarArray v_a;v_a101,3103
  IntVarArray v_ls;v_ls104,3171
  IntVarArray v_ld;v_ld107,3242
  IntVarArray v_le;v_le110,3308
  BoolVarArray v_al;v_al114,3454
  BoolVarArray v_u;v_u117,3536
  IntVarArray v_us;v_us120,3605
  IntVarArray v_lt;v_lt123,3659
  IntVarArray v_lat;v_lat126,3735
  BoolVarArray v_p;v_p129,3816
  SetVarArray v_users;v_users132,3889
  IntVarArray v_s;v_s135,3951
  IntVar zero, one;zero137,3971
  IntVar zero, one;one137,3971
  IntVarArgs instrs_to_var_args(const IntVarArray& vararray, T& indexes)instrs_to_var_args143,4090
  BoolVarArgs instrs_to_var_args(const BoolVarArray& vararray, T& indexes)instrs_to_var_args153,4366
  IntVarArgs temps_to_var_args(const IntVarArray& vararray, T& indexes)temps_to_var_args162,4637
  IntVar var(const LinIntExpr &e) {return expr(*this, e, ipl);}var172,4939
  void assert_bounded(IntVar & v) {assert_bounded174,5004
  BoolVar var(const BoolExpr &e) {return expr(*this, e, ipl);}var179,5141
  void constraint(const BoolExpr &e) {rel(*this, e, ipl);}constraint187,5394
  int temp(temporary t) const { return t - T()[0]; }temp207,5902
  int instr(operation o) const { return o - O()[0]; }instr209,5956
  int opr(operand p) const { return p - P()[0]; }opr211,6011
  IntVar r(temporary t) const { return v_r[temp(t)]; }r213,6062
  IntVar i(operation o) const { return v_i[instr(o)]; }i215,6118
  IntVar c(operation o) const { return v_c[instr(o)]; }c217,6175
  IntVar y(operand p) const { return v_y[opr(p)]; }y219,6232
  IntVar ry(operand p) const { return v_ry[opr(p)]; }ry223,6328
  BoolVar a(operation o) const { return v_a[instr(o)]; }a225,6383
  BoolVar l(temporary t) const { return x(input->definer[t]); }l227,6441
  IntVar ls(temporary t) const { return v_ls[temp(t)]; }ls229,6506
  IntVar ld(temporary t) const { return v_ld[temp(t)]; }ld231,6564
  IntVar le(temporary t) const { return v_le[temp(t)]; }le233,6622
  BoolVar al(register_space rs, temporary t) const {al235,6680
  IntVar us(temporary t) const { return v_us[temp(t)]; }us241,6844
  IntVar lt(operand p) const { return v_lt[opr(p)]; }lt243,6902
  SetVar users(temporary t) const { return v_users[temp(t)]; }users249,7066
  string compare(const string& var, const string& ent,compare439,14470

models/globalmodel.cpp,4800
double GlobalModel::cluster_energy(global_cluster gc) const {cluster_energy40,1846
double GlobalModel::energy(global_congruence g) const {energy49,2118
double GlobalModel::operand_energy(operand p) const {operand_energy55,2283
cluster_allocation_cost(global_cluster gc, RangeListIter & A) const {cluster_allocation_cost62,2475
cluster_remat_cost(global_cluster gc, RangeListIter & A) const {cluster_remat_cost72,2812
allocation_cost(global_congruence g, RangeListIter & A) const {allocation_cost88,3360
operand_allocation_cost(operand p, RangeListIter & A) const {operand_allocation_cost96,3579
double GlobalModel::spilling_cost(int w, block b, RangeListIter &) const {spilling_cost110,4074
double GlobalModel::connection_benefit(global_cluster gc, bool connect) const {connection_benefit114,4182
insert_cluster_operands(global_cluster gc, set<operand> & ps) const {insert_cluster_operands152,5160
allocation_benefit(global_congruence g, RangeListIter & A) const {allocation_benefit159,5403
double GlobalModel::coalescing_chances(operand p, RangeListIter & A) const {coalescing_chances168,5749
double GlobalModel::inactive_cycle_savings(operation o) const {inactive_cycle_savings179,6224
GlobalModel::GlobalModel(Parameters * p_input, ModelOptions * p_options,GlobalModel204,6972
GlobalModel::GlobalModel(GlobalModel& cg) :GlobalModel238,7998
GlobalModel* GlobalModel::copy(void) {copy249,8225
void GlobalModel::post_secondary_variable_definitions(void) {post_secondary_variable_definitions253,8300
void GlobalModel::post_operand_allocation_definition(void) {post_operand_allocation_definition261,8586
void GlobalModel::post_operand_allocation_set_definition(void) {post_operand_allocation_set_definition275,8993
void GlobalModel::post_alignable_operands_definition(void) {post_alignable_operands_definition288,9364
void GlobalModel::post_aligned_congruences_definition(void) {post_aligned_congruences_definition305,9924
void GlobalModel::post_improved_model_constraints(void) {post_improved_model_constraints319,10373
void GlobalModel::post_disjoint_operand_congruence_constraints(void) {post_disjoint_operand_congruence_constraints329,10722
void GlobalModel::post_aligned_neighbor_operand_constraints(void) {post_aligned_neighbor_operand_constraints354,11626
void GlobalModel::post_preserved_space_capacity_constraints(void) {post_preserved_space_capacity_constraints367,11969
void GlobalModel::post_global_cost_domain_constraints() {post_global_cost_domain_constraints412,13798
void GlobalModel::post_register_symmetry_breaking_constraints(void) {post_register_symmetry_breaking_constraints429,14325
void GlobalModel::post_active_operation(operation o) {post_active_operation444,14756
void GlobalModel::post_inactive_operation(operation o) {post_inactive_operation448,14859
post_lower_bounds(operation o1, operation o2, block b, int lb) {post_lower_bounds453,14984
post_relaxation_nogood(operation o1, operation o2) {post_relaxation_nogood463,15290
post_connection_lower_bound(operand p, bool connect, block b, int lb) {post_connection_lower_bound473,15566
post_instruction_nogood(int cost, InstructionAssignment forbidden) {post_instruction_nogood479,15745
post_activation_nogood(operation o, int lb) {post_activation_nogood487,15985
void GlobalModel::post_cluster_connection_decision(post_cluster_connection_decision491,16075
void GlobalModel::post_effective_callee_saved_spilling(operation o) {post_effective_callee_saved_spilling500,16275
void GlobalModel::constrain_local_cost(block b, IntRelType irt, int cost) {constrain_local_cost525,17305
void GlobalModel::post_different_solution(GlobalModel * g1, bool unsat) {post_different_solution529,17423
void GlobalModel::post_local_solution_cost(LocalModel * l) {post_local_solution_cost556,18247
void GlobalModel::post_branchers(void) {post_branchers578,19055
void GlobalModel::post_callee_saved_branchers(void) {post_callee_saved_branchers677,21468
void GlobalModel::post_complete_branchers(unsigned int s) {post_complete_branchers693,21915
bool GlobalModel::master(const MetaInfo& mi) {master718,22640
bool GlobalModel::slave(const MetaInfo& mi) {slave731,23078
void GlobalModel::compare(const Space& sp, std::ostream& pOs) const {compare741,23419
bool GlobalModel::equal_to(const GlobalModel * gs) const {equal_to761,23963
void GlobalModel::apply_solution(LocalModel * ls) {apply_solution777,24482
vector<activation_class> GlobalModel::unnecessary_activation_classes() {unnecessary_activation_classes801,24939
bool GlobalModel::active_class(activation_class ac) {active_class808,25188
bool GlobalModel::necessary(activation_class ac) {necessary813,25326
apply_solution_and_deactivate(GlobalModel * gs,apply_solution_and_deactivate821,25579

models/divmodel.cpp,1936
DivModel::DivModel(Parameters * p_input, ModelOptions * p_options,DivModel38,1745
DivModel::DivModel(DivModel& cg) :DivModel114,3918
DivModel* DivModel::copy(void) {copy134,4451
void DivModel::set_solver(JSONVALUE root) {set_solver138,4517
void DivModel::post_random_branchers(void) {post_random_branchers142,4603
void DivModel::post_clrandom_branchers(void) {post_clrandom_branchers167,5328
void DivModel::post_cloriginal_branchers(void) {post_cloriginal_branchers190,6037
void DivModel::post_solution_brancher(void) {post_solution_brancher211,6663
void DivModel::post_div_branchers(void) {post_div_branchers231,7155
void DivModel::post_diversification_constraints(void) {post_diversification_constraints251,7684
void DivModel::post_diversification_channel(void) {post_diversification_channel322,9968
void DivModel::post_diversification_diffs(void) {post_diversification_diffs343,10535
void DivModel::post_diversification_br_diffs(void) {post_diversification_br_diffs358,10989
void DivModel::post_diversification_reg_gadget(void) {post_diversification_reg_gadget377,11499
void DivModel::post_diversification_reghamming(void) {post_diversification_reghamming397,12069
void DivModel::post_diversification_hamming(void) {post_diversification_hamming404,12199
void DivModel::post_global_cycles(void) {post_global_cycles413,12452
void DivModel::post_levenshtein(const DivModel & b)post_levenshtein428,12718
void DivModel::post_levenshtein_set(const DivModel & b)post_levenshtein_set457,13459
bool DivModel::is_real_type(int o) {is_real_type500,14825
bool DivModel::is_branch_type(int o) {is_branch_type509,15053
void DivModel::constrain(const Space & _b) {constrain516,15209
bool DivModel::master(const MetaInfo& mi) {master850,23982
bool DivModel::slave(const MetaInfo& mi) {slave866,24427
void DivModel::first(void) {first887,24963
void DivModel::next(const DivModel& b) {next892,25006

models/options.cpp,54
ModelOptions::ModelOptions(void)ModelOptions41,1892

models/options.hpp,20052
#define __SOLVER_OPTIONS____SOLVER_OPTIONS__39,1853
class ModelOptions : public InstanceOptions {ModelOptions49,2009
  Driver::StringValueOption _output_file; // Output file_output_file55,2084
  Driver::StringValueOption _dzn_file; // Dzn file (ignored)_dzn_file56,2141
  Driver::BoolOption _verbose; // Verbose mode_verbose57,2202
  Driver::BoolOption _emit_improvement; // Emit estimated improvement_emit_improvement58,2249
  Driver::StringValueOption _lower_bound_file; // Lower bound file_lower_bound_file59,2319
  Driver::StringValueOption _initial_gap_file; // Initial optimality gap file_initial_gap_file60,2386
  Driver::BoolOption _gist_global; // Run Gist for global problems_gist_global62,2480
  Driver::IntOption _gist_block; // Block on which to run Gist_gist_block63,2547
  Driver::IntOption _gist_iteration; // Iteration on which to run Gist_gist_iteration64,2610
  Driver::BoolOption _gist_presolving; // Run Gist during presolving_gist_presolving65,2681
  Driver::BoolOption _gist_solution; // Run Gist for the solution_gist_solution66,2750
  Driver::StringValueOption _limit_unit; // Unit of limits (time, fails)_limit_unit71,2837
  Driver::DoubleOption _global_budget; // Global budget per operation_global_budget72,2910
  Driver::DoubleOption _monolithic_budget; // Time budget per operation for the monolithic solver_monolithic_budget73,2980
  Driver::DoubleOption _global_setup_limit; // Limit for root global propagation_global_setup_limit74,3078
  Driver::DoubleOption _local_limit; // Local limit_local_limit75,3159
  Driver::DoubleOption _global_shaving_limit; // Global shaving limit_global_shaving_limit76,3211
  Driver::DoubleOption _post_global_shaving_limit; // Global shaving limit after global solver_post_global_shaving_limit77,3281
  Driver::DoubleOption _local_shaving_limit; // Local shaving limit_local_shaving_limit78,3376
  Driver::DoubleOption _local_relaxation_limit; // Local relaxation limit_local_relaxation_limit79,3444
  Driver::DoubleOption _acceptable_gap; // Acceptable optimality gap_acceptable_gap80,3518
  Driver::DoubleOption _timeout; // Global timeout_timeout81,3587
  Driver::UnsignedIntOption _total_threads; // Total number of threads_total_threads85,3653
  Driver::UnsignedIntOption _portfolio_threads; // Threads for each portfolio_portfolio_threads86,3724
  Driver::BoolOption _complete; // Run to completeness_complete87,3802
  Driver::BoolOption _decomposition; // Run decomposition_decomposition88,3857
  Driver::BoolOption _monolithic; // Run monolithic solver_monolithic89,3915
  Driver::DoubleOption _initial_aggressiveness; // Initial aggressiveness_initial_aggressiveness90,3974
  Driver::DoubleOption _step_aggressiveness; // Aggressiveness step_step_aggressiveness91,4048
  Driver::DoubleOption _final_aggressiveness; // Final aggressiveness_final_aggressiveness92,4116
  Driver::BoolOption _global_connection_iterations; // Interleave iterations where global connections are tried first_global_connection_iterations93,4186
  Driver::BoolOption _custom_portfolio; // Run custom portfolio_custom_portfolio94,4304
  Driver::StringValueOption _local_portfolio; // Search portfolio for the local problem_local_portfolio95,4368
  Driver::BoolOption _disable_presolving; // Disable presolving techniques_disable_presolving96,4456
  Driver::BoolOption _disable_local_shaving; // Disable local shaving techniques_disable_local_shaving97,4531
  Driver::BoolOption _disable_global_shaving; // Disable global shaving techniques_disable_global_shaving98,4612
  Driver::UnsignedIntOption _consistency_threshold; // Operation threshold to switch to bounds consistency_consistency_threshold99,4695
  Driver::UnsignedIntOption _shaving_threshold; // Operation threshold to disable shaving_shaving_threshold100,4802
  Driver::BoolOption _solve_global_only; // Solve only the global problem_solve_global_only101,4892
  Driver::BoolOption _first_solution; // Return the first solution found_first_solution102,4966
  Driver::BoolOption _all_solutions; // Emit solutions as they are found_all_solutions103,5039
  Driver::UnsignedIntOption _solving_threshold; // Operation threshold to give up on solving_solving_threshold104,5112
  Driver::UnsignedIntOption _monolithic_threshold; // Operation threshold to give up on running the monolithic solver_monolithic_threshold105,5205
  Driver::BoolOption _disable_hints; // Disable hints in global solver_disable_hints109,5336
  Driver::BoolOption _disable_precedence_variables; // Disable explicit precedence variables and constraints_disable_precedence_variables110,5407
  Driver::BoolOption _overconstrain; // Allow to overconstrain model_overconstrain111,5516
  Driver::BoolOption _disable_improving; // Disable improved constraints_disable_improving115,5604
  Driver::BoolOption _disable_maximum_temporary_usage_constraints; // Disable maximum temporary usage constraints_disable_maximum_temporary_usage_constraints116,5677
  Driver::BoolOption _disable_copy_dominance_constraints; // Disable copy dominance constraints_disable_copy_dominance_constraints117,5791
  Driver::BoolOption _disable_space_capacity_constraints; // Disable space capacity constraints_disable_space_capacity_constraints118,5887
  Driver::BoolOption _disable_operand_symmetry_breaking_constraints; // Disable operand symmetry breaking constraints_disable_operand_symmetry_breaking_constraints119,5983
  Driver::BoolOption _disable_register_symmetry_breaking_constraints; // Disable register symmetry breaking constraints_disable_register_symmetry_breaking_constraints120,6101
  Driver::BoolOption _disable_presolver_constraints; // Disable presolver constraints_disable_presolver_constraints121,6221
  Driver::BoolOption _disable_minimum_number_of_optional_operations_constraints; // Disable minimum number of optional operations constraints_disable_minimum_number_of_optional_operations_constraints122,6307
  Driver::BoolOption _disable_allowed_activation_constraints; // Disable allowed activation constraints_disable_allowed_activation_constraints123,6449
  Driver::BoolOption _disable_copy_activation_and_dataflow_constraints; // Disable copy activation and dataflow constraints_disable_copy_activation_and_dataflow_constraints124,6553
  Driver::BoolOption _disable_nogood_constraints; // Disable nogood constraints_disable_nogood_constraints125,6677
  Driver::BoolOption _disable_basic_nogood_constraints; // Disable basic nogood constraints_disable_basic_nogood_constraints126,6757
  Driver::BoolOption _disable_additional_nogood_constraints; // Disable additional nogood constraints_disable_additional_nogood_constraints127,6849
  Driver::BoolOption _disable_conditional_precedence_constraints; // Disable conditional precedence constraints_disable_conditional_precedence_constraints128,6951
  Driver::BoolOption _disable_basic_conditional_precedence_constraints; // Disable basic conditional precedence constraints_disable_basic_conditional_precedence_constraints129,7063
  Driver::BoolOption _disable_additional_conditional_precedence_constraints; // Disable additional conditional precedence constraints_disable_additional_conditional_precedence_constraints130,7187
  Driver::BoolOption _disable_partially_ordered_live_range_constraints; // Disable partially ordered live range constraints_disable_partially_ordered_live_range_constraints131,7321
  Driver::BoolOption _disable_basic_partially_ordered_live_range_constraints; // Disable basic partially ordered live range constraints_disable_basic_partially_ordered_live_range_constraints132,7445
  Driver::BoolOption _disable_additional_partially_ordered_live_range_constraints; // Disable additional partially ordered live range constraints_disable_additional_partially_ordered_live_range_constraints133,7581
  Driver::BoolOption _disable_across_call_disjoint_temporary_constraints; // Disable across call disjoint temporary constraints_disable_across_call_disjoint_temporary_constraints134,7727
  Driver::BoolOption _disable_across_call_disjoint_temporary_set_constraints; // Disable across call disjoint temporary set constraints_disable_across_call_disjoint_temporary_set_constraints135,7855
  Driver::BoolOption _disable_temporary_symmetry_breaking_constraints; // Disable temporary symmetry breaking constraints_disable_temporary_symmetry_breaking_constraints136,7991
  Driver::BoolOption _disable_infinite_register_dominance_constraints; // Disable infinite register dominance constraints_disable_infinite_register_dominance_constraints137,8113
  Driver::BoolOption _disable_wcet_constraints; // Disable wcet constraints_disable_wcet_constraints138,8235
  Driver::BoolOption _disable_relax_a; //_disable_relax_a142,8351
  Driver::BoolOption _disable_relax_i; //_disable_relax_i143,8393
  Driver::BoolOption _disable_relax_y; //_disable_relax_y144,8435
  Driver::BoolOption _disable_relax_c; //_disable_relax_c145,8477
  Driver::BoolOption _disable_relax_r; //_disable_relax_r146,8519
  Driver::IntOption _number_divs; //_number_divs148,8562
  Driver::BoolOption _use_optimal_for_diversification; // not implemented_use_optimal_for_diversification150,8600
  Driver::StringOption _distance; // distance (hamming, branch)_distance152,8675
  Driver::StringOption _div_method; //_div_method154,8740
  Driver::StringValueOption _solver_file; // Solver file for best solution (if available)_solver_file156,8780
  Driver::StringValueOption _divs_dir; // Solver file for best solution (if available)_divs_dir158,8871
  Driver::UnsignedIntOption _min_dist; // Solver file for best solution (if available)_min_dist159,8958
  Driver::BoolOption _enable_solver_solution_brancher; // Enable a brancher to find the solution first_enable_solver_solution_brancher160,9045
  string output_file(void) const {return _output_file.value();}output_file165,9180
  string dzn_file(void) const {return _dzn_file.value();}dzn_file166,9244
  bool verbose(void) const {return _verbose.value();}verbose167,9302
  bool emit_improvement(void) const {return _emit_improvement.value();}emit_improvement168,9356
  string lower_bound_file(void) const {return _lower_bound_file.value();}lower_bound_file169,9428
  string initial_gap_file(void) const {return _initial_gap_file.value();}initial_gap_file170,9502
  bool gist_global(void) const {return _gist_global.value();}gist_global172,9592
  int gist_block(void) const {return _gist_block.value();}gist_block173,9654
  int gist_iteration(void) const {return _gist_iteration.value();}gist_iteration174,9713
  bool gist_presolving(void) const {return _gist_presolving.value();}gist_presolving175,9780
  bool gist_solution(void) const {return _gist_solution.value();}gist_solution176,9850
  string limit_unit(void) const {return _limit_unit.value();}limit_unit179,9924
  double global_budget(void) const {return _global_budget.value();}global_budget180,9986
  double monolithic_budget(void) const {return _monolithic_budget.value();}monolithic_budget181,10054
  double global_setup_limit(void) const {return _global_setup_limit.value();}global_setup_limit182,10130
  double local_limit(void) const {return _local_limit.value();}local_limit183,10208
  double global_shaving_limit(void) const {return _global_shaving_limit.value();}global_shaving_limit184,10272
  double post_global_shaving_limit(void) const {return _post_global_shaving_limit.value();}post_global_shaving_limit185,10354
  double local_shaving_limit(void) const {return _local_shaving_limit.value();}local_shaving_limit186,10446
  double local_relaxation_limit(void) const {return _local_relaxation_limit.value();}local_relaxation_limit187,10526
  double acceptable_gap(void) const {return _acceptable_gap.value();}acceptable_gap188,10612
  double timeout(void) const {return _timeout.value();}timeout189,10682
  unsigned int total_threads(void) const {return _total_threads.value();}total_threads191,10739
  unsigned int portfolio_threads(void) const {return _portfolio_threads.value();}portfolio_threads192,10813
  bool complete(void) const {return _complete.value();}complete193,10895
  bool decomposition(void) const {return _decomposition.value();}decomposition194,10951
  bool monolithic(void) const {return _monolithic.value();}monolithic195,11017
  double initial_aggressiveness(void) const {return _initial_aggressiveness.value();}initial_aggressiveness196,11077
  double step_aggressiveness(void) const {return _step_aggressiveness.value();}step_aggressiveness197,11163
  double final_aggressiveness(void) const {return _final_aggressiveness.value();}final_aggressiveness198,11243
  bool global_connection_iterations(void) const {return _global_connection_iterations.value();}global_connection_iterations199,11325
  bool custom_portfolio(void) const {return _custom_portfolio.value();}custom_portfolio200,11421
  string local_portfolio(void) const {return _local_portfolio.value();}local_portfolio201,11493
  bool disable_presolving(void) const {return _disable_presolving.value();}disable_presolving202,11565
  bool disable_local_shaving(void) const {return _disable_local_shaving.value();}disable_local_shaving203,11641
  bool disable_global_shaving(void) const {return _disable_global_shaving.value();}disable_global_shaving204,11723
  unsigned int consistency_threshold(void) const {return _consistency_threshold.value();}consistency_threshold205,11807
  unsigned int shaving_threshold(void) const {return _shaving_threshold.value();}shaving_threshold206,11897
  bool solve_global_only(void) const {return _solve_global_only.value();}solve_global_only207,11979
  bool first_solution(void) const {return _first_solution.value();}first_solution208,12053
  bool all_solutions(void) const {return _all_solutions.value();}all_solutions209,12121
  unsigned int solving_threshold(void) const {return _solving_threshold.value();}solving_threshold210,12187
  unsigned int monolithic_threshold(void) const {return _monolithic_threshold.value();}monolithic_threshold211,12269
  bool disable_hints(void) const {return _disable_hints.value();}disable_hints213,12358
  bool disable_precedence_variables(void) const {return _disable_precedence_variables.value();}disable_precedence_variables214,12424
  bool overconstrain(void) const {return _overconstrain.value();}overconstrain215,12520
  bool disable_improving(void) const {return _disable_improving.value();}disable_improving217,12587
  bool disable_maximum_temporary_usage_constraints(void) const {return _disable_maximum_temporary_usage_constraints.value();}disable_maximum_temporary_usage_constraints218,12661
  bool disable_copy_dominance_constraints(void) const {return _disable_copy_dominance_constraints.value();}disable_copy_dominance_constraints219,12787
  bool disable_space_capacity_constraints(void) const {return _disable_space_capacity_constraints.value();}disable_space_capacity_constraints220,12895
  bool disable_operand_symmetry_breaking_constraints(void) const {return _disable_operand_symmetry_breaking_constraints.value();}disable_operand_symmetry_breaking_constraints221,13003
  bool disable_register_symmetry_breaking_constraints(void) const {return _disable_register_symmetry_breaking_constraints.value();}disable_register_symmetry_breaking_constraints222,13133
  bool disable_presolver_constraints(void) const {return _disable_presolver_constraints.value();}disable_presolver_constraints223,13265
  bool disable_minimum_number_of_optional_operations_constraints(void) const {return _disable_minimum_number_of_optional_operations_constraints.value();}disable_minimum_number_of_optional_operations_constraints224,13363
  bool disable_allowed_activation_constraints(void) const {return _disable_allowed_activation_constraints.value();}disable_allowed_activation_constraints225,13517
  bool disable_copy_activation_and_dataflow_constraints(void) const {return _disable_copy_activation_and_dataflow_constraints.value();}disable_copy_activation_and_dataflow_constraints226,13633
  bool disable_nogood_constraints(void) const {return _disable_nogood_constraints.value();}disable_nogood_constraints227,13769
  bool disable_basic_nogood_constraints(void) const {return _disable_basic_nogood_constraints.value();}disable_basic_nogood_constraints228,13861
  bool disable_additional_nogood_constraints(void) const {return _disable_additional_nogood_constraints.value();}disable_additional_nogood_constraints229,13965
  bool disable_conditional_precedence_constraints(void) const {return _disable_conditional_precedence_constraints.value();}disable_conditional_precedence_constraints230,14079
  bool disable_basic_conditional_precedence_constraints(void) const {return _disable_basic_conditional_precedence_constraints.value();}disable_basic_conditional_precedence_constraints231,14203
  bool disable_additional_conditional_precedence_constraints(void) const {return _disable_additional_conditional_precedence_constraints.value();}disable_additional_conditional_precedence_constraints232,14339
  bool disable_partially_ordered_live_range_constraints(void) const {return _disable_partially_ordered_live_range_constraints.value();}disable_partially_ordered_live_range_constraints233,14485
  bool disable_basic_partially_ordered_live_range_constraints(void) const {return _disable_basic_partially_ordered_live_range_constraints.value();}disable_basic_partially_ordered_live_range_constraints234,14621
  bool disable_additional_partially_ordered_live_range_constraints(void) const {return _disable_additional_partially_ordered_live_range_constraints.value();}disable_additional_partially_ordered_live_range_constraints235,14769
  bool disable_across_call_disjoint_temporary_constraints(void) const {return _disable_across_call_disjoint_temporary_constraints.value();}disable_across_call_disjoint_temporary_constraints236,14927
  bool disable_across_call_disjoint_temporary_set_constraints(void) const {return _disable_across_call_disjoint_temporary_set_constraints.value();}disable_across_call_disjoint_temporary_set_constraints237,15067
  bool disable_temporary_symmetry_breaking_constraints(void) const {return _disable_temporary_symmetry_breaking_constraints.value();}disable_temporary_symmetry_breaking_constraints238,15215
  bool disable_infinite_register_dominance_constraints(void) const {return _disable_infinite_register_dominance_constraints.value();}disable_infinite_register_dominance_constraints239,15349
  bool disable_wcet_constraints(void) const {return _disable_wcet_constraints.value();}disable_wcet_constraints240,15483
  bool disable_relax_a(void) const {return _disable_relax_a.value();}disable_relax_a242,15601
  bool disable_relax_i(void) const {return _disable_relax_i.value();}disable_relax_i243,15671
  bool disable_relax_y(void) const {return _disable_relax_y.value();}disable_relax_y244,15741
  bool disable_relax_c(void) const {return _disable_relax_c.value();}disable_relax_c245,15811
  bool disable_relax_r(void) const {return _disable_relax_r.value();}disable_relax_r246,15881
  int number_divs(void) const {return _number_divs.value();}number_divs248,15952
  bool use_optimal_for_diversification(void) const {return _use_optimal_for_diversification.value();}use_optimal_for_diversification250,16014
  DivDistance dist_metric(void) const { return static_cast <DivDistance>( _distance.value());}dist_metric252,16117
  DivMethod div_method(void) const { return static_cast <DivMethod>( _div_method.value());}div_method254,16213
  string solver_file(void) const {return _solver_file.value();}solver_file256,16306
  string divs_dir(void) const {return _divs_dir.value();}divs_dir258,16371
  unsigned int min_dist(void) const {return _min_dist.value();}min_dist259,16429
  bool enable_solver_solution_brancher(void) const {return _enable_solver_solution_brancher.value();}enable_solver_solution_brancher261,16494

models/localdivmodel.hpp,545
#define __LOCAL_DIV_MODEL____LOCAL_DIV_MODEL__36,1747
class LocalDivModel : public LocalModel {LocalDivModel58,2277
  IntVarArray v_diff;v_diff63,2345
  IntVarArray v_hamm;v_hamm66,2409
  double div_p;div_p69,2464
  Rnd div_r;div_r71,2510
  void set_random(Rnd r) {div_r = r;};set_random73,2524
  void set_relax(double p) {div_p = p;};set_relax75,2564
  SolverParameters *solver;solver77,2606
  IntVar diff(operation o) const {return v_diff[o]; }diff83,2698
  IntVar hamm(operation o) const {return v_hamm[o]; }hamm85,2753

models/maxdivmodel.cpp,705
MaxDivModel::MaxDivModel(Parameters * p_input, ModelOptions * p_options,MaxDivModel39,1749
MaxDivModel::MaxDivModel(MaxDivModel& cg) :MaxDivModel50,2016
MaxDivModel* MaxDivModel::copy(void) {copy57,2156
void MaxDivModel::post_levenshtein(void)post_levenshtein64,2234
void MaxDivModel::constrain_levenshtein(const MaxDivModel & b)constrain_levenshtein102,3180
void MaxDivModel::post_levenshtein_set(void)post_levenshtein_set134,3982
void MaxDivModel::constrain_levenshtein_set(const MaxDivModel & b)constrain_levenshtein_set188,5553
void MaxDivModel::post_input_solution_constrain() {post_input_solution_constrain239,7065
void MaxDivModel::constrain(const Space & _b) {constrain408,11313

models/localmodel.cpp,2965
vector<temporary> & LocalModel::T() const { return input->tmp[b]; }T40,1845
vector<operation> & LocalModel::O() const { return input->ops[b]; }O42,1914
vector<operand> & LocalModel::P() const { return input->ope[b]; }P44,1983
BoolVar LocalModel::x(operand p) const {x46,2050
BoolVar LocalModel::u(operand p, temporary t) const {u55,2278
IntVar LocalModel::lat(operand p, temporary t) const {lat60,2434
BoolVar LocalModel::p(operation o1, operation o2) {p65,2593
IntVar LocalModel::s(operand p) const {s75,2901
LocalModel::LocalModel(Parameters * p_input, ModelOptions * p_options,LocalModel80,3049
LocalModel::LocalModel(LocalModel& cg) :LocalModel161,5850
LocalModel* LocalModel::copy(void) {copy169,5977
double LocalModel::action(int i) const {action173,6049
double LocalModel::actionmerit(const Space& home, BoolVar, int i) {actionmerit177,6117
void LocalModel::post_decision_variable_domain_definitions(void) {post_decision_variable_domain_definitions181,6245
void LocalModel::post_secondary_variable_definitions(void) {post_secondary_variable_definitions185,6370
void LocalModel::post_basic_model_constraints(void) {post_basic_model_constraints189,6483
void LocalModel::post_improved_model_constraints(void) {post_improved_model_constraints195,6584
void LocalModel::post_presolver_constraints(void) {post_presolver_constraints199,6689
void LocalModel::post_before_scheduling_constraints_in_space(Space& s) {post_before_scheduling_constraints_in_space203,6784
void LocalModel::post_cost_definition(void) {post_cost_definition208,6952
void LocalModel::post_operand_symmetry_breaking_constraints(block b) {post_operand_symmetry_breaking_constraints212,7035
void LocalModel::post_register_symmetry_breaking_constraints(block b) {post_register_symmetry_breaking_constraints239,7945
void LocalModel::constrain_cost(IntRelType irt, int cost) {constrain_cost261,8590
void LocalModel::post_branchers(char search) {post_branchers265,8692
void LocalModel::post_aggressive_branchers(void) {post_aggressive_branchers287,9147
void LocalModel::post_trivial_branchers(void) {post_trivial_branchers300,9463
void LocalModel::post_minimum_cost_branchers(void) {post_minimum_cost_branchers323,10178
void LocalModel::post_fail_first_branchers(void) {post_fail_first_branchers349,10992
void LocalModel::post_conservative_branchers(void) {post_conservative_branchers372,11711
void LocalModel::post_routing_branchers(bool aggressive) {post_routing_branchers385,12030
bool LocalModel::master(const MetaInfo& mi) {master419,12765
bool LocalModel::slave(const MetaInfo& mi) {slave424,12873
IntVarArgs LocalModel::cost() const {cost433,13135
void LocalModel::print(ostream & pOs) const {print437,13190
void LocalModel::apply_solution(const GlobalModel * gs) {apply_solution449,13354
bool LocalModel::equal_to(const LocalModel * ls) const {equal_to478,14133
string LocalModel::emit_json() const {emit_json493,14664

models/completemodel.cpp,2435
vector<temporary> & CompleteModel::T() const { return input->T; }T40,1848
vector<operation> & CompleteModel::O() const { return input->O; }O42,1915
vector<operand> & CompleteModel::P() const { return input->P; }P44,1982
BoolVar CompleteModel::x(operand p) const {x46,2047
BoolVar CompleteModel::u(operand p, temporary t) const {u54,2223
IntVar CompleteModel::lat(operand p, temporary t) const {lat59,2366
BoolVar CompleteModel::p(operation o1, operation o2) {p64,2512
IntVar CompleteModel::s(operand p) const {s75,2875
CompleteModel::CompleteModel(Parameters * p_input, ModelOptions * p_options,CompleteModel80,2995
CompleteModel::CompleteModel(CompleteModel& cg) :CompleteModel121,4737
CompleteModel* CompleteModel::copy(void) {copy128,4864
IntVarArgs CompleteModel::cost() const {cost132,4945
void CompleteModel::post_decision_variable_domain_definitions(void) {post_decision_variable_domain_definitions136,5004
void CompleteModel::post_secondary_variable_definitions(void) {post_secondary_variable_definitions141,5161
void CompleteModel::post_basic_model_constraints(void) {post_basic_model_constraints146,5306
void CompleteModel::post_global_operand_connection_constraints(void) {post_global_operand_connection_constraints156,5587
void CompleteModel::post_congruence_constraints(void) {post_congruence_constraints173,6045
void CompleteModel::post_activation_constraints(void) {post_activation_constraints184,6321
void CompleteModel::post_slack_balancing_constraints(void) {post_slack_balancing_constraints202,6985
void CompleteModel::post_improved_model_constraints(void) {post_improved_model_constraints213,7225
void CompleteModel::post_slack_functional_constraints(void) {post_slack_functional_constraints219,7401
void CompleteModel::post_presolver_constraints(void) {post_presolver_constraints263,8772
void CompleteModel::post_global_cost_definition(void) {post_global_cost_definition295,9775
void CompleteModel::post_cost_definition(void) {post_cost_definition310,10220
void CompleteModel::post_upper_bound(vector<int> maxcost) {post_upper_bound315,10335
void CompleteModel::post_lower_bound(vector<int> mincost) {post_lower_bound319,10437
void CompleteModel::post_standalone_constraints(void) {post_standalone_constraints323,10539
void CompleteModel::print(ostream & pOs) const {print348,11036
string CompleteModel::solution_to_json() const {solution_to_json357,11306

models/solver-parameters.cpp,511
SolverParameters::SolverParameters(JSONVALUE root) :SolverParameters36,1750
QScriptValue SolverParameters::getRoot(QScriptValue root, string p) {getRoot57,2564
void SolverParameters::get_element(QScriptValue root, bool & b) {get_element61,2672
void SolverParameters::get_element(QScriptValue root, int & i) {get_element66,2793
void SolverParameters::get_element(QScriptValue root, double & d) {get_element71,2910
void SolverParameters::get_element(QScriptValue root, string & s) {get_element76,3031

models/relaxedmodel.hpp,361
#define __RELAXED_MODEL____RELAXED_MODEL__36,1816
class RelaxedModel : public Model {RelaxedModel43,1911
  double af;af50,2029
  void set_aggressiveness(double a1) {af = a1;};set_aggressiveness52,2043
  IntVar f(block, unsigned int) const { GECODE_NEVER; return v_i[0]; };f74,2460
  IntVarArgs cost() const { GECODE_NEVER; return v_i; };cost76,2533

models/presolver-options.cpp,54
ModelOptions::ModelOptions(void)ModelOptions37,1771

models/simplemodel.cpp,289
SimpleModel::SimpleModel(Parameters * p_input, ModelOptions * p_options,SimpleModel37,1775
SimpleModel::SimpleModel(SimpleModel& cg) :SimpleModel64,2523
SimpleModel* SimpleModel::copy(void) {copy67,2591
void SimpleModel::post_trivial_branchers(void) {post_trivial_branchers71,2666

models/completemodel.hpp,284
#define __COMPLETE_MODEL____COMPLETE_MODEL__36,1774
class CompleteModel : public Model {CompleteModel43,1870
  IntVarArray v_gf;v_gf50,1954
  IntVarArray v_f;v_f53,2002
  IntVarArray gf() const { return v_gf; }gf73,2339
  IntVar f(block b, unsigned int n) const {f75,2382

models/model.cpp,10600
IntVarArray Model::int_var_array(int n, int min, int max) {int_var_array42,1935
BoolVarArray Model::bool_var_array(int n, int min, int max) {bool_var_array47,2059
Model::set_var_array(int n, const IntSet & glb, const IntSet & lub) {set_var_array53,2199
BoolVar Model::adhoc_constraint_var(UnisonConstraintExpr & e) {adhoc_constraint_var58,2333
IntVar Model::slack(operand p) {slack120,4148
void Model::distinct(Home home, const IntVarArgs & x, const BoolVarArgs & m,distinct124,4235
BoolVar Model::imp(operation o, instruction i0) {imp162,5232
IntVar Model::pls(operand p) {pls169,5453
IntVar Model::ple(operand p) {ple177,5673
int Model::objective_domain(void) {objective_domain184,5852
BoolVar Model::partially_in_register_space(temporary t, register_space rs) {partially_in_register_space192,6030
BoolVar Model::totally_in_register_space(temporary t, register_space rs) {totally_in_register_space200,6373
bool Model::is_inactive(operation o) const {is_inactive206,6597
bool Model::is_optional(operation o) const {is_optional210,6686
bool Model::is_dead(temporary t) const {is_dead214,6790
bool Model::is_disconnected(operand p) const {is_disconnected218,6875
bool Model::must_connect(operand p) const {must_connect222,6966
bool Model::multiple_non_null_temps(operand p) const {multiple_non_null_temps226,7062
operand Model::src(operation o) const {src234,7256
operand Model::dst(operation o) const {dst240,7387
operand Model::opposite(operand p) const {opposite246,7519
set<operand> Model::single_class(vector<operand> ps) const {single_class251,7639
bool Model::half_congruent(operand p, operand q) const {half_congruent266,8128
void Model::disjoint_operand_registers(vector<operand> ps) {disjoint_operand_registers281,8650
saturation_likelihood(block b, pair<int,int> C, RangeListIter & A) const {saturation_likelihood325,10127
double Model::pressure_balance(operation o) const {pressure_balance393,12273
double Model::pressure(operand p, register_class rc) const {pressure413,12809
bool Model::may_saturate(block b, register_atom fa, register_atom la) const {may_saturate417,12953
IntArgs Model::consumption_domain(resource r, vector<operation> & is) const {consumption_domain426,13248
Model::Model(Parameters * p_input, ModelOptions * p_options, IntPropLevel p_ipl) :Model438,13578
Model::Model(Model& m) :Model448,13811
void Model::post_decision_variable_domain_definitions(block b) {post_decision_variable_domain_definitions476,14508
void Model::post_instruction_domains(block b) {post_instruction_domains484,14669
void Model::post_issue_cycle_domains(block b) {post_issue_cycle_domains493,14846
void Model::post_temporary_domains(block b) {post_temporary_domains516,15395
void Model::post_secondary_variable_definitions(block b) {post_secondary_variable_definitions526,15601
void Model::post_operand_register_definition(block b) {post_operand_register_definition545,16159
void Model::post_live_start_definition(block b) {post_live_start_definition563,16714
void Model::post_live_duration_definition(block b) {post_live_duration_definition572,16943
void Model::post_live_end_definition(block b) {post_live_end_definition582,17190
void Model::post_connected_operand_definition(block b) {post_connected_operand_definition597,17690
void Model::post_allocation_definition(block b) {post_allocation_definition610,17944
void Model::post_use_temporary_definition(block b) {post_use_temporary_definition620,18198
void Model::post_temporary_uses_definition(block b) {post_temporary_uses_definition634,18551
void Model::post_operand_latency_definition(block b) {post_operand_latency_definition646,18816
void Model::post_temporary_use_latency_definition(block b) {post_temporary_use_latency_definition674,19680
void Model::post_precedence_definition(block b) {post_precedence_definition689,20116
void Model::post_temporary_users_definition(block b) {post_temporary_users_definition699,20362
void Model::post_basic_model_constraints(block b) {post_basic_model_constraints713,20693
void Model::post_connected_users_constraints(block b) {post_connected_users_constraints733,21315
void Model::post_active_instructions_constraints(block b) {post_active_instructions_constraints749,21830
void Model::post_register_class_constraints(block b) {post_register_class_constraints761,22092
void Model::post_disjoint_live_ranges_constraints(block b) {post_disjoint_live_ranges_constraints809,23999
void Model::post_preassignment_constraints(block b) {post_preassignment_constraints831,24579
void Model::post_alignment_constraints(block b) {post_alignment_constraints843,24843
void Model::post_packing_constraints(block b) {post_packing_constraints868,25715
void Model::post_extensional_constraints(block b) {post_extensional_constraints900,26558
void Model::post_data_precedences_constraints(block b) {post_data_precedences_constraints919,27100
void Model::post_processor_resources_constraints(block b) {post_processor_resources_constraints961,28394
void Model::post_fixed_precedences_constraints(block b) {post_fixed_precedences_constraints1060,31617
void Model::post_prescheduling_constraints(block b) {post_prescheduling_constraints1077,32023
void Model::post_bypassing_constraints(block b) {post_bypassing_constraints1094,32394
void Model::post_adhoc_constraints(block b) {post_adhoc_constraints1132,33468
void Model::post_improved_model_constraints(block b) {post_improved_model_constraints1141,33648
void Model::post_null_register_constraints(block b) {post_null_register_constraints1168,34654
void Model::post_effective_copy_constraints(block b) {post_effective_copy_constraints1177,34851
void Model::post_disjoint_operand_constraints(block b) {post_disjoint_operand_constraints1188,35135
void Model::post_maximum_temporary_usage_constraints(block b) {post_maximum_temporary_usage_constraints1212,35800
void Model::post_copy_symmetry_breaking_constraints(block b) {post_copy_symmetry_breaking_constraints1231,36309
void Model::post_copy_dominance_constraints(block b) {post_copy_dominance_constraints1245,36636
void Model::post_non_decreasing_temporary_usage_constraints(block b) {post_non_decreasing_temporary_usage_constraints1279,37860
void Model::post_first_k_copies_constraints(block b) {post_first_k_copies_constraints1292,38210
void Model::post_minimum_temporary_duration_constraints(block b) {post_minimum_temporary_duration_constraints1314,38807
void Model::post_define_issue_cycle_constraints(block b) {post_define_issue_cycle_constraints1332,39371
void Model::post_kill_issue_cycle_constraints(block b) {post_kill_issue_cycle_constraints1357,40160
void Model::post_disjoint_congruent_operand_constraints(block b) {post_disjoint_congruent_operand_constraints1405,41494
void Model::post_disjoint_component_operand_constraints(block b) {post_disjoint_component_operand_constraints1428,42245
void Model::post_space_capacity_constraints(block b) {post_space_capacity_constraints1449,42820
void Model::post_branch_issue_cycle_constraints(block b) {post_branch_issue_cycle_constraints1479,43874
void Model::post_redefined_operand_constraints(block b) {post_redefined_operand_constraints1506,44572
void Model::post_active_first_copy_constraints(block b) {post_active_first_copy_constraints1526,45308
void Model::post_callee_saved_symmetry_breaking_constraints(block b) {post_callee_saved_symmetry_breaking_constraints1569,47090
void Model::post_irreflexive_precedence_constraints(block b) {post_irreflexive_precedence_constraints1612,48683
void Model::post_transitive_precedence_constraints(block b) {post_transitive_precedence_constraints1622,48928
void Model::post_killed_temporary_precedence_constraints(block b) {post_killed_temporary_precedence_constraints1635,49312
void Model::post_cost_domain_constraints(block b) {post_cost_domain_constraints1663,50233
void Model::post_local_congruence_constraints(block b) {post_local_congruence_constraints1679,50693
void Model::post_ultimate_source_constraints(block b) {post_ultimate_source_constraints1693,51089
void Model::post_presolver_constraints(block b) {post_presolver_constraints1747,52841
void Model::post_minimum_number_of_optional_operations_constraints(block b) {post_minimum_number_of_optional_operations_constraints1780,54376
void Model::post_allowed_activation_constraints(block b) {post_allowed_activation_constraints1794,54723
void Model::post_allowed_copy_activation_and_dataflow_constraints(block b) {post_allowed_copy_activation_and_dataflow_constraints1815,55190
void Model::post_nogood_constraints(block b) {post_nogood_constraints1852,56136
void Model::post_conditional_precedence_constraints(block b) {post_conditional_precedence_constraints1868,56543
void Model::post_partially_ordered_live_range_constraints(block b) {post_partially_ordered_live_range_constraints1885,57140
void Model::post_across_call_disjoint_temporary_constraints(block b) {post_across_call_disjoint_temporary_constraints1904,57765
void Model::post_across_call_disjoint_temporary_set_constraints(block b) {post_across_call_disjoint_temporary_set_constraints1951,58853
void Model::post_temporary_symmetry_breaking_constraints(block b) {post_temporary_symmetry_breaking_constraints2025,60421
void Model::post_dominates_constraints(block b) {post_dominates_constraints2041,60904
void Model::post_difftemps_constraints(block b) {post_difftemps_constraints2086,62287
void Model::post_diffregs_constraints(block b) {post_diffregs_constraints2100,62620
void Model::post_wcet_constraints(block b) {post_wcet_constraints2108,62815
void Model::post_killer_operand_constraints(block b) {post_killer_operand_constraints2144,63730
void Model::post_initial_precedence_constraints(block b) {post_initial_precedence_constraints2157,64090
void Model::post_mandatory_reuse_constraints(block b) {post_mandatory_reuse_constraints2168,64321
void Model::post_before_scheduling_constraints(block b) {post_before_scheduling_constraints2216,65823
void Model::post_temporary_interference_constraints(block b) {post_temporary_interference_constraints2222,65932
void Model::post_instruction_assignment_constraints(post_instruction_assignment_constraints2244,66699
void Model::post_cost_definition(block b) {post_cost_definition2255,66960
void Model::print(ostream & pOs, block b) const {print2277,67595
void Model::compare(const Space& sp, std::ostream& pOs) const {compare2326,68531
void Model::assign_instruction(operation o, int ii) {assign_instruction2357,69742

div-generated.mk,2025
CC            = gccCC11,479
CXX           = g++CXX12,499
DEFINES       = -DGRAPHICS -DNEWGV -DQT_NO_DEBUG -DQT_SCRIPT_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHAREDDEFINES13,519
CFLAGS        = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)CFLAGS14,623
CXXFLAGS      = -m64 -pipe -std=c++0x -O2 -D_REENTRANT -Wall -W $(DEFINES)CXXFLAGS15,687
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtScript -I/usr/include/qt4 -I.INCPATH16,762
LINK          = g++LINK17,922
LFLAGS        = -Wl,-O1LFLAGS18,942
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lgecodedriver -lgecodegist -lgecodesearch -lgecodeminimodel -lgecodeset -lgecodefloat -lgecodeint -lgecodekernel -lgecodesupport -lgvc -lcgraph -lcdt -lQtScript -lQtGui -lQtCore -lpthread LIBS19,966
AR            = ar cqsAR20,1212
RANLIB        = RANLIB21,1235
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmakeQMAKE22,1252
TAR           = tar -cfTAR23,1308
COMPRESS      = gzip -9fCOMPRESS24,1332
COPY          = cp -fCOPY25,1357
SED           = sedSED26,1379
COPY_FILE     = $(COPY)COPY_FILE27,1399
COPY_DIR      = $(COPY) -rCOPY_DIR28,1423
STRIP         = stripSTRIP29,1450
INSTALL_FILE  = install -m 644 -pINSTALL_FILE30,1472
INSTALL_DIR   = $(COPY_DIR)INSTALL_DIR31,1506
INSTALL_PROGRAM = install -m 755 -pINSTALL_PROGRAM32,1534
DEL_FILE      = rm -fDEL_FILE33,1570
SYMLINK       = ln -f -sSYMLINK34,1592
DEL_DIR       = rmdirDEL_DIR35,1617
MOVE          = mv -fMOVE36,1639
CHK_DIR_EXISTS= test -dCHK_DIR_EXISTS37,1661
MKDIR         = mkdir -pMKDIR38,1685
OBJECTS_DIR   = ./OBJECTS_DIR42,1737
SOURCES       = third-party/jsoncpp/json_reader.cpp \SOURCES46,1772
OBJECTS       = json_reader.o \OBJECTS101,3680
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \DIST157,4931
QMAKE_TARGET  = gecode-diversifyQMAKE_TARGET182,6138
DESTDIR       = DESTDIR183,6171
TARGET        = gecode-diversifyTARGET184,6188

presolver.mk,1482
PRESOLVERMAIN = $(PRESOLVERDIR)/presolverPRESOLVERMAIN37,1781
SOLVERCOMMONDIR := $(PRESOLVERDIR)/commonSOLVERCOMMONDIR39,1824
SOLVERMODELSDIR := $(PRESOLVERDIR)/modelsSOLVERMODELSDIR40,1866
SOLVERBRANCHERSDIR := $(SOLVERDIR)/branchersSOLVERBRANCHERSDIR41,1908
SOLVERPROCEDURESDIR := $(PRESOLVERDIR)/proceduresSOLVERPROCEDURESDIR42,1953
SOLVERPRESOLVERDIR := $(PRESOLVERDIR)/presolverSOLVERPRESOLVERDIR43,2003
SOLVERCOMMON := definitions util jsonutilSOLVERCOMMON45,2052
SOLVERMODELS := parameters options model relaxedmodel completemodel localmodel \SOLVERMODELS46,2094
SOLVERBRANCHERS := filters merit value printers pressureschedulingbrancher \SOLVERBRANCHERS48,2187
SOLVERPROCEDURES := presolverprocedures commonproceduresSOLVERPROCEDURES50,2280
SOLVERPRESOLVER := presolver-options presolve before_presolver diff_temps	\SOLVERPRESOLVER51,2337
PRESOLVERCLASSES := $(addprefix $(SOLVERCOMMONDIR)/, $(SOLVERCOMMON))	\PRESOLVERCLASSES55,2511
PRESOLVERCPPSRC := $(addsuffix .cpp, $(PRESOLVERMAIN) $(PRESOLVERCLASSES))PRESOLVERCPPSRC61,2814
PRESOLVERHPPSRC := $(addsuffix .hpp, $(PRESOLVERCLASSES))PRESOLVERHPPSRC62,2889
PRESOLVERSRC := $(PRESOLVERCPPSRC)PRESOLVERSRC64,2948
PRESOLVERPROJECT := $(PRESOLVERDIR)/presolver.proPRESOLVERPROJECT66,2984
PRESOLVERGENMAKEFILE = $(PRESOLVERDIR)/presolver-generated.mkPRESOLVERGENMAKEFILE68,3035
OSX_PRESOLVERBIN = $(PRESOLVERDIR)/gecode-presolver.app/Contents/MacOS/gecode-presolverOSX_PRESOLVERBIN70,3098

presolver-generated.mk,2024
CC            = gccCC11,479
CXX           = g++CXX12,499
DEFINES       = -DGRAPHICS -DNEWGV -DQT_NO_DEBUG -DQT_SCRIPT_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHAREDDEFINES13,519
CFLAGS        = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)CFLAGS14,623
CXXFLAGS      = -m64 -pipe -std=c++0x -O2 -D_REENTRANT -Wall -W $(DEFINES)CXXFLAGS15,687
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtScript -I/usr/include/qt4 -I.INCPATH16,762
LINK          = g++LINK17,922
LFLAGS        = -Wl,-O1LFLAGS18,942
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lgecodedriver -lgecodegist -lgecodesearch -lgecodeminimodel -lgecodeset -lgecodefloat -lgecodeint -lgecodekernel -lgecodesupport -lgvc -lcgraph -lcdt -lQtScript -lQtGui -lQtCore -lpthread LIBS19,966
AR            = ar cqsAR20,1212
RANLIB        = RANLIB21,1235
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmakeQMAKE22,1252
TAR           = tar -cfTAR23,1308
COMPRESS      = gzip -9fCOMPRESS24,1332
COPY          = cp -fCOPY25,1357
SED           = sedSED26,1379
COPY_FILE     = $(COPY)COPY_FILE27,1399
COPY_DIR      = $(COPY) -rCOPY_DIR28,1423
STRIP         = stripSTRIP29,1450
INSTALL_FILE  = install -m 644 -pINSTALL_FILE30,1472
INSTALL_DIR   = $(COPY_DIR)INSTALL_DIR31,1506
INSTALL_PROGRAM = install -m 755 -pINSTALL_PROGRAM32,1534
DEL_FILE      = rm -fDEL_FILE33,1570
SYMLINK       = ln -f -sSYMLINK34,1592
DEL_DIR       = rmdirDEL_DIR35,1617
MOVE          = mv -fMOVE36,1639
CHK_DIR_EXISTS= test -dCHK_DIR_EXISTS37,1661
MKDIR         = mkdir -pMKDIR38,1685
OBJECTS_DIR   = ./OBJECTS_DIR42,1737
SOURCES       = third-party/jsoncpp/json_reader.cpp \SOURCES46,1772
OBJECTS       = json_reader.o \OBJECTS82,2845
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \DIST118,3493
QMAKE_TARGET  = gecode-presolverQMAKE_TARGET143,4698
DESTDIR       = DESTDIR144,4731
TARGET        = gecode-presolverTARGET145,4748

diversifier.cpp,2397
class ResultData {ResultData105,3766
  GlobalModel * solution;solution109,3795
  bool proven;proven110,3821
  long long int fail;fail111,3836
  long long int it_fail;it_fail112,3858
  long long int node;node113,3883
  long long int it_node;it_node114,3905
  int presolver_time;presolver_time115,3930
  int presolving_time;presolving_time116,3952
  int solving_time;solving_time117,3975
  int it_solving_time;it_solving_time118,3995
  ResultData(GlobalModel * solution, bool proven, long long int it_fail,ResultData120,4019
class ResultDivData {ResultDivData136,4549
  DivModel * solution;solution140,4581
  bool proven;proven141,4604
  long long int fail;fail142,4619
  long long int it_fail;it_fail143,4641
  long long int node;node144,4666
  long long int it_node;it_node145,4688
  int presolver_time;presolver_time146,4713
  int presolving_time;presolving_time147,4735
  int solving_time;solving_time148,4758
  int it_solving_time;it_solving_time149,4778
  ResultDivData(DivModel * solution, bool proven, long long int it_fail,ResultDivData151,4802
class GlobalData {GlobalData167,5338
  int global_n_int_vars;global_n_int_vars171,5367
  int global_n_bool_vars;global_n_bool_vars172,5392
  int global_n_set_vars;global_n_set_vars173,5418
  GlobalData(int global_n_int_vars0,GlobalData175,5444
string produce_json(const ResultData& rd,produce_json189,5701
string produce_json(const ResultDivData& rd,produce_json247,7577
class LocalJob : public Support::Job<LocalSolution * > {LocalJob315,9661
  LocalDivModel * l;l317,9729
  RBS<LocalDivModel,BAB> * e;e318,9750
  int b;b319,9780
  LocalJob(LocalDivModel *l0,LocalJob321,9797
  virtual LocalSolution * run(int) {run325,9907
class LocalJobs {LocalJobs347,10610
  map<block, LocalDivModel*> l;l349,10639
  map<block, RBS<LocalDivModel,BAB> *> e;e350,10671
  vector<block> blocks;blocks351,10713
  unsigned int k;k352,10737
  LocalJobs(map<block, LocalDivModel*> l0,LocalJobs354,10763
  bool operator ()(void) const {operator ()359,10943
  LocalJob * job(void) {job362,11010
string cost_status_report(DivModel * base, const DivModel * sol) {cost_status_report376,11497
bool has_solution(vector<ResultData> & results) {has_solution414,12644
static int do_mkdir(const string divs_path)do_mkdir423,12799
int main(int argc, char* argv[]) {main444,13405

procedures/presolverprocedures.cpp,496
TmpTableResult get_labelings(Parameters& input, RelaxedModel * base,get_labelings38,1868
ActiveTableResult get_labelings(RelaxedModel * base,get_labelings88,3112
bool exists_i_labeling(RelaxedModel * base, vector<operation> O) {exists_i_labeling133,4071
bool propagate(Parameters& input) {propagate151,4453
void disconnect_operand(Parameters& input, operand p) {disconnect_operand179,5276
void populate_r_domain(Model * m, temporary t, vector<int>& domain) {populate_r_domain193,5692

procedures/localdivprocedures.hpp,316
#define __LOCAL_DIV_PROCEDURES____LOCAL_DIV_PROCEDURES__36,1780
class LocalSolution {LocalSolution59,2493
  LocalDivModel * solution;solution61,2523
  block b;b62,2551
  LocalSolution() : solution(0), b(0) {}LocalSolution63,2562
  LocalSolution(LocalDivModel * solution1, block b1) :LocalSolution64,2603

procedures/presolverprocedures.hpp,766
#define __PRESOLVER_PROCEDURES____PRESOLVER_PROCEDURES__36,1823
typedef map<vector<int>, set<vector<int> > > at_map;at_map48,2075
const int RELAXED_TIMEOUT = 1;RELAXED_TIMEOUT50,2129
const int RELAXED_NO_TIMEOUT = 0;RELAXED_NO_TIMEOUT51,2160
const int RELAXED_SOLUTION_FOUND = 1;RELAXED_SOLUTION_FOUND52,2194
const int RELAXED_NO_SOLUTION_FOUND = 0;RELAXED_NO_SOLUTION_FOUND53,2232
class TmpTableResult {TmpTableResult55,2274
  at_map labelings;labelings57,2305
  int timeout_status;timeout_status58,2325
  int solution_status;solution_status59,2347
class ActiveTableResult {ActiveTableResult62,2374
  vector<vector<int> > labelings;labelings64,2408
  int timeout_status;timeout_status65,2442
  int solution_status;solution_status66,2464

procedures/localdivprocedures.cpp,523
Solution<LocalDivModel> local_problem(DecompDivModel * g1, block b) {local_problem37,1782
LocalDivModel * make_div_local(const DecompDivModel * gs, block b, int seed_correction, IntPropLevel p_ipl) {make_div_local62,2646
LocalDivModel * make_div_local(const DecompDivModel * gs, block b, int seed_correction) {make_div_local67,2843
init_local_problem(DecompDivModel *g, block b, int seed_correction) {init_local_problem75,3013
init_local_engine(LocalDivModel *l, ModelOptions *options) {init_local_engine127,4649

procedures/commonprocedures.hpp,1389
#define __COMMON_PROCEDURES____COMMON_PROCEDURES__39,1848
enum SolverResultSolverResult53,2155
  { SOME_SOLUTION, UNSATISFIABLE, LIMIT, OPTIMAL_SOLUTION, CACHED_SOLUTION,SOME_SOLUTION54,2173
  { SOME_SOLUTION, UNSATISFIABLE, LIMIT, OPTIMAL_SOLUTION, CACHED_SOLUTION,UNSATISFIABLE54,2173
  { SOME_SOLUTION, UNSATISFIABLE, LIMIT, OPTIMAL_SOLUTION, CACHED_SOLUTION,LIMIT54,2173
  { SOME_SOLUTION, UNSATISFIABLE, LIMIT, OPTIMAL_SOLUTION, CACHED_SOLUTION,OPTIMAL_SOLUTION54,2173
  { SOME_SOLUTION, UNSATISFIABLE, LIMIT, OPTIMAL_SOLUTION, CACHED_SOLUTION,CACHED_SOLUTION54,2173
    SHAVING_FAILURE, UNKNOWN };SHAVING_FAILURE55,2249
    SHAVING_FAILURE, UNKNOWN };UNKNOWN55,2249
class Solution {Solution59,2356
  SolverResult result;result61,2381
  T * solution;solution62,2404
  unsigned long int failures;failures63,2420
  unsigned long int nodes;nodes64,2450
  Solution() : result(UNKNOWN), solution(0), failures(0), nodes(0) {}Solution65,2477
  Solution(SolverResult result1, T * solution1, unsigned long int failures1,Solution66,2547
class IterationState {IterationState72,2800
  double a;a75,2851
  bool cf;cf77,2912
  IterationState(double a1, bool cf1) : a(a1), cf(cf1) {}IterationState79,2946
bool solved(T * problem, vector<T *> solutions) {solved93,3465
Solution<T> fetch_solution(T * problem, vector<T *> solutions) {fetch_solution101,3706

procedures/globalprocedures.cpp,3694
void presolve_effective_callee_saved_spilling(GlobalModel * base) {presolve_effective_callee_saved_spilling37,1780
void presolve_minimum_consumption(GlobalModel * base) {presolve_minimum_consumption59,2539
class RelaxationResult {RelaxationResult102,4159
  SolverResult result;result104,4192
  operation co;co105,4215
  operation oo;oo106,4231
  block b;b107,4247
  int lb;lb108,4258
  RelaxationResult() :RelaxationResult109,4268
  RelaxationResult(SolverResult result0, operation co0, operation oo0,RelaxationResult111,4368
class PresolveRelaxationJob : public Support::Job<RelaxationResult> {PresolveRelaxationJob116,4522
  LocalModel * ls;ls118,4600
  GIST_OPTIONS * lo;lo119,4619
  operation co;co120,4640
  activation_class ac;ac121,4656
  block b;b122,4679
  PresolveRelaxationJob(LocalModel * ls0, GIST_OPTIONS * lo0,PresolveRelaxationJob123,4690
  virtual RelaxationResult run(int) {run126,4874
class PresolveRelaxationJobs {PresolveRelaxationJobs168,6107
  const GlobalModel & base;base171,6216
  GIST_OPTIONS * lo;lo173,6286
  unsigned int k;k175,6330
  vector<tuple<operation, activation_class, block> > jobs;jobs177,6366
  PresolveRelaxationJobs(const GlobalModel & base0, GIST_OPTIONS * lo0) :PresolveRelaxationJobs179,6433
  bool operator ()(void) const {operator ()206,7706
  PresolveRelaxationJob * job(void) {job209,7771
void presolve_relaxation(GlobalModel * base, GIST_OPTIONS * lo) {presolve_relaxation231,8454
class ShavingResults {ShavingResults261,9310
  SolverResult result;result263,9341
  block b;b264,9364
  int local_cost_lb;local_cost_lb265,9375
  vector<pair<int, InstructionAssignment> > forbidden;forbidden266,9396
  ShavingResults() : result(UNKNOWN), b(-1), local_cost_lb(0) {}ShavingResults267,9451
  ShavingResults(block b0) : ShavingResults() {b = b0;}ShavingResults268,9516
class PresolveShavingJob : public Support::Job<ShavingResults> {PresolveShavingJob271,9576
  const GlobalModel & base;base273,9649
  block b;b274,9677
  PresolveShavingJob(const GlobalModel & base0, block b0) :PresolveShavingJob275,9688
  virtual ShavingResults run(int) {run277,9774
class PresolveShavingJobs {PresolveShavingJobs325,11358
  const GlobalModel & base;base328,11464
  unsigned int k;k330,11517
  PresolveShavingJobs(const GlobalModel & base0) : base(base0), k(0) {}PresolveShavingJobs332,11543
  bool operator ()(void) const {operator ()333,11615
  PresolveShavingJob * job(void) {job336,11689
void presolve_shaving(GlobalModel * base) {presolve_shaving346,11949
void presolve_global_cluster_impact(GlobalModel * base, GIST_OPTIONS * lo) {presolve_global_cluster_impact382,12973
void presolve_global_cluster_impact(presolve_global_cluster_impact395,13503
void presolve_global_shaving(GlobalModel * base) {presolve_global_shaving460,15489
void presolve_global_activation_shaving(GlobalModel * base) {presolve_global_activation_shaving490,16349
global_limit(Parameters * input, ModelOptions * options, int best) {global_limit520,17439
solve_global(GlobalModel * base, IterationState & state, vector<int> & best,solve_global528,17706
deactivate(GlobalModel * base, GlobalModel * gs,deactivate574,19078
SolverResult shave_local_costs(GlobalModel * base) {shave_local_costs583,19424
Solution<GlobalModel> solve_monolithic(GlobalModel * base, GIST_OPTIONS * go) {solve_monolithic621,20612
solve_monolithic_parallel(GlobalModel * base, GIST_OPTIONS *) {solve_monolithic_parallel679,22250
string global() { return "[global] "; }global739,24037
string pre() { return "[pre]\t "; }pre741,24078
string monolithic() { return "[mthic]\t "; }monolithic743,24115

procedures/commonprocedures.cpp,1259
void IterationState::next(ModelOptions * options) {next38,1822
bool IterationState::stop(ModelOptions * options) {stop47,2020
ostream& operator<<(ostream& os, const IterationState & state) {operator <<51,2121
Search::Stop * new_stop(double limit, ModelOptions * options) {new_stop56,2246
sorted_blocks(Parameters * input, map<block, SolverResult> & latest_result) {sorted_blocks66,2527
int score(SolverResult r) {score81,3100
vector<InstructionAssignment> shave_instructions(Model * base,shave_instructions101,3409
Gecode::SpaceStatus status_lb(GlobalModel * base) {status_lb121,4122
double optimality_gap(GlobalModel * base, const GlobalModel * sol,optimality_gap127,4251
void emit_lower_bound(const GlobalModel * base, bool proven) {emit_lower_bound142,4765
void emit_initial_gap(GlobalModel * base, const GlobalModel * sol) {emit_initial_gap154,5177
LocalModel * make_local(const GlobalModel * gs, block b) {make_local168,5663
LocalModel * make_local(const GlobalModel * gs, block b, IntPropLevel p_ipl) {make_local172,5762
bool infinite_register_atom(Parameters & input, register_atom ra) {infinite_register_atom177,5908
value_precede_chains(Parameters & input, Model * m, bool global, block b) {value_precede_chains196,6979

procedures/localprocedures.hpp,58
#define __LOCAL_PROCEDURES____LOCAL_PROCEDURES__36,1776

procedures/divprocedures.hpp,54
#define __DIV_PROCEDURES____DIV_PROCEDURES__36,1774

procedures/divprocedures.cpp,352
global_limit_2(Parameters * input, ModelOptions * options, int best) {global_limit_239,1796
find_optimal_solution(DivModel *base, DecompDivModel *dm, ModelOptions *options) {find_optimal_solution48,2048
solve_global(DivModel * base, IterationState & state, vector<int> & best,solve_global109,3616
string div() { return "[div]\t "; }div160,5034

procedures/localprocedures.cpp,555
Solution<LocalModel> local_problem(GlobalModel * g1, block b) {local_problem37,1779
solve_local_portfolio(LocalModel * base, GIST_OPTIONS * lo, int iteration) {solve_local_portfolio53,2356
solve_generic_portfolio(LocalModel * base, GIST_OPTIONS * lo, int iteration) {solve_generic_portfolio61,2618
solve_custom_portfolio(LocalModel * base, GIST_OPTIONS * lo, int iteration) {solve_custom_portfolio158,5762
solve_local(LocalModel * base, char search, GIST_OPTIONS * lo, int iteration) {solve_local280,9680
string local(block b) {local345,11381

procedures/globalprocedures.hpp,60
#define __GLOBAL_PROCEDURES____GLOBAL_PROCEDURES__36,1777

presolver/across.cpp,1604
void presolve_across(PresolverAsserts& PA,presolve_across39,1822
void alt_across_to_json(Parameters& input,alt_across_to_json63,2578
void across_to_json(Parameters& input,across_to_json97,3626
void collect_at_call(const Parameters& input, operation o, vector<operand>& P, vector<temporary>& T) {collect_at_call130,4550
void across_extra_regs(const Parameters& input, const vector<operand>& P, vector<register_atom>& E) {across_extra_regs141,4867
void gen_across_call(PresolverAsserts& PA,gen_across_call150,5157
void collect_before_call(PresolverAsserts& PA, const Parameters& input, operation o1, block b, map<temporary,presolver_disj>& Before) {collect_before_call189,6285
void collect_after_call(PresolverAsserts& PA, const Parameters& input, operation o1, block b, map<temporary,presolver_disj>& After) {collect_after_call228,7716
vector<pair<operation,presolver_conj>> extend_predecessors(const Parameters input,extend_predecessors267,9060
presolver_disj merge_disjunctions(const Parameters& input,merge_disjunctions292,9708
void nogoods_or_across(const Parameters& input,nogoods_or_across307,10163
vector<temporary> across_candidates(PresolverAsserts& PA, const Parameters& input, operation o1, block b) {across_candidates341,11104
pair<bool,presolver_conj> cond_caller_saved(const Parameters& input,cond_caller_saved377,12240
void cond_before_items(PresolverAsserts& PA,cond_before_items404,13146
map<temporary,presolver_disj> cond_before_filter(const Parameters& input,cond_before_filter489,15805
void alt_across_call(PresolverAsserts& PA,alt_across_call522,16847

presolver/diff_temps.hpp,46
#define __DIFF_TEMPS____DIFF_TEMPS__38,1875

presolver/last_use.cpp,74
void last_use(PresolverAsserts& PA, Parameters& input) {last_use37,1815

presolver/precedences.cpp,2381
void gen_fixed_precedences(const Parameters& input, precedence_set& PI) {gen_fixed_precedences35,1758
static bool distinct_cycle(const Parameters& input,distinct_cycle102,4608
void gen_min_con_erg(const Parameters& input,gen_min_con_erg112,4889
void gen_precs_precedences(const Parameters& input,gen_precs_precedences134,5481
multimap<operation, instruction> build_oI (const presolver_disj& Y) {build_oI167,6733
#define FastPair(FastPair184,7231
#define FastPairSource(FastPairSource186,7306
#define FastPairTarget(FastPairTarget187,7351
static int min_latency(const Parameters& input,min_latency189,7421
void gen_region_precedences(const Parameters& input,gen_region_precedences214,8163
void gen_region_init(const Parameters& input,gen_region_init242,9134
void gen_region_precedences_cond(const Parameters& input,gen_region_precedences_cond318,11779
void gen_region_precedences_block(const Parameters& input,gen_region_precedences_block400,14637
void partition_nodes(Digraph& G,partition_nodes419,15396
static bool has_edge_inside(map<unsigned long,int>& pweight_c,has_edge_inside430,15640
void gen_region_per_partition(const Parameters& input,gen_region_per_partition442,15949
void gen_region(const Parameters& input,gen_region525,18431
map<operation,int> dag_longest_paths_fwd(vector<operation>& region,dag_longest_paths_fwd605,21070
map<operation,int> dag_longest_paths_bwd(vector<operation>& region,dag_longest_paths_bwd629,21745
vector<operation> region_finishers(Digraph& R,region_finishers652,22311
void region_finishers_rec(vector<operation>& In,region_finishers_rec664,22699
void normalize_precedences(const Parameters& input, const precedence_set& P, vector<UnisonConstraintExpr>& P1) {normalize_precedences693,23661
void gen_before_precedences(const Parameters& input,gen_before_precedences826,28314
static void before_rule(const Parameters& input,before_rule860,29568
void gen_before_precedences1(const Parameters& input,gen_before_precedences1885,30356
void gen_long_latency(Parameters& input) {gen_long_latency918,31422
bool analyzable(UnisonConstraintExpr& nogood) {analyzable1035,34977
void test_redundancy(Parameters & input, GlobalModel * gm) {test_redundancy1058,35426
void subsumed_resources(Parameters& input) {subsumed_resources1115,37081
void computeWCET(Parameters &input) {computeWCET1154,38133

presolver/debug_print.hpp,301
#define __DEBUG_PRINT_H____DEBUG_PRINT_H__42,1943
void _debug_print(T e){_debug_print54,2162
void _debug_print(vector<T> v){_debug_print59,2223
void _debug_print(set<T> v){_debug_print69,2428
void debug_print(T e){debug_print79,2630
void debug_print(T e, string prefix){debug_print85,2712

presolver/quasi_adjacent.cpp,64
void quasi_adjacent(Parameters& input) {quasi_adjacent35,1763

presolver/dominance.cpp,1771
bool compression_1(const vector<vector<int>>& S) {compression_151,2337
int compression_2(const vector<vector<int>>& S, const vector<int>& O) {compression_290,3105
bool compression_3(const vector<vector<int>>& S) {compression_3110,3398
void sort_increasing_T(map<vector<temporary>,vector<temporary>>& M,sort_increasing_T129,3684
void temp_domination(Parameters & input) {temp_domination150,4314
void gen_dominates(Parameters & input) {gen_dominates194,5724
void gen_active_tables(Parameters & input, Support::Timer & timer,gen_active_tables232,6979
void assert_active_tables(Parameters & input,assert_active_tables302,9372
void decompose_copy_set(Parameters & input,decompose_copy_set348,10577
void assert_tmp_tables(Parameters & input,assert_tmp_tables417,12435
void tidy(Parameters & input) {tidy474,13993
vector<vector<int>> trim_tmp_tables(at_map S, temporary k) {trim_tmp_tables567,17142
vector<vector<int>> trim_clump(set<vector<int>> C, temporary k) {trim_clump577,17395
bool tmp_subsumes(vector<int> T1, vector<int> T2, temporary k) {tmp_subsumes588,17685
int optional_min_active_tables(Parameters& input, block b) {optional_min_active_tables603,18085
void filter_active_tables(Parameters & input) {filter_active_tables628,18568
void expr_operands(const UnisonConstraintExpr& e, vector<operand>& ps) {expr_operands690,20539
bool already_tabled(const vector<operand>& ps, map<operand, int>& P2Table) {already_tabled713,21008
UnisonConstraintExpr simplify_expr(const Parameters& input,simplify_expr728,21331
bool noop_copy_literal(const Parameters& input, const UnisonConstraintExpr& c) {noop_copy_literal804,23616
bool noop_copy_conjunction(const Parameters& input, const presolver_conj& c) {noop_copy_conjunction821,24131

presolver/presolve.hpp,42
#define __PRESOLVE____PRESOLVE__42,1946

presolver/infeasible_presolver.cpp,2874
InfeasiblePresolver::InfeasiblePresolver(PresolverAsserts& PA,InfeasiblePresolver43,1981
void InfeasiblePresolver::setup(void) {setup54,2220
void InfeasiblePresolver::pass1(vector<temporand_set>& Alldiffs, vector<presolver_conj>& Nogoods) {pass1261,8049
void InfeasiblePresolver::pass2(vector<presolver_conj>& Nogoods) {pass2298,9023
void InfeasiblePresolver::redefined_operand_nogoods(vector<presolver_conj>& Nogoods) {redefined_operand_nogoods328,9996
void InfeasiblePresolver::before_in_nogoods(vector<presolver_conj>& Nogoods) {before_in_nogoods372,11540
void InfeasiblePresolver::xchg_nogoods(vector<presolver_conj>& Nogoods) {xchg_nogoods387,12047
void InfeasiblePresolver::regdomain_nogoods(vector<presolver_conj>& Nogoods) {regdomain_nogoods420,13079
static void add_adhoc_constraint_instructions(UnisonConstraintExpr& e, vector<instruction>& A) {add_adhoc_constraint_instructions480,15086
void InfeasiblePresolver::dominsn_nogoods(vector<presolver_conj>& Nogoods) {dominsn_nogoods500,15490
InfeasiblePresolver::alldiffs_for_co_use(const temporand_set& D_u,alldiffs_for_co_use586,18604
InfeasiblePresolver::split_chunks_if_alldiff(const map<vector<temporary>, temporand_set >& M) {split_chunks_if_alldiff632,19704
bool InfeasiblePresolver::chunk_is_alldiff(const temporand_set& C) {chunk_is_alldiff654,20266
bool InfeasiblePresolver::has_def_proxy(const temporand_set& C, const operation o) {has_def_proxy664,20520
bool InfeasiblePresolver::has_use_proxy(const temporand_set& C, const operation o) {has_use_proxy680,20953
bool InfeasiblePresolver::has_disjoint_temporary_domains(const vector<operand>& P) {has_disjoint_temporary_domains703,21589
void InfeasiblePresolver::single_nogoods(const vector<temporand_set >& D,single_nogoods715,21882
void InfeasiblePresolver::double_nogoods(const vector<temporand_set >& D,double_nogoods767,23360
void InfeasiblePresolver::emit_nogood(const vector<vector<operand> >* R,emit_nogood839,25542
vector<vector<nogood_cand_set> > InfeasiblePresolver::gen_candidates(const vector<temporand_set>& D, const vector<vector<Temporand> >& U) {gen_candidates936,28446
bool InfeasiblePresolver::subsumed_nogood(const presolver_conj& conj) {subsumed_nogood1009,30523
void InfeasiblePresolver::cycle_dfs(const operation i,cycle_dfs1031,31173
void InfeasiblePresolver::break_cycle(const vector<operation>& scc,break_cycle1077,32313
void InfeasiblePresolver::detect_cycles(void) {detect_cycles1120,33501
InfeasiblePresolver::cartesian_product(const vector<temporand_set >& V) {cartesian_product1194,35633
void InfeasiblePresolver::gen_odd_even_operands(vector<bool>& odds,gen_odd_even_operands1211,36057
int InfeasiblePresolver::is_odd_even(const vector<operand>& Ps) {is_odd_even1238,36655
bool InfeasiblePresolver::exist_before(const vector<vector<operand> >& R,exist_before1275,37369

presolver/presolver-options.hpp,1134
#define __PRESOLVER_OPTIONS____PRESOLVER_OPTIONS__36,1777
class PresolverOptions : public InstanceOptions {PresolverOptions43,1883
  Driver::StringValueOption _output_file; // Output file_output_file49,1962
  Driver::StringValueOption _dzn_file; // .dzn file_dzn_file50,2019
  Driver::DoubleOption _timeout; // Timeout_timeout51,2071
  Driver::BoolOption _verbose; // Verbose mode_verbose52,2115
  Driver::BoolOption _regions; // Find regions_regions53,2162
  Driver::BoolOption _tabling; // Do tabling_tabling54,2209
  Driver::BoolOption _test; // Test the generated parameters against the input ones_test58,2269
  string output_file(void) const {return _output_file.value();}output_file64,2390
  string dzn_file(void) const {return _dzn_file.value();}dzn_file65,2454
  double timeout(void) const {return _timeout.value();}timeout66,2512
  bool verbose(void) const {return _verbose.value();}verbose67,2568
  bool regions(void) const {return _regions.value();}regions68,2622
  bool tabling(void) const {return _tabling.value();}tabling69,2676
  bool test(void) const {return _test.value();}test71,2731

presolver/across.hpp,177
#define __ACROSS____ACROSS__34,1749
class PresolverSetAcrossTuple {PresolverSetAcrossTuple47,2040
  operation o;o49,2080
  temporary t;t50,2095
  temporary u;u51,2110

presolver/unsafe_temp.cpp,255
bool temp_is_unsafe(const Parameters& input, const temporary t) {temp_is_unsafe40,1847
void temp_domain(Parameters& input) {temp_domain86,3533
void suppress_copies(Parameters& input, block b, vector<presolver_conj>& Nogoods) {suppress_copies96,3867

presolver/auxiliary.hpp,1089
#define __PRESOLVER_AUXILIARY____PRESOLVER_AUXILIARY__42,1967
typedef vector<vector<Temporand> > equality_set; // TODO use vectors instead of setequality_set53,2177
typedef vector<Temporand> temporand_set;         // TODO use vectors instead of settemporand_set54,2261
typedef vector<Temporand> nogood_cand;nogood_cand55,2345
typedef vector<nogood_cand> nogood_cand_set;nogood_cand_set56,2384
vector<T> ord_intersection(const vector<T>& v1, const vector<T>& v2){ord_intersection90,3765
bool ord_intersect(const vector<T>& v1, const vector<T>& v2) {ord_intersect98,4026
vector<T> ord_union(const vector<T>& v1, const vector<T>& v2){ord_union114,4426
vector<T> ord_difference(const vector<T>& v1, const vector<T>& v2){ord_difference122,4673
bool ord_contains(const vector<T>& v, const T& e){ord_contains130,4909
void vector_insert(vector<T>& v, const T& e){vector_insert137,5106
void vector_erase(vector<T>& v, const T& e){vector_erase147,5368
void deepsort(C& v) {deepsort252,8736
void run_test(string name, const C& expected, const C& actual) {run_test264,9082

presolver/auxiliary.cpp,4016
void generate_copyrel_temps_map(const Parameters& input, map<temporary, vector<temporary> >& m) {generate_copyrel_temps_map44,1962
void generate_congruence_operands(const Parameters& input, vector<vector<operand> >& congr_map) {generate_congruence_operands68,2546
void generate_copyrel_operands_map(const Parameters& input, vector<vector<operand> >& copyrel_operands) {generate_copyrel_operands_map81,2911
vector<operand> strip(const temporand_set& C){strip95,3358
bool subsumes(const presolver_conj& a, const presolver_conj& b) {subsumes105,3522
vector<presolver_conj> kernel_set(const vector<presolver_conj>& disj,kernel_set110,3651
presolver_disj filter_condition(const presolver_disj& disj,filter_condition148,4482
operand first_use(const Parameters& input, operation o) {first_use162,4983
operand first_def(const Parameters& input, operation o) {first_def172,5171
vector<operand> oper_uses(const Parameters& input, operation o) {oper_uses182,5360
vector<operand> oper_defs(const Parameters& input, operation o) {oper_defs189,5541
int oper_type(const Parameters& input, operation o) {oper_type196,5723
vector<operand> oper_opnds(const Parameters& input, operation o) {oper_opnds200,5806
vector<instruction> oper_insns(const Parameters& input, operation o) {oper_insns204,5906
operation opnd_oper(const Parameters& input, operand p) {opnd_oper208,6014
vector<temporary> opnd_temps(const Parameters& input, operand p) {opnd_temps212,6101
vector<temporary> opnd_temps_but_null(const Parameters& input, operand p) {opnd_temps_but_null217,6237
temporary first_temp(const Parameters& input, operand p) {first_temp226,6495
temporary first_temp_but_null(const Parameters& input, operand p) {first_temp_but_null230,6585
operation temp_oper(const Parameters& input, temporary t) {temp_oper237,6759
operand temp_def(const Parameters& input, temporary t) {temp_def241,6851
vector<operand> temp_uses(const Parameters& input, temporary t) {temp_uses245,6940
int temp_width(const Parameters& input, temporary t) {temp_width249,7034
Digraph dd_graph(const Parameters& input, block b) {dd_graph253,7119
block block_containing(const Parameters& input, const vector<operand>& P) {block_containing303,8702
bool p_preassigned_not(const Parameters& input, operand p) {p_preassigned_not321,9254
bool p_preassigned_caller_saved(const Parameters& input, operand p) {p_preassigned_caller_saved326,9364
bool p_preassigned_callee_saved(const Parameters& input, operand p) {p_preassigned_callee_saved331,9524
bool t_preassigned_not(const Parameters& input, temporary t) {t_preassigned_not336,9684
bool t_preassigned_caller_saved(const Parameters& input, temporary t) {t_preassigned_caller_saved341,9796
bool t_preassigned_callee_saved(const Parameters& input, temporary t) {t_preassigned_callee_saved346,9958
bool is_mandatory(const Parameters& input, operation o) {is_mandatory351,10120
void p_finite_register_classes(const Parameters& input, operand p, set<register_class>& RC) {p_finite_register_classes355,10236
presolver_conj normal_conjunction(const Parameters& input, const presolver_conj& c) {normal_conjunction366,10617
bool sorted_exprs(const presolver_conj& exprs) {sorted_exprs376,10919
UnisonConstraintExpr conj_to_expr(const presolver_conj& conjuncts) {conj_to_expr383,11086
UnisonConstraintExpr disj_to_expr(const presolver_disj& d) {disj_to_expr391,11307
presolver_disj expr_to_disj(const UnisonConstraintExpr& e) {expr_to_disj402,11705
bool disj_is_true(const presolver_disj& d) {disj_is_true420,12101
bool disj_is_false(const presolver_disj& d) {disj_is_false424,12187
void deepsort(int) {return;};deepsort428,12256
void deepsort(PresolverBefore &) {return;};deepsort430,12287
void deepsort(PresolverDominates & d) {deepsort432,12332
void deepsort(PresolverActiveTable & t) {deepsort438,12426
string pre() { return "[pre]\t "; }pre443,12524
bool timeout(Support::Timer & t, PresolverOptions & options, string pass,timeout445,12561

presolver/disjoint_set.hpp,395
#define __DISJOINT_SET_H____DISJOINT_SET_H__39,1893
class Disjoint_set {Disjoint_set46,1978
  map<T,T> parent;parent48,2008
  map<T,int> rank;rank49,2027
  Disjoint_set() {}Disjoint_set51,2054
  void make_set(const T& x){make_set54,2113
  bool contains(const T& x) {contains59,2183
  void make_union(const T& x, const T& y) {make_union64,2292
  T find(const T& x) {find79,2685

presolver/precedences.hpp,123
#define __PRECEDENCES____PRECEDENCES__34,1754
typedef vector<PresolverPrecedence> precedence_set;precedence_set53,2205

presolver/dominance.hpp,64
#define __PRESOLVER_DOMINANCE____PRESOLVER_DOMINANCE__37,1864

presolver/congr.hpp,36
#define __CONGR____CONGR__38,1870

presolver/before_presolver.hpp,330
#define __BEFORE_PRESOLVER____BEFORE_PRESOLVER__41,1964
typedef vector<PresolverBefore> beforeset;beforeset54,2165
class BeforePresolver {BeforePresolver56,2209
  Parameters& input;input58,2242
  vector<vector<operand> > congr_map;congr_map61,2306
  vector<vector<operand> > copy_rel_operands;copy_rel_operands64,2395

presolver/congr.cpp,321
void gen_congr(Parameters& input) {gen_congr41,1898
vector<vector<temporary>> gen_copyrel_star(const Parameters& input) {gen_copyrel_star109,4053
void gen_calleesaved_spill(Parameters& input) {gen_calleesaved_spill165,5505
vector<temporary> callee_saved_temps(const Parameters& input) {callee_saved_temps189,6205

presolver/before_presolver.cpp,655
BeforePresolver::BeforePresolver(Parameters& input) :BeforePresolver42,1971
void BeforePresolver::presolve(vector<presolver_conj>& Nogoods) {presolve45,2046
void BeforePresolver::gen_before(beforeset& B) {gen_before67,2617
void BeforePresolver::before1(operand p, operand q, vector<PresolverBefore>& B) {before1190,6276
vector<vector<operand> > BeforePresolver::emit_before(const vector<vector<int> >& C) {emit_before200,6486
void BeforePresolver::before_vs_nogoods(beforeset& T, vector<presolver_conj>& Nogoods) {before_vs_nogoods227,7189
void BeforePresolver::presolve(Parameters& input, vector<presolver_conj>& Nogoods) {presolve248,7875

presolver/last_use.hpp,42
#define __LAST_USE____LAST_USE__38,1873

presolver/presolver_asserts.hpp,489
#define __PRESOLVER_ASSERTS____PRESOLVER_ASSERTS__42,1986
class PresolverAsserts {PresolverAsserts47,2074
  PresolverAsserts() {};PresolverAsserts50,2116
  vector<vector<operand> > cur_difftemp;cur_difftemp52,2142
  vector<temporary> remat;remat53,2183
  vector<presolver_conj> more_nogoods;more_nogoods54,2210
  vector<presolver_conj> new_nogood;new_nogood55,2249
  vector<Digraph> dd_graph;dd_graph56,2286
  vector<Digraph> dd_graph_transpose;dd_graph_transpose57,2314

presolver/presolver-options.cpp,66
PresolverOptions::PresolverOptions(void)PresolverOptions37,1781

presolver/diff_temps.cpp,56
void diff_temps(Parameters& input) {diff_temps41,1903

presolver/digraph.cpp,1181
void vector_insert(vector<T>& v, const T& e){vector_insert43,1998
void vector_erase(vector<T>& v, const T& e){vector_erase51,2197
Digraph::Digraph(const vector<vector<vertex> >& edges) {Digraph59,2361
Digraph::Digraph(const vector<pair<int,int> >& edges) {Digraph69,2555
vector<vertex> Digraph::vertices() const {vertices79,2762
vector<edge> Digraph::edges() const {edges84,2821
vector<vertex> Digraph::neighbors(vertex v) {neighbors98,3059
Digraph Digraph::transpose() {transpose103,3137
Digraph Digraph::closure() {closure118,3446
Digraph Digraph::product(Digraph& B) {product134,3764
Digraph Digraph::reduction() {reduction160,4750
vector<vertex> Digraph::reachables(const vertex v) {reachables175,5037
void Digraph::bron_kerbosch2(vector<vertex>& R,bron_kerbosch2207,5572
vector<vector<vertex>> Digraph::max_cliques() {max_cliques233,6373
vector<vector<vertex> > Digraph::scc() {scc245,6603
void Digraph::dfs2(vertex v, map<vertex, bool>& visited, stack<vertex>& s) {dfs2289,7388
void Digraph::dfs2(vertex v, map<vertex, bool>& visited, vector<vertex>& s) {dfs2300,7603
ostream& operator<<(ostream& os, const Digraph& g){operator <<310,7828

presolver/unsafe_temp.hpp,48
#define __UNSAFE_TEMP____UNSAFE_TEMP__38,1876

presolver/quasi_adjacent.hpp,54
#define __QUASI_ADJACENT____QUASI_ADJACENT__34,1757

presolver/presolve.cpp,81
void presolve(Parameters & input, PresolverOptions & options) {presolve42,1913

presolver/digraph.hpp,538
#define __DIGRAPH_H____DIGRAPH_H__43,2004
typedef int vertex;vertex55,2187
typedef pair<vertex, vertex> edge;edge56,2207
class Digraph {Digraph58,2243
  map<vertex, vector<vertex> > adjacency_list;adjacency_list63,2420
  vector<vertex> V;V66,2502
vector<T> vector_intersection(const vector<T>& v1, const vector<T>& v2){vector_intersection126,4165
vector<T> vector_difference(const vector<T>& v1, const vector<T>& v2){vector_difference134,4429
bool vector_contains(const vector<T>& v, const T& e){vector_contains142,4668

presolver/infeasible_presolver.hpp,1249
#define __INFEASIBLE_PRESOLVER____INFEASIBLE_PRESOLVER__39,1940
class InfeasiblePresolver {InfeasiblePresolver55,2242
  PresolverAsserts& PA;PA57,2279
  Parameters& input;input59,2304
  const bool param_overstrict;param_overstrict61,2326
  PresolverOptions &options;options63,2358
  Support::Timer& timer;timer65,2388
  int cutoff;cutoff67,2414
  Disjoint_set<Temporand> ds_set;ds_set69,2429
  vector<vector<operand> > congr_map;congr_map72,2506
  map<temporary, vector<temporary> > copy_rel_temps;copy_rel_temps75,2600
  vector<bool> odd_operand;odd_operand78,2677
  vector<bool> even_operand;even_operand81,2730
  vector<vector<temporary>> temps_but_null;temps_but_null84,2805
  map<presolver_conj,bool> subsumed_nogood_map;subsumed_nogood_map87,2876
  vector<temporand_set> D, D_7, D_4;D90,2959
  vector<temporand_set> D, D_7, D_4;D_790,2959
  vector<temporand_set> D, D_7, D_4;D_490,2959
  equality_set U;U91,2996
  vector<vector<operand> > R;R94,3047
  vector<vector<temporand_set >> D_5;D_596,3078
  vector<vector<vector<nogood_cand_set> > > D_5_Cands;D_5_Cands98,3117
  vector<vector<nogood_cand_set> > D_4_Cands;D_4_Cands100,3173
  vector<vector<nogood_cand_set> > D_7_Cands;D_7_Cands102,3220

generated.mk,2018
CC            = gccCC11,457
CXX           = g++CXX12,477
DEFINES       = -DGRAPHICS -DNEWGV -DQT_NO_DEBUG -DQT_SCRIPT_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHAREDDEFINES13,497
CFLAGS        = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)CFLAGS14,601
CXXFLAGS      = -m64 -pipe -std=c++0x -O2 -D_REENTRANT -Wall -W $(DEFINES)CXXFLAGS15,665
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtScript -I/usr/include/qt4 -I.INCPATH16,740
LINK          = g++LINK17,900
LFLAGS        = -Wl,-O1LFLAGS18,920
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lgecodedriver -lgecodegist -lgecodesearch -lgecodeminimodel -lgecodeset -lgecodefloat -lgecodeint -lgecodekernel -lgecodesupport -lgvc -lcgraph -lcdt -lQtScript -lQtGui -lQtCore -lpthread LIBS19,944
AR            = ar cqsAR20,1190
RANLIB        = RANLIB21,1213
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmakeQMAKE22,1230
TAR           = tar -cfTAR23,1286
COMPRESS      = gzip -9fCOMPRESS24,1310
COPY          = cp -fCOPY25,1335
SED           = sedSED26,1357
COPY_FILE     = $(COPY)COPY_FILE27,1377
COPY_DIR      = $(COPY) -rCOPY_DIR28,1401
STRIP         = stripSTRIP29,1428
INSTALL_FILE  = install -m 644 -pINSTALL_FILE30,1450
INSTALL_DIR   = $(COPY_DIR)INSTALL_DIR31,1484
INSTALL_PROGRAM = install -m 755 -pINSTALL_PROGRAM32,1512
DEL_FILE      = rm -fDEL_FILE33,1548
SYMLINK       = ln -f -sSYMLINK34,1570
DEL_DIR       = rmdirDEL_DIR35,1595
MOVE          = mv -fMOVE36,1617
CHK_DIR_EXISTS= test -dCHK_DIR_EXISTS37,1639
MKDIR         = mkdir -pMKDIR38,1663
OBJECTS_DIR   = ./OBJECTS_DIR42,1715
SOURCES       = third-party/jsoncpp/json_reader.cpp \SOURCES46,1750
OBJECTS       = json_reader.o \OBJECTS92,3365
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \DIST139,4418
QMAKE_TARGET  = gecode-solverQMAKE_TARGET164,5620
DESTDIR       = DESTDIR165,5650
TARGET        = gecode-solverTARGET166,5667
