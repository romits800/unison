-- This file has been generated by specsgen. Do not modify by hand!

module Unison.Target.MSP430.SpecsGen.OperandInfo (operandInfo)
       where
import Unison
import Unison.Target.MSP430.SpecsGen.MSP430InstructionDecl
import Unison.Target.MSP430.SpecsGen.MSP430RegisterClassDecl
operandInfo i
  | i `elem` [NOP, RET, RETI] = ([], [])
  | i `elem` [POP16r] =
    ([], [TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem` [IMPLICIT_DEF, LOAD_STACK_GUARD] = ([], [BoundInfo])
  | i `elem` [Br, CALLr, PUSH16r] =
    ([TemporaryInfo (RegisterClass GR16) 0 False], [])
  | i `elem`
      [MOV16rr, Move, SAR16r1, SAR16r1c, SEXT16r, SHL16r1, SWPB16r,
       ZEXT16r]
    =
    ([TemporaryInfo (RegisterClass GR16) 0 False],
     [TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem` [MOV16rm_POST] =
    ([TemporaryInfo (RegisterClass GR16) 0 False],
     [TemporaryInfo (RegisterClass GR16) 1 False,
      TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem` [MOV8rm_POST] =
    ([TemporaryInfo (RegisterClass GR16) 0 False],
     [TemporaryInfo (RegisterClass GR8) 1 False,
      TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem` [BIT16rr, CMP16rr] =
    ([TemporaryInfo (RegisterClass GR16) 0 False,
      TemporaryInfo (RegisterClass GR16) 0 False],
     [])
  | i `elem`
      [ADC16rr, ADD16rr, AND16rr, BIC16rr, OR16rr, SBC16rr, SUB16rr,
       XOR16rr]
    =
    ([TemporaryInfo (RegisterClass GR16) 0 False,
      TemporaryInfo (RegisterClass GR16) 0 False],
     [TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem`
      [ADD16rm_POST, AND16rm_POST, OR16rm_POST, SUB16rm_POST,
       XOR16rm_POST]
    =
    ([TemporaryInfo (RegisterClass GR16) 0 False,
      TemporaryInfo (RegisterClass GR16) 0 False],
     [TemporaryInfo (RegisterClass GR16) 1 False,
      TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem` [BIT16rm, CMP16rm] =
    ([TemporaryInfo (RegisterClass GR16) 0 False,
      TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo],
     [])
  | i `elem`
      [ADC16rm, ADD16rm, AND16rm, BIC16rm, OR16rm, SBC16rm, SUB16rm,
       Select16, XOR16rm]
    =
    ([TemporaryInfo (RegisterClass GR16) 0 False,
      TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo],
     [TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem` [Shl16, Sra16, Srl16] =
    ([TemporaryInfo (RegisterClass GR16) 0 False,
      TemporaryInfo (RegisterClass GR8) 0 False],
     [TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem` [BIT16ri, Bm, CALLm, CMP16ri] =
    ([TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo], [])
  | i `elem`
      [ADC16ri, ADD16ri, AND16ri, Load, MOV16rm, MOVZX16rm8, OR16ri,
       SBC16ri, SUB16ri, XOR16ri]
    =
    ([TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo],
     [TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem` [MOV8rm] =
    ([TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo],
     [TemporaryInfo (RegisterClass GR8) 1 False])
  | i `elem`
      [ADC16mr, ADD16mr, AND16mr, BIC16mr, MOV16mr, OR16mr, SBC16mr,
       SUB16mr, Store, XOR16mr]
    =
    ([TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo,
      TemporaryInfo (RegisterClass GR16) 0 False],
     [])
  | i `elem`
      [ADC16mm, ADC8mm, ADD16mm, ADD8mm, AND16mm, AND8mm, BIC16mm,
       BIC8mm, BIT16mm, BIT8mm, MOV16mm, MOV8mm, OR16mm, OR8mm, SBC16mm,
       SBC8mm, SUB16mm, SUB8mm, XOR16mm, XOR8mm]
    =
    ([TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo,
      TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo],
     [])
  | i `elem`
      [ADC8mr, ADD8mr, AND8mr, BIC8mr, MOV8mr, OR8mr, SBC8mr, SUB8mr,
       XOR8mr]
    =
    ([TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo,
      TemporaryInfo (RegisterClass GR8) 0 False],
     [])
  | i `elem`
      [ADC16mi, ADC8mi, ADD16mi, ADD8mi, AND16mi, AND8mi, BIT16mi,
       BIT16mr, BIT8mi, BIT8mr, CMP16mi, CMP16mr, CMP8mi, CMP8mr, MOV16mi,
       MOV8mi, OR16mi, OR8mi, SBC16mi, SBC8mi, SUB16mi, SUB8mi, XOR16mi,
       XOR8mi]
    =
    ([TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo,
      BoundInfo],
     [])
  | i `elem` [MOVZX16rr8] =
    ([TemporaryInfo (RegisterClass GR8) 0 False],
     [TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem` [MOV8rr, SAR8r1, SAR8r1c, SHL8r1] =
    ([TemporaryInfo (RegisterClass GR8) 0 False],
     [TemporaryInfo (RegisterClass GR8) 1 False])
  | i `elem`
      [ADD8rm_POST, AND8rm_POST, OR8rm_POST, SUB8rm_POST, XOR8rm_POST]
    =
    ([TemporaryInfo (RegisterClass GR8) 0 False,
      TemporaryInfo (RegisterClass GR16) 0 False],
     [TemporaryInfo (RegisterClass GR8) 1 False,
      TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem` [BIT8rm, CMP8rm] =
    ([TemporaryInfo (RegisterClass GR8) 0 False,
      TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo],
     [])
  | i `elem`
      [ADC8rm, ADD8rm, AND8rm, BIC8rm, OR8rm, SBC8rm, SUB8rm, XOR8rm]
    =
    ([TemporaryInfo (RegisterClass GR8) 0 False,
      TemporaryInfo (RegisterClass GR16) 0 False, BoundInfo],
     [TemporaryInfo (RegisterClass GR8) 1 False])
  | i `elem` [BIT8rr, CMP8rr] =
    ([TemporaryInfo (RegisterClass GR8) 0 False,
      TemporaryInfo (RegisterClass GR8) 0 False],
     [])
  | i `elem`
      [ADC8rr, ADD8rr, AND8rr, BIC8rr, OR8rr, SBC8rr, SUB8rr, Shl8, Sra8,
       Srl8, XOR8rr]
    =
    ([TemporaryInfo (RegisterClass GR8) 0 False,
      TemporaryInfo (RegisterClass GR8) 0 False],
     [TemporaryInfo (RegisterClass GR8) 1 False])
  | i `elem` [Select8] =
    ([TemporaryInfo (RegisterClass GR8) 0 False,
      TemporaryInfo (RegisterClass GR8) 0 False, BoundInfo],
     [TemporaryInfo (RegisterClass GR8) 1 False])
  | i `elem` [BIT8ri, CMP8ri] =
    ([TemporaryInfo (RegisterClass GR8) 0 False, BoundInfo], [])
  | i `elem` [ADC8ri, ADD8ri, AND8ri, OR8ri, SBC8ri, SUB8ri, XOR8ri]
    =
    ([TemporaryInfo (RegisterClass GR8) 0 False, BoundInfo],
     [TemporaryInfo (RegisterClass GR8) 1 False])
  | i `elem`
      [ADJCALLSTACKDOWN, BUNDLE, Bi, CALLi, CFI_INSTRUCTION, DBG_VALUE,
       EH_LABEL, GC_LABEL, INLINEASM, KILL, LIFETIME_END, LIFETIME_START,
       PHI, STATEPOINT]
    = ([BoundInfo], [])
  | i `elem` [MOV16ri] =
    ([BoundInfo], [TemporaryInfo (RegisterClass GR16) 1 False])
  | i `elem` [MOV8ri] =
    ([BoundInfo], [TemporaryInfo (RegisterClass GR8) 1 False])
  | i `elem` [COPY, FAULTING_LOAD_OP] = ([BoundInfo], [BoundInfo])
  | i `elem` [ADJCALLSTACKUP, LOCAL_ESCAPE] =
    ([BoundInfo, BoundInfo], [])
  | i `elem` [COPY_TO_REGCLASS, EXTRACT_SUBREG, REG_SEQUENCE] =
    ([BoundInfo, BoundInfo], [BoundInfo])
  | i `elem` [STACKMAP] = ([BoundInfo, BoundInfo, BoundInfo], [])
  | i `elem` [INSERT_SUBREG, SUBREG_TO_REG] =
    ([BoundInfo, BoundInfo, BoundInfo], [BoundInfo])
  | i `elem` [PATCHPOINT] =
    ([BoundInfo, BoundInfo, BoundInfo, BoundInfo, BoundInfo,
      BoundInfo],
     [BoundInfo])
  | i `elem` [JMP] = ([BlockRefInfo], [])
  | i `elem` [JCC] = ([BlockRefInfo, BoundInfo], [])

